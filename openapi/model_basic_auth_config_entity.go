/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BasicAuthConfigEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BasicAuthConfigEntity{}

// BasicAuthConfigEntity struct for BasicAuthConfigEntity
type BasicAuthConfigEntity struct {
	AllowedPaths []string `json:"allowed-paths,omitempty"`
	AllowedUsers []string `json:"allowed-users,omitempty"`
	BlockRequests *bool `json:"block-requests,omitempty"`
	ShowWarningMessage *bool `json:"show-warning-message,omitempty"`
}

// NewBasicAuthConfigEntity instantiates a new BasicAuthConfigEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBasicAuthConfigEntity() *BasicAuthConfigEntity {
	this := BasicAuthConfigEntity{}
	return &this
}

// NewBasicAuthConfigEntityWithDefaults instantiates a new BasicAuthConfigEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBasicAuthConfigEntityWithDefaults() *BasicAuthConfigEntity {
	this := BasicAuthConfigEntity{}
	return &this
}

// GetAllowedPaths returns the AllowedPaths field value if set, zero value otherwise.
func (o *BasicAuthConfigEntity) GetAllowedPaths() []string {
	if o == nil || IsNil(o.AllowedPaths) {
		var ret []string
		return ret
	}
	return o.AllowedPaths
}

// GetAllowedPathsOk returns a tuple with the AllowedPaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicAuthConfigEntity) GetAllowedPathsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedPaths) {
		return nil, false
	}
	return o.AllowedPaths, true
}

// HasAllowedPaths returns a boolean if a field has been set.
func (o *BasicAuthConfigEntity) HasAllowedPaths() bool {
	if o != nil && !IsNil(o.AllowedPaths) {
		return true
	}

	return false
}

// SetAllowedPaths gets a reference to the given []string and assigns it to the AllowedPaths field.
func (o *BasicAuthConfigEntity) SetAllowedPaths(v []string) {
	o.AllowedPaths = v
}

// GetAllowedUsers returns the AllowedUsers field value if set, zero value otherwise.
func (o *BasicAuthConfigEntity) GetAllowedUsers() []string {
	if o == nil || IsNil(o.AllowedUsers) {
		var ret []string
		return ret
	}
	return o.AllowedUsers
}

// GetAllowedUsersOk returns a tuple with the AllowedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicAuthConfigEntity) GetAllowedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedUsers) {
		return nil, false
	}
	return o.AllowedUsers, true
}

// HasAllowedUsers returns a boolean if a field has been set.
func (o *BasicAuthConfigEntity) HasAllowedUsers() bool {
	if o != nil && !IsNil(o.AllowedUsers) {
		return true
	}

	return false
}

// SetAllowedUsers gets a reference to the given []string and assigns it to the AllowedUsers field.
func (o *BasicAuthConfigEntity) SetAllowedUsers(v []string) {
	o.AllowedUsers = v
}

// GetBlockRequests returns the BlockRequests field value if set, zero value otherwise.
func (o *BasicAuthConfigEntity) GetBlockRequests() bool {
	if o == nil || IsNil(o.BlockRequests) {
		var ret bool
		return ret
	}
	return *o.BlockRequests
}

// GetBlockRequestsOk returns a tuple with the BlockRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicAuthConfigEntity) GetBlockRequestsOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockRequests) {
		return nil, false
	}
	return o.BlockRequests, true
}

// HasBlockRequests returns a boolean if a field has been set.
func (o *BasicAuthConfigEntity) HasBlockRequests() bool {
	if o != nil && !IsNil(o.BlockRequests) {
		return true
	}

	return false
}

// SetBlockRequests gets a reference to the given bool and assigns it to the BlockRequests field.
func (o *BasicAuthConfigEntity) SetBlockRequests(v bool) {
	o.BlockRequests = &v
}

// GetShowWarningMessage returns the ShowWarningMessage field value if set, zero value otherwise.
func (o *BasicAuthConfigEntity) GetShowWarningMessage() bool {
	if o == nil || IsNil(o.ShowWarningMessage) {
		var ret bool
		return ret
	}
	return *o.ShowWarningMessage
}

// GetShowWarningMessageOk returns a tuple with the ShowWarningMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BasicAuthConfigEntity) GetShowWarningMessageOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowWarningMessage) {
		return nil, false
	}
	return o.ShowWarningMessage, true
}

// HasShowWarningMessage returns a boolean if a field has been set.
func (o *BasicAuthConfigEntity) HasShowWarningMessage() bool {
	if o != nil && !IsNil(o.ShowWarningMessage) {
		return true
	}

	return false
}

// SetShowWarningMessage gets a reference to the given bool and assigns it to the ShowWarningMessage field.
func (o *BasicAuthConfigEntity) SetShowWarningMessage(v bool) {
	o.ShowWarningMessage = &v
}

func (o BasicAuthConfigEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BasicAuthConfigEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedPaths) {
		toSerialize["allowed-paths"] = o.AllowedPaths
	}
	if !IsNil(o.AllowedUsers) {
		toSerialize["allowed-users"] = o.AllowedUsers
	}
	if !IsNil(o.BlockRequests) {
		toSerialize["block-requests"] = o.BlockRequests
	}
	if !IsNil(o.ShowWarningMessage) {
		toSerialize["show-warning-message"] = o.ShowWarningMessage
	}
	return toSerialize, nil
}

type NullableBasicAuthConfigEntity struct {
	value *BasicAuthConfigEntity
	isSet bool
}

func (v NullableBasicAuthConfigEntity) Get() *BasicAuthConfigEntity {
	return v.value
}

func (v *NullableBasicAuthConfigEntity) Set(val *BasicAuthConfigEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableBasicAuthConfigEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableBasicAuthConfigEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBasicAuthConfigEntity(val *BasicAuthConfigEntity) *NullableBasicAuthConfigEntity {
	return &NullableBasicAuthConfigEntity{value: val, isSet: true}
}

func (v NullableBasicAuthConfigEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBasicAuthConfigEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


