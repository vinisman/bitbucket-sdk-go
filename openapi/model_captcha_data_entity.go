/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CaptchaDataEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CaptchaDataEntity{}

// CaptchaDataEntity struct for CaptchaDataEntity
type CaptchaDataEntity struct {
	CaptchaId *string `json:"captchaId,omitempty"`
	CaptchaImageUrl *string `json:"captchaImageUrl,omitempty"`
}

// NewCaptchaDataEntity instantiates a new CaptchaDataEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCaptchaDataEntity() *CaptchaDataEntity {
	this := CaptchaDataEntity{}
	return &this
}

// NewCaptchaDataEntityWithDefaults instantiates a new CaptchaDataEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCaptchaDataEntityWithDefaults() *CaptchaDataEntity {
	this := CaptchaDataEntity{}
	return &this
}

// GetCaptchaId returns the CaptchaId field value if set, zero value otherwise.
func (o *CaptchaDataEntity) GetCaptchaId() string {
	if o == nil || IsNil(o.CaptchaId) {
		var ret string
		return ret
	}
	return *o.CaptchaId
}

// GetCaptchaIdOk returns a tuple with the CaptchaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptchaDataEntity) GetCaptchaIdOk() (*string, bool) {
	if o == nil || IsNil(o.CaptchaId) {
		return nil, false
	}
	return o.CaptchaId, true
}

// HasCaptchaId returns a boolean if a field has been set.
func (o *CaptchaDataEntity) HasCaptchaId() bool {
	if o != nil && !IsNil(o.CaptchaId) {
		return true
	}

	return false
}

// SetCaptchaId gets a reference to the given string and assigns it to the CaptchaId field.
func (o *CaptchaDataEntity) SetCaptchaId(v string) {
	o.CaptchaId = &v
}

// GetCaptchaImageUrl returns the CaptchaImageUrl field value if set, zero value otherwise.
func (o *CaptchaDataEntity) GetCaptchaImageUrl() string {
	if o == nil || IsNil(o.CaptchaImageUrl) {
		var ret string
		return ret
	}
	return *o.CaptchaImageUrl
}

// GetCaptchaImageUrlOk returns a tuple with the CaptchaImageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CaptchaDataEntity) GetCaptchaImageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CaptchaImageUrl) {
		return nil, false
	}
	return o.CaptchaImageUrl, true
}

// HasCaptchaImageUrl returns a boolean if a field has been set.
func (o *CaptchaDataEntity) HasCaptchaImageUrl() bool {
	if o != nil && !IsNil(o.CaptchaImageUrl) {
		return true
	}

	return false
}

// SetCaptchaImageUrl gets a reference to the given string and assigns it to the CaptchaImageUrl field.
func (o *CaptchaDataEntity) SetCaptchaImageUrl(v string) {
	o.CaptchaImageUrl = &v
}

func (o CaptchaDataEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CaptchaDataEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CaptchaId) {
		toSerialize["captchaId"] = o.CaptchaId
	}
	if !IsNil(o.CaptchaImageUrl) {
		toSerialize["captchaImageUrl"] = o.CaptchaImageUrl
	}
	return toSerialize, nil
}

type NullableCaptchaDataEntity struct {
	value *CaptchaDataEntity
	isSet bool
}

func (v NullableCaptchaDataEntity) Get() *CaptchaDataEntity {
	return v.value
}

func (v *NullableCaptchaDataEntity) Set(val *CaptchaDataEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableCaptchaDataEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableCaptchaDataEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCaptchaDataEntity(val *CaptchaDataEntity) *NullableCaptchaDataEntity {
	return &NullableCaptchaDataEntity{value: val, isSet: true}
}

func (v NullableCaptchaDataEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCaptchaDataEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


