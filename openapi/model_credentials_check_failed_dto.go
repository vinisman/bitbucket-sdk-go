/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CredentialsCheckFailedDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CredentialsCheckFailedDTO{}

// CredentialsCheckFailedDTO struct for CredentialsCheckFailedDTO
type CredentialsCheckFailedDTO struct {
	CaptchaRequired *bool `json:"captchaRequired,omitempty"`
	ExpiredCredentials *bool `json:"expiredCredentials,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewCredentialsCheckFailedDTO instantiates a new CredentialsCheckFailedDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialsCheckFailedDTO() *CredentialsCheckFailedDTO {
	this := CredentialsCheckFailedDTO{}
	return &this
}

// NewCredentialsCheckFailedDTOWithDefaults instantiates a new CredentialsCheckFailedDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialsCheckFailedDTOWithDefaults() *CredentialsCheckFailedDTO {
	this := CredentialsCheckFailedDTO{}
	return &this
}

// GetCaptchaRequired returns the CaptchaRequired field value if set, zero value otherwise.
func (o *CredentialsCheckFailedDTO) GetCaptchaRequired() bool {
	if o == nil || IsNil(o.CaptchaRequired) {
		var ret bool
		return ret
	}
	return *o.CaptchaRequired
}

// GetCaptchaRequiredOk returns a tuple with the CaptchaRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsCheckFailedDTO) GetCaptchaRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.CaptchaRequired) {
		return nil, false
	}
	return o.CaptchaRequired, true
}

// HasCaptchaRequired returns a boolean if a field has been set.
func (o *CredentialsCheckFailedDTO) HasCaptchaRequired() bool {
	if o != nil && !IsNil(o.CaptchaRequired) {
		return true
	}

	return false
}

// SetCaptchaRequired gets a reference to the given bool and assigns it to the CaptchaRequired field.
func (o *CredentialsCheckFailedDTO) SetCaptchaRequired(v bool) {
	o.CaptchaRequired = &v
}

// GetExpiredCredentials returns the ExpiredCredentials field value if set, zero value otherwise.
func (o *CredentialsCheckFailedDTO) GetExpiredCredentials() bool {
	if o == nil || IsNil(o.ExpiredCredentials) {
		var ret bool
		return ret
	}
	return *o.ExpiredCredentials
}

// GetExpiredCredentialsOk returns a tuple with the ExpiredCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsCheckFailedDTO) GetExpiredCredentialsOk() (*bool, bool) {
	if o == nil || IsNil(o.ExpiredCredentials) {
		return nil, false
	}
	return o.ExpiredCredentials, true
}

// HasExpiredCredentials returns a boolean if a field has been set.
func (o *CredentialsCheckFailedDTO) HasExpiredCredentials() bool {
	if o != nil && !IsNil(o.ExpiredCredentials) {
		return true
	}

	return false
}

// SetExpiredCredentials gets a reference to the given bool and assigns it to the ExpiredCredentials field.
func (o *CredentialsCheckFailedDTO) SetExpiredCredentials(v bool) {
	o.ExpiredCredentials = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CredentialsCheckFailedDTO) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialsCheckFailedDTO) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CredentialsCheckFailedDTO) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CredentialsCheckFailedDTO) SetMessage(v string) {
	o.Message = &v
}

func (o CredentialsCheckFailedDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CredentialsCheckFailedDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CaptchaRequired) {
		toSerialize["captchaRequired"] = o.CaptchaRequired
	}
	if !IsNil(o.ExpiredCredentials) {
		toSerialize["expiredCredentials"] = o.ExpiredCredentials
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableCredentialsCheckFailedDTO struct {
	value *CredentialsCheckFailedDTO
	isSet bool
}

func (v NullableCredentialsCheckFailedDTO) Get() *CredentialsCheckFailedDTO {
	return v.value
}

func (v *NullableCredentialsCheckFailedDTO) Set(val *CredentialsCheckFailedDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialsCheckFailedDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialsCheckFailedDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialsCheckFailedDTO(val *CredentialsCheckFailedDTO) *NullableCredentialsCheckFailedDTO {
	return &NullableCredentialsCheckFailedDTO{value: val, isSet: true}
}

func (v NullableCredentialsCheckFailedDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialsCheckFailedDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


