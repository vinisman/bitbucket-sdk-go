/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExampleJsonLastModifiedCallback type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExampleJsonLastModifiedCallback{}

// ExampleJsonLastModifiedCallback struct for ExampleJsonLastModifiedCallback
type ExampleJsonLastModifiedCallback struct {
	LatestCommit *RestChangesetToCommit `json:"latestCommit,omitempty"`
	PomXml *RestChangesetToCommit `json:"pomXml,omitempty"`
	ReadmeMd *RestChangesetToCommit `json:"readmeMd,omitempty"`
}

// NewExampleJsonLastModifiedCallback instantiates a new ExampleJsonLastModifiedCallback object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExampleJsonLastModifiedCallback() *ExampleJsonLastModifiedCallback {
	this := ExampleJsonLastModifiedCallback{}
	return &this
}

// NewExampleJsonLastModifiedCallbackWithDefaults instantiates a new ExampleJsonLastModifiedCallback object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExampleJsonLastModifiedCallbackWithDefaults() *ExampleJsonLastModifiedCallback {
	this := ExampleJsonLastModifiedCallback{}
	return &this
}

// GetLatestCommit returns the LatestCommit field value if set, zero value otherwise.
func (o *ExampleJsonLastModifiedCallback) GetLatestCommit() RestChangesetToCommit {
	if o == nil || IsNil(o.LatestCommit) {
		var ret RestChangesetToCommit
		return ret
	}
	return *o.LatestCommit
}

// GetLatestCommitOk returns a tuple with the LatestCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleJsonLastModifiedCallback) GetLatestCommitOk() (*RestChangesetToCommit, bool) {
	if o == nil || IsNil(o.LatestCommit) {
		return nil, false
	}
	return o.LatestCommit, true
}

// HasLatestCommit returns a boolean if a field has been set.
func (o *ExampleJsonLastModifiedCallback) HasLatestCommit() bool {
	if o != nil && !IsNil(o.LatestCommit) {
		return true
	}

	return false
}

// SetLatestCommit gets a reference to the given RestChangesetToCommit and assigns it to the LatestCommit field.
func (o *ExampleJsonLastModifiedCallback) SetLatestCommit(v RestChangesetToCommit) {
	o.LatestCommit = &v
}

// GetPomXml returns the PomXml field value if set, zero value otherwise.
func (o *ExampleJsonLastModifiedCallback) GetPomXml() RestChangesetToCommit {
	if o == nil || IsNil(o.PomXml) {
		var ret RestChangesetToCommit
		return ret
	}
	return *o.PomXml
}

// GetPomXmlOk returns a tuple with the PomXml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleJsonLastModifiedCallback) GetPomXmlOk() (*RestChangesetToCommit, bool) {
	if o == nil || IsNil(o.PomXml) {
		return nil, false
	}
	return o.PomXml, true
}

// HasPomXml returns a boolean if a field has been set.
func (o *ExampleJsonLastModifiedCallback) HasPomXml() bool {
	if o != nil && !IsNil(o.PomXml) {
		return true
	}

	return false
}

// SetPomXml gets a reference to the given RestChangesetToCommit and assigns it to the PomXml field.
func (o *ExampleJsonLastModifiedCallback) SetPomXml(v RestChangesetToCommit) {
	o.PomXml = &v
}

// GetReadmeMd returns the ReadmeMd field value if set, zero value otherwise.
func (o *ExampleJsonLastModifiedCallback) GetReadmeMd() RestChangesetToCommit {
	if o == nil || IsNil(o.ReadmeMd) {
		var ret RestChangesetToCommit
		return ret
	}
	return *o.ReadmeMd
}

// GetReadmeMdOk returns a tuple with the ReadmeMd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleJsonLastModifiedCallback) GetReadmeMdOk() (*RestChangesetToCommit, bool) {
	if o == nil || IsNil(o.ReadmeMd) {
		return nil, false
	}
	return o.ReadmeMd, true
}

// HasReadmeMd returns a boolean if a field has been set.
func (o *ExampleJsonLastModifiedCallback) HasReadmeMd() bool {
	if o != nil && !IsNil(o.ReadmeMd) {
		return true
	}

	return false
}

// SetReadmeMd gets a reference to the given RestChangesetToCommit and assigns it to the ReadmeMd field.
func (o *ExampleJsonLastModifiedCallback) SetReadmeMd(v RestChangesetToCommit) {
	o.ReadmeMd = &v
}

func (o ExampleJsonLastModifiedCallback) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExampleJsonLastModifiedCallback) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LatestCommit) {
		toSerialize["latestCommit"] = o.LatestCommit
	}
	if !IsNil(o.PomXml) {
		toSerialize["pomXml"] = o.PomXml
	}
	if !IsNil(o.ReadmeMd) {
		toSerialize["readmeMd"] = o.ReadmeMd
	}
	return toSerialize, nil
}

type NullableExampleJsonLastModifiedCallback struct {
	value *ExampleJsonLastModifiedCallback
	isSet bool
}

func (v NullableExampleJsonLastModifiedCallback) Get() *ExampleJsonLastModifiedCallback {
	return v.value
}

func (v *NullableExampleJsonLastModifiedCallback) Set(val *ExampleJsonLastModifiedCallback) {
	v.value = val
	v.isSet = true
}

func (v NullableExampleJsonLastModifiedCallback) IsSet() bool {
	return v.isSet
}

func (v *NullableExampleJsonLastModifiedCallback) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExampleJsonLastModifiedCallback(val *ExampleJsonLastModifiedCallback) *NullableExampleJsonLastModifiedCallback {
	return &NullableExampleJsonLastModifiedCallback{value: val, isSet: true}
}

func (v NullableExampleJsonLastModifiedCallback) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExampleJsonLastModifiedCallback) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


