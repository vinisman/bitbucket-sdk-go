/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExampleSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExampleSettings{}

// ExampleSettings struct for ExampleSettings
type ExampleSettings struct {
	BooleanValue *bool `json:"booleanValue,omitempty"`
	DoubleValue *float64 `json:"doubleValue,omitempty"`
	IntegerValue *int32 `json:"integerValue,omitempty"`
	LongValue *int64 `json:"longValue,omitempty"`
	StringValue *string `json:"stringValue,omitempty"`
}

// NewExampleSettings instantiates a new ExampleSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExampleSettings() *ExampleSettings {
	this := ExampleSettings{}
	return &this
}

// NewExampleSettingsWithDefaults instantiates a new ExampleSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExampleSettingsWithDefaults() *ExampleSettings {
	this := ExampleSettings{}
	return &this
}

// GetBooleanValue returns the BooleanValue field value if set, zero value otherwise.
func (o *ExampleSettings) GetBooleanValue() bool {
	if o == nil || IsNil(o.BooleanValue) {
		var ret bool
		return ret
	}
	return *o.BooleanValue
}

// GetBooleanValueOk returns a tuple with the BooleanValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleSettings) GetBooleanValueOk() (*bool, bool) {
	if o == nil || IsNil(o.BooleanValue) {
		return nil, false
	}
	return o.BooleanValue, true
}

// HasBooleanValue returns a boolean if a field has been set.
func (o *ExampleSettings) HasBooleanValue() bool {
	if o != nil && !IsNil(o.BooleanValue) {
		return true
	}

	return false
}

// SetBooleanValue gets a reference to the given bool and assigns it to the BooleanValue field.
func (o *ExampleSettings) SetBooleanValue(v bool) {
	o.BooleanValue = &v
}

// GetDoubleValue returns the DoubleValue field value if set, zero value otherwise.
func (o *ExampleSettings) GetDoubleValue() float64 {
	if o == nil || IsNil(o.DoubleValue) {
		var ret float64
		return ret
	}
	return *o.DoubleValue
}

// GetDoubleValueOk returns a tuple with the DoubleValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleSettings) GetDoubleValueOk() (*float64, bool) {
	if o == nil || IsNil(o.DoubleValue) {
		return nil, false
	}
	return o.DoubleValue, true
}

// HasDoubleValue returns a boolean if a field has been set.
func (o *ExampleSettings) HasDoubleValue() bool {
	if o != nil && !IsNil(o.DoubleValue) {
		return true
	}

	return false
}

// SetDoubleValue gets a reference to the given float64 and assigns it to the DoubleValue field.
func (o *ExampleSettings) SetDoubleValue(v float64) {
	o.DoubleValue = &v
}

// GetIntegerValue returns the IntegerValue field value if set, zero value otherwise.
func (o *ExampleSettings) GetIntegerValue() int32 {
	if o == nil || IsNil(o.IntegerValue) {
		var ret int32
		return ret
	}
	return *o.IntegerValue
}

// GetIntegerValueOk returns a tuple with the IntegerValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleSettings) GetIntegerValueOk() (*int32, bool) {
	if o == nil || IsNil(o.IntegerValue) {
		return nil, false
	}
	return o.IntegerValue, true
}

// HasIntegerValue returns a boolean if a field has been set.
func (o *ExampleSettings) HasIntegerValue() bool {
	if o != nil && !IsNil(o.IntegerValue) {
		return true
	}

	return false
}

// SetIntegerValue gets a reference to the given int32 and assigns it to the IntegerValue field.
func (o *ExampleSettings) SetIntegerValue(v int32) {
	o.IntegerValue = &v
}

// GetLongValue returns the LongValue field value if set, zero value otherwise.
func (o *ExampleSettings) GetLongValue() int64 {
	if o == nil || IsNil(o.LongValue) {
		var ret int64
		return ret
	}
	return *o.LongValue
}

// GetLongValueOk returns a tuple with the LongValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleSettings) GetLongValueOk() (*int64, bool) {
	if o == nil || IsNil(o.LongValue) {
		return nil, false
	}
	return o.LongValue, true
}

// HasLongValue returns a boolean if a field has been set.
func (o *ExampleSettings) HasLongValue() bool {
	if o != nil && !IsNil(o.LongValue) {
		return true
	}

	return false
}

// SetLongValue gets a reference to the given int64 and assigns it to the LongValue field.
func (o *ExampleSettings) SetLongValue(v int64) {
	o.LongValue = &v
}

// GetStringValue returns the StringValue field value if set, zero value otherwise.
func (o *ExampleSettings) GetStringValue() string {
	if o == nil || IsNil(o.StringValue) {
		var ret string
		return ret
	}
	return *o.StringValue
}

// GetStringValueOk returns a tuple with the StringValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleSettings) GetStringValueOk() (*string, bool) {
	if o == nil || IsNil(o.StringValue) {
		return nil, false
	}
	return o.StringValue, true
}

// HasStringValue returns a boolean if a field has been set.
func (o *ExampleSettings) HasStringValue() bool {
	if o != nil && !IsNil(o.StringValue) {
		return true
	}

	return false
}

// SetStringValue gets a reference to the given string and assigns it to the StringValue field.
func (o *ExampleSettings) SetStringValue(v string) {
	o.StringValue = &v
}

func (o ExampleSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExampleSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BooleanValue) {
		toSerialize["booleanValue"] = o.BooleanValue
	}
	if !IsNil(o.DoubleValue) {
		toSerialize["doubleValue"] = o.DoubleValue
	}
	if !IsNil(o.IntegerValue) {
		toSerialize["integerValue"] = o.IntegerValue
	}
	if !IsNil(o.LongValue) {
		toSerialize["longValue"] = o.LongValue
	}
	if !IsNil(o.StringValue) {
		toSerialize["stringValue"] = o.StringValue
	}
	return toSerialize, nil
}

type NullableExampleSettings struct {
	value *ExampleSettings
	isSet bool
}

func (v NullableExampleSettings) Get() *ExampleSettings {
	return v.value
}

func (v *NullableExampleSettings) Set(val *ExampleSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableExampleSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableExampleSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExampleSettings(val *ExampleSettings) *NullableExampleSettings {
	return &NullableExampleSettings{value: val, isSet: true}
}

func (v NullableExampleSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExampleSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


