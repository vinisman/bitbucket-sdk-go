/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExampleSettingsMap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExampleSettingsMap{}

// ExampleSettingsMap struct for ExampleSettingsMap
type ExampleSettingsMap struct {
	BooleanKey *bool `json:"boolean key,omitempty"`
	LongKey *float32 `json:"long key,omitempty"`
	StringKey *string `json:"string key,omitempty"`
}

// NewExampleSettingsMap instantiates a new ExampleSettingsMap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExampleSettingsMap() *ExampleSettingsMap {
	this := ExampleSettingsMap{}
	return &this
}

// NewExampleSettingsMapWithDefaults instantiates a new ExampleSettingsMap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExampleSettingsMapWithDefaults() *ExampleSettingsMap {
	this := ExampleSettingsMap{}
	return &this
}

// GetBooleanKey returns the BooleanKey field value if set, zero value otherwise.
func (o *ExampleSettingsMap) GetBooleanKey() bool {
	if o == nil || IsNil(o.BooleanKey) {
		var ret bool
		return ret
	}
	return *o.BooleanKey
}

// GetBooleanKeyOk returns a tuple with the BooleanKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleSettingsMap) GetBooleanKeyOk() (*bool, bool) {
	if o == nil || IsNil(o.BooleanKey) {
		return nil, false
	}
	return o.BooleanKey, true
}

// HasBooleanKey returns a boolean if a field has been set.
func (o *ExampleSettingsMap) HasBooleanKey() bool {
	if o != nil && !IsNil(o.BooleanKey) {
		return true
	}

	return false
}

// SetBooleanKey gets a reference to the given bool and assigns it to the BooleanKey field.
func (o *ExampleSettingsMap) SetBooleanKey(v bool) {
	o.BooleanKey = &v
}

// GetLongKey returns the LongKey field value if set, zero value otherwise.
func (o *ExampleSettingsMap) GetLongKey() float32 {
	if o == nil || IsNil(o.LongKey) {
		var ret float32
		return ret
	}
	return *o.LongKey
}

// GetLongKeyOk returns a tuple with the LongKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleSettingsMap) GetLongKeyOk() (*float32, bool) {
	if o == nil || IsNil(o.LongKey) {
		return nil, false
	}
	return o.LongKey, true
}

// HasLongKey returns a boolean if a field has been set.
func (o *ExampleSettingsMap) HasLongKey() bool {
	if o != nil && !IsNil(o.LongKey) {
		return true
	}

	return false
}

// SetLongKey gets a reference to the given float32 and assigns it to the LongKey field.
func (o *ExampleSettingsMap) SetLongKey(v float32) {
	o.LongKey = &v
}

// GetStringKey returns the StringKey field value if set, zero value otherwise.
func (o *ExampleSettingsMap) GetStringKey() string {
	if o == nil || IsNil(o.StringKey) {
		var ret string
		return ret
	}
	return *o.StringKey
}

// GetStringKeyOk returns a tuple with the StringKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleSettingsMap) GetStringKeyOk() (*string, bool) {
	if o == nil || IsNil(o.StringKey) {
		return nil, false
	}
	return o.StringKey, true
}

// HasStringKey returns a boolean if a field has been set.
func (o *ExampleSettingsMap) HasStringKey() bool {
	if o != nil && !IsNil(o.StringKey) {
		return true
	}

	return false
}

// SetStringKey gets a reference to the given string and assigns it to the StringKey field.
func (o *ExampleSettingsMap) SetStringKey(v string) {
	o.StringKey = &v
}

func (o ExampleSettingsMap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExampleSettingsMap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BooleanKey) {
		toSerialize["boolean key"] = o.BooleanKey
	}
	if !IsNil(o.LongKey) {
		toSerialize["long key"] = o.LongKey
	}
	if !IsNil(o.StringKey) {
		toSerialize["string key"] = o.StringKey
	}
	return toSerialize, nil
}

type NullableExampleSettingsMap struct {
	value *ExampleSettingsMap
	isSet bool
}

func (v NullableExampleSettingsMap) Get() *ExampleSettingsMap {
	return v.value
}

func (v *NullableExampleSettingsMap) Set(val *ExampleSettingsMap) {
	v.value = val
	v.isSet = true
}

func (v NullableExampleSettingsMap) IsSet() bool {
	return v.isSet
}

func (v *NullableExampleSettingsMap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExampleSettingsMap(val *ExampleSettingsMap) *NullableExampleSettingsMap {
	return &NullableExampleSettingsMap{value: val, isSet: true}
}

func (v NullableExampleSettingsMap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExampleSettingsMap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


