/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ExampleStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExampleStatus{}

// ExampleStatus struct for ExampleStatus
type ExampleStatus struct {
	CurrentNumberOfUsers *int32 `json:"currentNumberOfUsers,omitempty"`
	ServerId *string `json:"serverId,omitempty"`
}

// NewExampleStatus instantiates a new ExampleStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExampleStatus() *ExampleStatus {
	this := ExampleStatus{}
	return &this
}

// NewExampleStatusWithDefaults instantiates a new ExampleStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExampleStatusWithDefaults() *ExampleStatus {
	this := ExampleStatus{}
	return &this
}

// GetCurrentNumberOfUsers returns the CurrentNumberOfUsers field value if set, zero value otherwise.
func (o *ExampleStatus) GetCurrentNumberOfUsers() int32 {
	if o == nil || IsNil(o.CurrentNumberOfUsers) {
		var ret int32
		return ret
	}
	return *o.CurrentNumberOfUsers
}

// GetCurrentNumberOfUsersOk returns a tuple with the CurrentNumberOfUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleStatus) GetCurrentNumberOfUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentNumberOfUsers) {
		return nil, false
	}
	return o.CurrentNumberOfUsers, true
}

// HasCurrentNumberOfUsers returns a boolean if a field has been set.
func (o *ExampleStatus) HasCurrentNumberOfUsers() bool {
	if o != nil && !IsNil(o.CurrentNumberOfUsers) {
		return true
	}

	return false
}

// SetCurrentNumberOfUsers gets a reference to the given int32 and assigns it to the CurrentNumberOfUsers field.
func (o *ExampleStatus) SetCurrentNumberOfUsers(v int32) {
	o.CurrentNumberOfUsers = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *ExampleStatus) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExampleStatus) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *ExampleStatus) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *ExampleStatus) SetServerId(v string) {
	o.ServerId = &v
}

func (o ExampleStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExampleStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentNumberOfUsers) {
		toSerialize["currentNumberOfUsers"] = o.CurrentNumberOfUsers
	}
	if !IsNil(o.ServerId) {
		toSerialize["serverId"] = o.ServerId
	}
	return toSerialize, nil
}

type NullableExampleStatus struct {
	value *ExampleStatus
	isSet bool
}

func (v NullableExampleStatus) Get() *ExampleStatus {
	return v.value
}

func (v *NullableExampleStatus) Set(val *ExampleStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableExampleStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableExampleStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExampleStatus(val *ExampleStatus) *NullableExampleStatus {
	return &NullableExampleStatus{value: val, isSet: true}
}

func (v NullableExampleStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExampleStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


