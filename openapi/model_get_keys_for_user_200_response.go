/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetKeysForUser200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetKeysForUser200Response{}

// GetKeysForUser200Response struct for GetKeysForUser200Response
type GetKeysForUser200Response struct {
	IsLastPage *bool `json:"isLastPage,omitempty"`
	Limit *float32 `json:"limit,omitempty"`
	NextPageStart *int32 `json:"nextPageStart,omitempty"`
	Size *float32 `json:"size,omitempty"`
	Start *int32 `json:"start,omitempty"`
	Values []RestGpgKey `json:"values,omitempty"`
}

// NewGetKeysForUser200Response instantiates a new GetKeysForUser200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetKeysForUser200Response() *GetKeysForUser200Response {
	this := GetKeysForUser200Response{}
	return &this
}

// NewGetKeysForUser200ResponseWithDefaults instantiates a new GetKeysForUser200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetKeysForUser200ResponseWithDefaults() *GetKeysForUser200Response {
	this := GetKeysForUser200Response{}
	return &this
}

// GetIsLastPage returns the IsLastPage field value if set, zero value otherwise.
func (o *GetKeysForUser200Response) GetIsLastPage() bool {
	if o == nil || IsNil(o.IsLastPage) {
		var ret bool
		return ret
	}
	return *o.IsLastPage
}

// GetIsLastPageOk returns a tuple with the IsLastPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeysForUser200Response) GetIsLastPageOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLastPage) {
		return nil, false
	}
	return o.IsLastPage, true
}

// HasIsLastPage returns a boolean if a field has been set.
func (o *GetKeysForUser200Response) HasIsLastPage() bool {
	if o != nil && !IsNil(o.IsLastPage) {
		return true
	}

	return false
}

// SetIsLastPage gets a reference to the given bool and assigns it to the IsLastPage field.
func (o *GetKeysForUser200Response) SetIsLastPage(v bool) {
	o.IsLastPage = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetKeysForUser200Response) GetLimit() float32 {
	if o == nil || IsNil(o.Limit) {
		var ret float32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeysForUser200Response) GetLimitOk() (*float32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetKeysForUser200Response) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given float32 and assigns it to the Limit field.
func (o *GetKeysForUser200Response) SetLimit(v float32) {
	o.Limit = &v
}

// GetNextPageStart returns the NextPageStart field value if set, zero value otherwise.
func (o *GetKeysForUser200Response) GetNextPageStart() int32 {
	if o == nil || IsNil(o.NextPageStart) {
		var ret int32
		return ret
	}
	return *o.NextPageStart
}

// GetNextPageStartOk returns a tuple with the NextPageStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeysForUser200Response) GetNextPageStartOk() (*int32, bool) {
	if o == nil || IsNil(o.NextPageStart) {
		return nil, false
	}
	return o.NextPageStart, true
}

// HasNextPageStart returns a boolean if a field has been set.
func (o *GetKeysForUser200Response) HasNextPageStart() bool {
	if o != nil && !IsNil(o.NextPageStart) {
		return true
	}

	return false
}

// SetNextPageStart gets a reference to the given int32 and assigns it to the NextPageStart field.
func (o *GetKeysForUser200Response) SetNextPageStart(v int32) {
	o.NextPageStart = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *GetKeysForUser200Response) GetSize() float32 {
	if o == nil || IsNil(o.Size) {
		var ret float32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeysForUser200Response) GetSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *GetKeysForUser200Response) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given float32 and assigns it to the Size field.
func (o *GetKeysForUser200Response) SetSize(v float32) {
	o.Size = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *GetKeysForUser200Response) GetStart() int32 {
	if o == nil || IsNil(o.Start) {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeysForUser200Response) GetStartOk() (*int32, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *GetKeysForUser200Response) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *GetKeysForUser200Response) SetStart(v int32) {
	o.Start = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *GetKeysForUser200Response) GetValues() []RestGpgKey {
	if o == nil || IsNil(o.Values) {
		var ret []RestGpgKey
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetKeysForUser200Response) GetValuesOk() ([]RestGpgKey, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *GetKeysForUser200Response) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []RestGpgKey and assigns it to the Values field.
func (o *GetKeysForUser200Response) SetValues(v []RestGpgKey) {
	o.Values = v
}

func (o GetKeysForUser200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetKeysForUser200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsLastPage) {
		toSerialize["isLastPage"] = o.IsLastPage
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.NextPageStart) {
		toSerialize["nextPageStart"] = o.NextPageStart
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableGetKeysForUser200Response struct {
	value *GetKeysForUser200Response
	isSet bool
}

func (v NullableGetKeysForUser200Response) Get() *GetKeysForUser200Response {
	return v.value
}

func (v *NullableGetKeysForUser200Response) Set(val *GetKeysForUser200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetKeysForUser200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetKeysForUser200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetKeysForUser200Response(val *GetKeysForUser200Response) *NullableGetKeysForUser200Response {
	return &NullableGetKeysForUser200Response{value: val, isSet: true}
}

func (v NullableGetKeysForUser200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetKeysForUser200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


