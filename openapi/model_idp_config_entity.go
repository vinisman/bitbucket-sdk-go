/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the IdpConfigEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdpConfigEntity{}

// IdpConfigEntity struct for IdpConfigEntity
type IdpConfigEntity struct {
	AdditionalScopes []string `json:"additional-scopes,omitempty"`
	AuthorizationEndpoint *string `json:"authorization-endpoint,omitempty"`
	ButtonText *string `json:"buttonText,omitempty"`
	Certificate *string `json:"certificate,omitempty"`
	ClientId *string `json:"client-id,omitempty"`
	ClientSecret *string `json:"client-secret,omitempty"`
	CrowdUrl *string `json:"crowd-url,omitempty"`
	DiscoveryEnabled *bool `json:"discovery-enabled,omitempty"`
	EnableRememberMe *bool `json:"enable-remember-me,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Id *int64 `json:"id,omitempty"`
	IdpType *string `json:"idp-type,omitempty"`
	IncludeCustomerLogins *bool `json:"include-customer-logins,omitempty"`
	IssuerUrl *string `json:"issuer-url,omitempty"`
	JitConfiguration *JitConfigEntity `json:"jit-configuration,omitempty"`
	LastUpdated *time.Time `json:"last-updated,omitempty"`
	Name *string `json:"name,omitempty"`
	NameIdPolicy *string `json:"name-id-policy,omitempty"`
	SignAuthnrequest *bool `json:"sign-authnrequest,omitempty"`
	SignatureAlgorithm *string `json:"signature-algorithm,omitempty"`
	SsoIssuer *string `json:"sso-issuer,omitempty"`
	SsoType *string `json:"sso-type,omitempty"`
	SsoUrl *string `json:"sso-url,omitempty"`
	TokenEndpoint *string `json:"token-endpoint,omitempty"`
	UserinfoEndpoint *string `json:"userinfo-endpoint,omitempty"`
	UsernameAttribute *string `json:"username-attribute,omitempty"`
	UsernameClaim *string `json:"username-claim,omitempty"`
}

// NewIdpConfigEntity instantiates a new IdpConfigEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdpConfigEntity() *IdpConfigEntity {
	this := IdpConfigEntity{}
	return &this
}

// NewIdpConfigEntityWithDefaults instantiates a new IdpConfigEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdpConfigEntityWithDefaults() *IdpConfigEntity {
	this := IdpConfigEntity{}
	return &this
}

// GetAdditionalScopes returns the AdditionalScopes field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetAdditionalScopes() []string {
	if o == nil || IsNil(o.AdditionalScopes) {
		var ret []string
		return ret
	}
	return o.AdditionalScopes
}

// GetAdditionalScopesOk returns a tuple with the AdditionalScopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetAdditionalScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalScopes) {
		return nil, false
	}
	return o.AdditionalScopes, true
}

// HasAdditionalScopes returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasAdditionalScopes() bool {
	if o != nil && !IsNil(o.AdditionalScopes) {
		return true
	}

	return false
}

// SetAdditionalScopes gets a reference to the given []string and assigns it to the AdditionalScopes field.
func (o *IdpConfigEntity) SetAdditionalScopes(v []string) {
	o.AdditionalScopes = v
}

// GetAuthorizationEndpoint returns the AuthorizationEndpoint field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetAuthorizationEndpoint() string {
	if o == nil || IsNil(o.AuthorizationEndpoint) {
		var ret string
		return ret
	}
	return *o.AuthorizationEndpoint
}

// GetAuthorizationEndpointOk returns a tuple with the AuthorizationEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetAuthorizationEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorizationEndpoint) {
		return nil, false
	}
	return o.AuthorizationEndpoint, true
}

// HasAuthorizationEndpoint returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasAuthorizationEndpoint() bool {
	if o != nil && !IsNil(o.AuthorizationEndpoint) {
		return true
	}

	return false
}

// SetAuthorizationEndpoint gets a reference to the given string and assigns it to the AuthorizationEndpoint field.
func (o *IdpConfigEntity) SetAuthorizationEndpoint(v string) {
	o.AuthorizationEndpoint = &v
}

// GetButtonText returns the ButtonText field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetButtonText() string {
	if o == nil || IsNil(o.ButtonText) {
		var ret string
		return ret
	}
	return *o.ButtonText
}

// GetButtonTextOk returns a tuple with the ButtonText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetButtonTextOk() (*string, bool) {
	if o == nil || IsNil(o.ButtonText) {
		return nil, false
	}
	return o.ButtonText, true
}

// HasButtonText returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasButtonText() bool {
	if o != nil && !IsNil(o.ButtonText) {
		return true
	}

	return false
}

// SetButtonText gets a reference to the given string and assigns it to the ButtonText field.
func (o *IdpConfigEntity) SetButtonText(v string) {
	o.ButtonText = &v
}

// GetCertificate returns the Certificate field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetCertificate() string {
	if o == nil || IsNil(o.Certificate) {
		var ret string
		return ret
	}
	return *o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetCertificateOk() (*string, bool) {
	if o == nil || IsNil(o.Certificate) {
		return nil, false
	}
	return o.Certificate, true
}

// HasCertificate returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasCertificate() bool {
	if o != nil && !IsNil(o.Certificate) {
		return true
	}

	return false
}

// SetCertificate gets a reference to the given string and assigns it to the Certificate field.
func (o *IdpConfigEntity) SetCertificate(v string) {
	o.Certificate = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *IdpConfigEntity) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *IdpConfigEntity) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetCrowdUrl returns the CrowdUrl field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetCrowdUrl() string {
	if o == nil || IsNil(o.CrowdUrl) {
		var ret string
		return ret
	}
	return *o.CrowdUrl
}

// GetCrowdUrlOk returns a tuple with the CrowdUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetCrowdUrlOk() (*string, bool) {
	if o == nil || IsNil(o.CrowdUrl) {
		return nil, false
	}
	return o.CrowdUrl, true
}

// HasCrowdUrl returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasCrowdUrl() bool {
	if o != nil && !IsNil(o.CrowdUrl) {
		return true
	}

	return false
}

// SetCrowdUrl gets a reference to the given string and assigns it to the CrowdUrl field.
func (o *IdpConfigEntity) SetCrowdUrl(v string) {
	o.CrowdUrl = &v
}

// GetDiscoveryEnabled returns the DiscoveryEnabled field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetDiscoveryEnabled() bool {
	if o == nil || IsNil(o.DiscoveryEnabled) {
		var ret bool
		return ret
	}
	return *o.DiscoveryEnabled
}

// GetDiscoveryEnabledOk returns a tuple with the DiscoveryEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetDiscoveryEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DiscoveryEnabled) {
		return nil, false
	}
	return o.DiscoveryEnabled, true
}

// HasDiscoveryEnabled returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasDiscoveryEnabled() bool {
	if o != nil && !IsNil(o.DiscoveryEnabled) {
		return true
	}

	return false
}

// SetDiscoveryEnabled gets a reference to the given bool and assigns it to the DiscoveryEnabled field.
func (o *IdpConfigEntity) SetDiscoveryEnabled(v bool) {
	o.DiscoveryEnabled = &v
}

// GetEnableRememberMe returns the EnableRememberMe field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetEnableRememberMe() bool {
	if o == nil || IsNil(o.EnableRememberMe) {
		var ret bool
		return ret
	}
	return *o.EnableRememberMe
}

// GetEnableRememberMeOk returns a tuple with the EnableRememberMe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetEnableRememberMeOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableRememberMe) {
		return nil, false
	}
	return o.EnableRememberMe, true
}

// HasEnableRememberMe returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasEnableRememberMe() bool {
	if o != nil && !IsNil(o.EnableRememberMe) {
		return true
	}

	return false
}

// SetEnableRememberMe gets a reference to the given bool and assigns it to the EnableRememberMe field.
func (o *IdpConfigEntity) SetEnableRememberMe(v bool) {
	o.EnableRememberMe = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *IdpConfigEntity) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *IdpConfigEntity) SetId(v int64) {
	o.Id = &v
}

// GetIdpType returns the IdpType field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetIdpType() string {
	if o == nil || IsNil(o.IdpType) {
		var ret string
		return ret
	}
	return *o.IdpType
}

// GetIdpTypeOk returns a tuple with the IdpType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetIdpTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IdpType) {
		return nil, false
	}
	return o.IdpType, true
}

// HasIdpType returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasIdpType() bool {
	if o != nil && !IsNil(o.IdpType) {
		return true
	}

	return false
}

// SetIdpType gets a reference to the given string and assigns it to the IdpType field.
func (o *IdpConfigEntity) SetIdpType(v string) {
	o.IdpType = &v
}

// GetIncludeCustomerLogins returns the IncludeCustomerLogins field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetIncludeCustomerLogins() bool {
	if o == nil || IsNil(o.IncludeCustomerLogins) {
		var ret bool
		return ret
	}
	return *o.IncludeCustomerLogins
}

// GetIncludeCustomerLoginsOk returns a tuple with the IncludeCustomerLogins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetIncludeCustomerLoginsOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeCustomerLogins) {
		return nil, false
	}
	return o.IncludeCustomerLogins, true
}

// HasIncludeCustomerLogins returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasIncludeCustomerLogins() bool {
	if o != nil && !IsNil(o.IncludeCustomerLogins) {
		return true
	}

	return false
}

// SetIncludeCustomerLogins gets a reference to the given bool and assigns it to the IncludeCustomerLogins field.
func (o *IdpConfigEntity) SetIncludeCustomerLogins(v bool) {
	o.IncludeCustomerLogins = &v
}

// GetIssuerUrl returns the IssuerUrl field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetIssuerUrl() string {
	if o == nil || IsNil(o.IssuerUrl) {
		var ret string
		return ret
	}
	return *o.IssuerUrl
}

// GetIssuerUrlOk returns a tuple with the IssuerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetIssuerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.IssuerUrl) {
		return nil, false
	}
	return o.IssuerUrl, true
}

// HasIssuerUrl returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasIssuerUrl() bool {
	if o != nil && !IsNil(o.IssuerUrl) {
		return true
	}

	return false
}

// SetIssuerUrl gets a reference to the given string and assigns it to the IssuerUrl field.
func (o *IdpConfigEntity) SetIssuerUrl(v string) {
	o.IssuerUrl = &v
}

// GetJitConfiguration returns the JitConfiguration field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetJitConfiguration() JitConfigEntity {
	if o == nil || IsNil(o.JitConfiguration) {
		var ret JitConfigEntity
		return ret
	}
	return *o.JitConfiguration
}

// GetJitConfigurationOk returns a tuple with the JitConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetJitConfigurationOk() (*JitConfigEntity, bool) {
	if o == nil || IsNil(o.JitConfiguration) {
		return nil, false
	}
	return o.JitConfiguration, true
}

// HasJitConfiguration returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasJitConfiguration() bool {
	if o != nil && !IsNil(o.JitConfiguration) {
		return true
	}

	return false
}

// SetJitConfiguration gets a reference to the given JitConfigEntity and assigns it to the JitConfiguration field.
func (o *IdpConfigEntity) SetJitConfiguration(v JitConfigEntity) {
	o.JitConfiguration = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetLastUpdated() time.Time {
	if o == nil || IsNil(o.LastUpdated) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *IdpConfigEntity) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IdpConfigEntity) SetName(v string) {
	o.Name = &v
}

// GetNameIdPolicy returns the NameIdPolicy field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetNameIdPolicy() string {
	if o == nil || IsNil(o.NameIdPolicy) {
		var ret string
		return ret
	}
	return *o.NameIdPolicy
}

// GetNameIdPolicyOk returns a tuple with the NameIdPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetNameIdPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.NameIdPolicy) {
		return nil, false
	}
	return o.NameIdPolicy, true
}

// HasNameIdPolicy returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasNameIdPolicy() bool {
	if o != nil && !IsNil(o.NameIdPolicy) {
		return true
	}

	return false
}

// SetNameIdPolicy gets a reference to the given string and assigns it to the NameIdPolicy field.
func (o *IdpConfigEntity) SetNameIdPolicy(v string) {
	o.NameIdPolicy = &v
}

// GetSignAuthnrequest returns the SignAuthnrequest field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetSignAuthnrequest() bool {
	if o == nil || IsNil(o.SignAuthnrequest) {
		var ret bool
		return ret
	}
	return *o.SignAuthnrequest
}

// GetSignAuthnrequestOk returns a tuple with the SignAuthnrequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetSignAuthnrequestOk() (*bool, bool) {
	if o == nil || IsNil(o.SignAuthnrequest) {
		return nil, false
	}
	return o.SignAuthnrequest, true
}

// HasSignAuthnrequest returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasSignAuthnrequest() bool {
	if o != nil && !IsNil(o.SignAuthnrequest) {
		return true
	}

	return false
}

// SetSignAuthnrequest gets a reference to the given bool and assigns it to the SignAuthnrequest field.
func (o *IdpConfigEntity) SetSignAuthnrequest(v bool) {
	o.SignAuthnrequest = &v
}

// GetSignatureAlgorithm returns the SignatureAlgorithm field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetSignatureAlgorithm() string {
	if o == nil || IsNil(o.SignatureAlgorithm) {
		var ret string
		return ret
	}
	return *o.SignatureAlgorithm
}

// GetSignatureAlgorithmOk returns a tuple with the SignatureAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetSignatureAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureAlgorithm) {
		return nil, false
	}
	return o.SignatureAlgorithm, true
}

// HasSignatureAlgorithm returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasSignatureAlgorithm() bool {
	if o != nil && !IsNil(o.SignatureAlgorithm) {
		return true
	}

	return false
}

// SetSignatureAlgorithm gets a reference to the given string and assigns it to the SignatureAlgorithm field.
func (o *IdpConfigEntity) SetSignatureAlgorithm(v string) {
	o.SignatureAlgorithm = &v
}

// GetSsoIssuer returns the SsoIssuer field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetSsoIssuer() string {
	if o == nil || IsNil(o.SsoIssuer) {
		var ret string
		return ret
	}
	return *o.SsoIssuer
}

// GetSsoIssuerOk returns a tuple with the SsoIssuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetSsoIssuerOk() (*string, bool) {
	if o == nil || IsNil(o.SsoIssuer) {
		return nil, false
	}
	return o.SsoIssuer, true
}

// HasSsoIssuer returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasSsoIssuer() bool {
	if o != nil && !IsNil(o.SsoIssuer) {
		return true
	}

	return false
}

// SetSsoIssuer gets a reference to the given string and assigns it to the SsoIssuer field.
func (o *IdpConfigEntity) SetSsoIssuer(v string) {
	o.SsoIssuer = &v
}

// GetSsoType returns the SsoType field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetSsoType() string {
	if o == nil || IsNil(o.SsoType) {
		var ret string
		return ret
	}
	return *o.SsoType
}

// GetSsoTypeOk returns a tuple with the SsoType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetSsoTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SsoType) {
		return nil, false
	}
	return o.SsoType, true
}

// HasSsoType returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasSsoType() bool {
	if o != nil && !IsNil(o.SsoType) {
		return true
	}

	return false
}

// SetSsoType gets a reference to the given string and assigns it to the SsoType field.
func (o *IdpConfigEntity) SetSsoType(v string) {
	o.SsoType = &v
}

// GetSsoUrl returns the SsoUrl field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetSsoUrl() string {
	if o == nil || IsNil(o.SsoUrl) {
		var ret string
		return ret
	}
	return *o.SsoUrl
}

// GetSsoUrlOk returns a tuple with the SsoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetSsoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.SsoUrl) {
		return nil, false
	}
	return o.SsoUrl, true
}

// HasSsoUrl returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasSsoUrl() bool {
	if o != nil && !IsNil(o.SsoUrl) {
		return true
	}

	return false
}

// SetSsoUrl gets a reference to the given string and assigns it to the SsoUrl field.
func (o *IdpConfigEntity) SetSsoUrl(v string) {
	o.SsoUrl = &v
}

// GetTokenEndpoint returns the TokenEndpoint field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetTokenEndpoint() string {
	if o == nil || IsNil(o.TokenEndpoint) {
		var ret string
		return ret
	}
	return *o.TokenEndpoint
}

// GetTokenEndpointOk returns a tuple with the TokenEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetTokenEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.TokenEndpoint) {
		return nil, false
	}
	return o.TokenEndpoint, true
}

// HasTokenEndpoint returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasTokenEndpoint() bool {
	if o != nil && !IsNil(o.TokenEndpoint) {
		return true
	}

	return false
}

// SetTokenEndpoint gets a reference to the given string and assigns it to the TokenEndpoint field.
func (o *IdpConfigEntity) SetTokenEndpoint(v string) {
	o.TokenEndpoint = &v
}

// GetUserinfoEndpoint returns the UserinfoEndpoint field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetUserinfoEndpoint() string {
	if o == nil || IsNil(o.UserinfoEndpoint) {
		var ret string
		return ret
	}
	return *o.UserinfoEndpoint
}

// GetUserinfoEndpointOk returns a tuple with the UserinfoEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetUserinfoEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.UserinfoEndpoint) {
		return nil, false
	}
	return o.UserinfoEndpoint, true
}

// HasUserinfoEndpoint returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasUserinfoEndpoint() bool {
	if o != nil && !IsNil(o.UserinfoEndpoint) {
		return true
	}

	return false
}

// SetUserinfoEndpoint gets a reference to the given string and assigns it to the UserinfoEndpoint field.
func (o *IdpConfigEntity) SetUserinfoEndpoint(v string) {
	o.UserinfoEndpoint = &v
}

// GetUsernameAttribute returns the UsernameAttribute field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetUsernameAttribute() string {
	if o == nil || IsNil(o.UsernameAttribute) {
		var ret string
		return ret
	}
	return *o.UsernameAttribute
}

// GetUsernameAttributeOk returns a tuple with the UsernameAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetUsernameAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.UsernameAttribute) {
		return nil, false
	}
	return o.UsernameAttribute, true
}

// HasUsernameAttribute returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasUsernameAttribute() bool {
	if o != nil && !IsNil(o.UsernameAttribute) {
		return true
	}

	return false
}

// SetUsernameAttribute gets a reference to the given string and assigns it to the UsernameAttribute field.
func (o *IdpConfigEntity) SetUsernameAttribute(v string) {
	o.UsernameAttribute = &v
}

// GetUsernameClaim returns the UsernameClaim field value if set, zero value otherwise.
func (o *IdpConfigEntity) GetUsernameClaim() string {
	if o == nil || IsNil(o.UsernameClaim) {
		var ret string
		return ret
	}
	return *o.UsernameClaim
}

// GetUsernameClaimOk returns a tuple with the UsernameClaim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdpConfigEntity) GetUsernameClaimOk() (*string, bool) {
	if o == nil || IsNil(o.UsernameClaim) {
		return nil, false
	}
	return o.UsernameClaim, true
}

// HasUsernameClaim returns a boolean if a field has been set.
func (o *IdpConfigEntity) HasUsernameClaim() bool {
	if o != nil && !IsNil(o.UsernameClaim) {
		return true
	}

	return false
}

// SetUsernameClaim gets a reference to the given string and assigns it to the UsernameClaim field.
func (o *IdpConfigEntity) SetUsernameClaim(v string) {
	o.UsernameClaim = &v
}

func (o IdpConfigEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdpConfigEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalScopes) {
		toSerialize["additional-scopes"] = o.AdditionalScopes
	}
	if !IsNil(o.AuthorizationEndpoint) {
		toSerialize["authorization-endpoint"] = o.AuthorizationEndpoint
	}
	if !IsNil(o.ButtonText) {
		toSerialize["buttonText"] = o.ButtonText
	}
	if !IsNil(o.Certificate) {
		toSerialize["certificate"] = o.Certificate
	}
	if !IsNil(o.ClientId) {
		toSerialize["client-id"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["client-secret"] = o.ClientSecret
	}
	if !IsNil(o.CrowdUrl) {
		toSerialize["crowd-url"] = o.CrowdUrl
	}
	if !IsNil(o.DiscoveryEnabled) {
		toSerialize["discovery-enabled"] = o.DiscoveryEnabled
	}
	if !IsNil(o.EnableRememberMe) {
		toSerialize["enable-remember-me"] = o.EnableRememberMe
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IdpType) {
		toSerialize["idp-type"] = o.IdpType
	}
	if !IsNil(o.IncludeCustomerLogins) {
		toSerialize["include-customer-logins"] = o.IncludeCustomerLogins
	}
	if !IsNil(o.IssuerUrl) {
		toSerialize["issuer-url"] = o.IssuerUrl
	}
	if !IsNil(o.JitConfiguration) {
		toSerialize["jit-configuration"] = o.JitConfiguration
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["last-updated"] = o.LastUpdated
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NameIdPolicy) {
		toSerialize["name-id-policy"] = o.NameIdPolicy
	}
	if !IsNil(o.SignAuthnrequest) {
		toSerialize["sign-authnrequest"] = o.SignAuthnrequest
	}
	if !IsNil(o.SignatureAlgorithm) {
		toSerialize["signature-algorithm"] = o.SignatureAlgorithm
	}
	if !IsNil(o.SsoIssuer) {
		toSerialize["sso-issuer"] = o.SsoIssuer
	}
	if !IsNil(o.SsoType) {
		toSerialize["sso-type"] = o.SsoType
	}
	if !IsNil(o.SsoUrl) {
		toSerialize["sso-url"] = o.SsoUrl
	}
	if !IsNil(o.TokenEndpoint) {
		toSerialize["token-endpoint"] = o.TokenEndpoint
	}
	if !IsNil(o.UserinfoEndpoint) {
		toSerialize["userinfo-endpoint"] = o.UserinfoEndpoint
	}
	if !IsNil(o.UsernameAttribute) {
		toSerialize["username-attribute"] = o.UsernameAttribute
	}
	if !IsNil(o.UsernameClaim) {
		toSerialize["username-claim"] = o.UsernameClaim
	}
	return toSerialize, nil
}

type NullableIdpConfigEntity struct {
	value *IdpConfigEntity
	isSet bool
}

func (v NullableIdpConfigEntity) Get() *IdpConfigEntity {
	return v.value
}

func (v *NullableIdpConfigEntity) Set(val *IdpConfigEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableIdpConfigEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableIdpConfigEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdpConfigEntity(val *IdpConfigEntity) *NullableIdpConfigEntity {
	return &NullableIdpConfigEntity{value: val, isSet: true}
}

func (v NullableIdpConfigEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdpConfigEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


