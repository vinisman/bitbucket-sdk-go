/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PageRequestImpl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageRequestImpl{}

// PageRequestImpl struct for PageRequestImpl
type PageRequestImpl struct {
	Limit *int32 `json:"limit,omitempty"`
	Start *int32 `json:"start,omitempty"`
}

// NewPageRequestImpl instantiates a new PageRequestImpl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageRequestImpl() *PageRequestImpl {
	this := PageRequestImpl{}
	return &this
}

// NewPageRequestImplWithDefaults instantiates a new PageRequestImpl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageRequestImplWithDefaults() *PageRequestImpl {
	this := PageRequestImpl{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *PageRequestImpl) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageRequestImpl) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *PageRequestImpl) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *PageRequestImpl) SetLimit(v int32) {
	o.Limit = &v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *PageRequestImpl) GetStart() int32 {
	if o == nil || IsNil(o.Start) {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageRequestImpl) GetStartOk() (*int32, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *PageRequestImpl) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *PageRequestImpl) SetStart(v int32) {
	o.Start = &v
}

func (o PageRequestImpl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageRequestImpl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	return toSerialize, nil
}

type NullablePageRequestImpl struct {
	value *PageRequestImpl
	isSet bool
}

func (v NullablePageRequestImpl) Get() *PageRequestImpl {
	return v.value
}

func (v *NullablePageRequestImpl) Set(val *PageRequestImpl) {
	v.value = val
	v.isSet = true
}

func (v NullablePageRequestImpl) IsSet() bool {
	return v.isSet
}

func (v *NullablePageRequestImpl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageRequestImpl(val *PageRequestImpl) *NullablePageRequestImpl {
	return &NullablePageRequestImpl{value: val, isSet: true}
}

func (v NullablePageRequestImpl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageRequestImpl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


