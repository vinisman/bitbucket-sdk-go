/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestAggregateRejectCounter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAggregateRejectCounter{}

// RestAggregateRejectCounter struct for RestAggregateRejectCounter
type RestAggregateRejectCounter struct {
	LastRejectTime *float32 `json:"lastRejectTime,omitempty"`
	RejectCount *int64 `json:"rejectCount,omitempty"`
	User *RestCommentAnchorPullRequestAuthorUser `json:"user,omitempty"`
}

// NewRestAggregateRejectCounter instantiates a new RestAggregateRejectCounter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAggregateRejectCounter() *RestAggregateRejectCounter {
	this := RestAggregateRejectCounter{}
	return &this
}

// NewRestAggregateRejectCounterWithDefaults instantiates a new RestAggregateRejectCounter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAggregateRejectCounterWithDefaults() *RestAggregateRejectCounter {
	this := RestAggregateRejectCounter{}
	return &this
}

// GetLastRejectTime returns the LastRejectTime field value if set, zero value otherwise.
func (o *RestAggregateRejectCounter) GetLastRejectTime() float32 {
	if o == nil || IsNil(o.LastRejectTime) {
		var ret float32
		return ret
	}
	return *o.LastRejectTime
}

// GetLastRejectTimeOk returns a tuple with the LastRejectTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAggregateRejectCounter) GetLastRejectTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.LastRejectTime) {
		return nil, false
	}
	return o.LastRejectTime, true
}

// HasLastRejectTime returns a boolean if a field has been set.
func (o *RestAggregateRejectCounter) HasLastRejectTime() bool {
	if o != nil && !IsNil(o.LastRejectTime) {
		return true
	}

	return false
}

// SetLastRejectTime gets a reference to the given float32 and assigns it to the LastRejectTime field.
func (o *RestAggregateRejectCounter) SetLastRejectTime(v float32) {
	o.LastRejectTime = &v
}

// GetRejectCount returns the RejectCount field value if set, zero value otherwise.
func (o *RestAggregateRejectCounter) GetRejectCount() int64 {
	if o == nil || IsNil(o.RejectCount) {
		var ret int64
		return ret
	}
	return *o.RejectCount
}

// GetRejectCountOk returns a tuple with the RejectCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAggregateRejectCounter) GetRejectCountOk() (*int64, bool) {
	if o == nil || IsNil(o.RejectCount) {
		return nil, false
	}
	return o.RejectCount, true
}

// HasRejectCount returns a boolean if a field has been set.
func (o *RestAggregateRejectCounter) HasRejectCount() bool {
	if o != nil && !IsNil(o.RejectCount) {
		return true
	}

	return false
}

// SetRejectCount gets a reference to the given int64 and assigns it to the RejectCount field.
func (o *RestAggregateRejectCounter) SetRejectCount(v int64) {
	o.RejectCount = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *RestAggregateRejectCounter) GetUser() RestCommentAnchorPullRequestAuthorUser {
	if o == nil || IsNil(o.User) {
		var ret RestCommentAnchorPullRequestAuthorUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAggregateRejectCounter) GetUserOk() (*RestCommentAnchorPullRequestAuthorUser, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *RestAggregateRejectCounter) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given RestCommentAnchorPullRequestAuthorUser and assigns it to the User field.
func (o *RestAggregateRejectCounter) SetUser(v RestCommentAnchorPullRequestAuthorUser) {
	o.User = &v
}

func (o RestAggregateRejectCounter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAggregateRejectCounter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastRejectTime) {
		toSerialize["lastRejectTime"] = o.LastRejectTime
	}
	if !IsNil(o.RejectCount) {
		toSerialize["rejectCount"] = o.RejectCount
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableRestAggregateRejectCounter struct {
	value *RestAggregateRejectCounter
	isSet bool
}

func (v NullableRestAggregateRejectCounter) Get() *RestAggregateRejectCounter {
	return v.value
}

func (v *NullableRestAggregateRejectCounter) Set(val *RestAggregateRejectCounter) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAggregateRejectCounter) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAggregateRejectCounter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAggregateRejectCounter(val *RestAggregateRejectCounter) *NullableRestAggregateRejectCounter {
	return &NullableRestAggregateRejectCounter{value: val, isSet: true}
}

func (v NullableRestAggregateRejectCounter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAggregateRejectCounter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


