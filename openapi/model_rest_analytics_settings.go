/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestAnalyticsSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAnalyticsSettings{}

// RestAnalyticsSettings struct for RestAnalyticsSettings
type RestAnalyticsSettings struct {
	CanCollectAnalytics *bool `json:"canCollectAnalytics,omitempty"`
	ServerTime *int64 `json:"serverTime,omitempty"`
	SupportEntitlementNumber *string `json:"supportEntitlementNumber,omitempty"`
}

// NewRestAnalyticsSettings instantiates a new RestAnalyticsSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAnalyticsSettings() *RestAnalyticsSettings {
	this := RestAnalyticsSettings{}
	return &this
}

// NewRestAnalyticsSettingsWithDefaults instantiates a new RestAnalyticsSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAnalyticsSettingsWithDefaults() *RestAnalyticsSettings {
	this := RestAnalyticsSettings{}
	return &this
}

// GetCanCollectAnalytics returns the CanCollectAnalytics field value if set, zero value otherwise.
func (o *RestAnalyticsSettings) GetCanCollectAnalytics() bool {
	if o == nil || IsNil(o.CanCollectAnalytics) {
		var ret bool
		return ret
	}
	return *o.CanCollectAnalytics
}

// GetCanCollectAnalyticsOk returns a tuple with the CanCollectAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAnalyticsSettings) GetCanCollectAnalyticsOk() (*bool, bool) {
	if o == nil || IsNil(o.CanCollectAnalytics) {
		return nil, false
	}
	return o.CanCollectAnalytics, true
}

// HasCanCollectAnalytics returns a boolean if a field has been set.
func (o *RestAnalyticsSettings) HasCanCollectAnalytics() bool {
	if o != nil && !IsNil(o.CanCollectAnalytics) {
		return true
	}

	return false
}

// SetCanCollectAnalytics gets a reference to the given bool and assigns it to the CanCollectAnalytics field.
func (o *RestAnalyticsSettings) SetCanCollectAnalytics(v bool) {
	o.CanCollectAnalytics = &v
}

// GetServerTime returns the ServerTime field value if set, zero value otherwise.
func (o *RestAnalyticsSettings) GetServerTime() int64 {
	if o == nil || IsNil(o.ServerTime) {
		var ret int64
		return ret
	}
	return *o.ServerTime
}

// GetServerTimeOk returns a tuple with the ServerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAnalyticsSettings) GetServerTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.ServerTime) {
		return nil, false
	}
	return o.ServerTime, true
}

// HasServerTime returns a boolean if a field has been set.
func (o *RestAnalyticsSettings) HasServerTime() bool {
	if o != nil && !IsNil(o.ServerTime) {
		return true
	}

	return false
}

// SetServerTime gets a reference to the given int64 and assigns it to the ServerTime field.
func (o *RestAnalyticsSettings) SetServerTime(v int64) {
	o.ServerTime = &v
}

// GetSupportEntitlementNumber returns the SupportEntitlementNumber field value if set, zero value otherwise.
func (o *RestAnalyticsSettings) GetSupportEntitlementNumber() string {
	if o == nil || IsNil(o.SupportEntitlementNumber) {
		var ret string
		return ret
	}
	return *o.SupportEntitlementNumber
}

// GetSupportEntitlementNumberOk returns a tuple with the SupportEntitlementNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAnalyticsSettings) GetSupportEntitlementNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SupportEntitlementNumber) {
		return nil, false
	}
	return o.SupportEntitlementNumber, true
}

// HasSupportEntitlementNumber returns a boolean if a field has been set.
func (o *RestAnalyticsSettings) HasSupportEntitlementNumber() bool {
	if o != nil && !IsNil(o.SupportEntitlementNumber) {
		return true
	}

	return false
}

// SetSupportEntitlementNumber gets a reference to the given string and assigns it to the SupportEntitlementNumber field.
func (o *RestAnalyticsSettings) SetSupportEntitlementNumber(v string) {
	o.SupportEntitlementNumber = &v
}

func (o RestAnalyticsSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAnalyticsSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanCollectAnalytics) {
		toSerialize["canCollectAnalytics"] = o.CanCollectAnalytics
	}
	if !IsNil(o.ServerTime) {
		toSerialize["serverTime"] = o.ServerTime
	}
	if !IsNil(o.SupportEntitlementNumber) {
		toSerialize["supportEntitlementNumber"] = o.SupportEntitlementNumber
	}
	return toSerialize, nil
}

type NullableRestAnalyticsSettings struct {
	value *RestAnalyticsSettings
	isSet bool
}

func (v NullableRestAnalyticsSettings) Get() *RestAnalyticsSettings {
	return v.value
}

func (v *NullableRestAnalyticsSettings) Set(val *RestAnalyticsSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAnalyticsSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAnalyticsSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAnalyticsSettings(val *RestAnalyticsSettings) *NullableRestAnalyticsSettings {
	return &NullableRestAnalyticsSettings{value: val, isSet: true}
}

func (v NullableRestAnalyticsSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAnalyticsSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


