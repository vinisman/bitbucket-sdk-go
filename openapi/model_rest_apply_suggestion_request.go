/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestApplySuggestionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestApplySuggestionRequest{}

// RestApplySuggestionRequest struct for RestApplySuggestionRequest
type RestApplySuggestionRequest struct {
	CommentVersion *int32 `json:"commentVersion,omitempty"`
	CommitMessage *string `json:"commitMessage,omitempty"`
	PullRequestVersion *int32 `json:"pullRequestVersion,omitempty"`
	SuggestionIndex *int32 `json:"suggestionIndex,omitempty"`
}

// NewRestApplySuggestionRequest instantiates a new RestApplySuggestionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestApplySuggestionRequest() *RestApplySuggestionRequest {
	this := RestApplySuggestionRequest{}
	return &this
}

// NewRestApplySuggestionRequestWithDefaults instantiates a new RestApplySuggestionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestApplySuggestionRequestWithDefaults() *RestApplySuggestionRequest {
	this := RestApplySuggestionRequest{}
	return &this
}

// GetCommentVersion returns the CommentVersion field value if set, zero value otherwise.
func (o *RestApplySuggestionRequest) GetCommentVersion() int32 {
	if o == nil || IsNil(o.CommentVersion) {
		var ret int32
		return ret
	}
	return *o.CommentVersion
}

// GetCommentVersionOk returns a tuple with the CommentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestApplySuggestionRequest) GetCommentVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.CommentVersion) {
		return nil, false
	}
	return o.CommentVersion, true
}

// HasCommentVersion returns a boolean if a field has been set.
func (o *RestApplySuggestionRequest) HasCommentVersion() bool {
	if o != nil && !IsNil(o.CommentVersion) {
		return true
	}

	return false
}

// SetCommentVersion gets a reference to the given int32 and assigns it to the CommentVersion field.
func (o *RestApplySuggestionRequest) SetCommentVersion(v int32) {
	o.CommentVersion = &v
}

// GetCommitMessage returns the CommitMessage field value if set, zero value otherwise.
func (o *RestApplySuggestionRequest) GetCommitMessage() string {
	if o == nil || IsNil(o.CommitMessage) {
		var ret string
		return ret
	}
	return *o.CommitMessage
}

// GetCommitMessageOk returns a tuple with the CommitMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestApplySuggestionRequest) GetCommitMessageOk() (*string, bool) {
	if o == nil || IsNil(o.CommitMessage) {
		return nil, false
	}
	return o.CommitMessage, true
}

// HasCommitMessage returns a boolean if a field has been set.
func (o *RestApplySuggestionRequest) HasCommitMessage() bool {
	if o != nil && !IsNil(o.CommitMessage) {
		return true
	}

	return false
}

// SetCommitMessage gets a reference to the given string and assigns it to the CommitMessage field.
func (o *RestApplySuggestionRequest) SetCommitMessage(v string) {
	o.CommitMessage = &v
}

// GetPullRequestVersion returns the PullRequestVersion field value if set, zero value otherwise.
func (o *RestApplySuggestionRequest) GetPullRequestVersion() int32 {
	if o == nil || IsNil(o.PullRequestVersion) {
		var ret int32
		return ret
	}
	return *o.PullRequestVersion
}

// GetPullRequestVersionOk returns a tuple with the PullRequestVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestApplySuggestionRequest) GetPullRequestVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.PullRequestVersion) {
		return nil, false
	}
	return o.PullRequestVersion, true
}

// HasPullRequestVersion returns a boolean if a field has been set.
func (o *RestApplySuggestionRequest) HasPullRequestVersion() bool {
	if o != nil && !IsNil(o.PullRequestVersion) {
		return true
	}

	return false
}

// SetPullRequestVersion gets a reference to the given int32 and assigns it to the PullRequestVersion field.
func (o *RestApplySuggestionRequest) SetPullRequestVersion(v int32) {
	o.PullRequestVersion = &v
}

// GetSuggestionIndex returns the SuggestionIndex field value if set, zero value otherwise.
func (o *RestApplySuggestionRequest) GetSuggestionIndex() int32 {
	if o == nil || IsNil(o.SuggestionIndex) {
		var ret int32
		return ret
	}
	return *o.SuggestionIndex
}

// GetSuggestionIndexOk returns a tuple with the SuggestionIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestApplySuggestionRequest) GetSuggestionIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.SuggestionIndex) {
		return nil, false
	}
	return o.SuggestionIndex, true
}

// HasSuggestionIndex returns a boolean if a field has been set.
func (o *RestApplySuggestionRequest) HasSuggestionIndex() bool {
	if o != nil && !IsNil(o.SuggestionIndex) {
		return true
	}

	return false
}

// SetSuggestionIndex gets a reference to the given int32 and assigns it to the SuggestionIndex field.
func (o *RestApplySuggestionRequest) SetSuggestionIndex(v int32) {
	o.SuggestionIndex = &v
}

func (o RestApplySuggestionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestApplySuggestionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommentVersion) {
		toSerialize["commentVersion"] = o.CommentVersion
	}
	if !IsNil(o.CommitMessage) {
		toSerialize["commitMessage"] = o.CommitMessage
	}
	if !IsNil(o.PullRequestVersion) {
		toSerialize["pullRequestVersion"] = o.PullRequestVersion
	}
	if !IsNil(o.SuggestionIndex) {
		toSerialize["suggestionIndex"] = o.SuggestionIndex
	}
	return toSerialize, nil
}

type NullableRestApplySuggestionRequest struct {
	value *RestApplySuggestionRequest
	isSet bool
}

func (v NullableRestApplySuggestionRequest) Get() *RestApplySuggestionRequest {
	return v.value
}

func (v *NullableRestApplySuggestionRequest) Set(val *RestApplySuggestionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestApplySuggestionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestApplySuggestionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestApplySuggestionRequest(val *RestApplySuggestionRequest) *NullableRestApplySuggestionRequest {
	return &NullableRestApplySuggestionRequest{value: val, isSet: true}
}

func (v NullableRestApplySuggestionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestApplySuggestionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


