/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestAttachmentMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAttachmentMetadata{}

// RestAttachmentMetadata struct for RestAttachmentMetadata
type RestAttachmentMetadata struct {
	Id *int64 `json:"id,omitempty"`
	Metadata *string `json:"metadata,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewRestAttachmentMetadata instantiates a new RestAttachmentMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAttachmentMetadata() *RestAttachmentMetadata {
	this := RestAttachmentMetadata{}
	return &this
}

// NewRestAttachmentMetadataWithDefaults instantiates a new RestAttachmentMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAttachmentMetadataWithDefaults() *RestAttachmentMetadata {
	this := RestAttachmentMetadata{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestAttachmentMetadata) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAttachmentMetadata) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestAttachmentMetadata) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *RestAttachmentMetadata) SetId(v int64) {
	o.Id = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *RestAttachmentMetadata) GetMetadata() string {
	if o == nil || IsNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAttachmentMetadata) GetMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *RestAttachmentMetadata) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *RestAttachmentMetadata) SetMetadata(v string) {
	o.Metadata = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *RestAttachmentMetadata) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAttachmentMetadata) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *RestAttachmentMetadata) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *RestAttachmentMetadata) SetUrl(v string) {
	o.Url = &v
}

func (o RestAttachmentMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAttachmentMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableRestAttachmentMetadata struct {
	value *RestAttachmentMetadata
	isSet bool
}

func (v NullableRestAttachmentMetadata) Get() *RestAttachmentMetadata {
	return v.value
}

func (v *NullableRestAttachmentMetadata) Set(val *RestAttachmentMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAttachmentMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAttachmentMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAttachmentMetadata(val *RestAttachmentMetadata) *NullableRestAttachmentMetadata {
	return &NullableRestAttachmentMetadata{value: val, isSet: true}
}

func (v NullableRestAttachmentMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAttachmentMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


