/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestAuthenticationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAuthenticationRequest{}

// RestAuthenticationRequest struct for RestAuthenticationRequest
type RestAuthenticationRequest struct {
	Credentials Credentials `json:"credentials"`
	RepositoryId *int32 `json:"repositoryId,omitempty"`
}

type _RestAuthenticationRequest RestAuthenticationRequest

// NewRestAuthenticationRequest instantiates a new RestAuthenticationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAuthenticationRequest(credentials Credentials) *RestAuthenticationRequest {
	this := RestAuthenticationRequest{}
	this.Credentials = credentials
	return &this
}

// NewRestAuthenticationRequestWithDefaults instantiates a new RestAuthenticationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAuthenticationRequestWithDefaults() *RestAuthenticationRequest {
	this := RestAuthenticationRequest{}
	return &this
}

// GetCredentials returns the Credentials field value
func (o *RestAuthenticationRequest) GetCredentials() Credentials {
	if o == nil {
		var ret Credentials
		return ret
	}

	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value
// and a boolean to check if the value has been set.
func (o *RestAuthenticationRequest) GetCredentialsOk() (*Credentials, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Credentials, true
}

// SetCredentials sets field value
func (o *RestAuthenticationRequest) SetCredentials(v Credentials) {
	o.Credentials = v
}

// GetRepositoryId returns the RepositoryId field value if set, zero value otherwise.
func (o *RestAuthenticationRequest) GetRepositoryId() int32 {
	if o == nil || IsNil(o.RepositoryId) {
		var ret int32
		return ret
	}
	return *o.RepositoryId
}

// GetRepositoryIdOk returns a tuple with the RepositoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAuthenticationRequest) GetRepositoryIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RepositoryId) {
		return nil, false
	}
	return o.RepositoryId, true
}

// HasRepositoryId returns a boolean if a field has been set.
func (o *RestAuthenticationRequest) HasRepositoryId() bool {
	if o != nil && !IsNil(o.RepositoryId) {
		return true
	}

	return false
}

// SetRepositoryId gets a reference to the given int32 and assigns it to the RepositoryId field.
func (o *RestAuthenticationRequest) SetRepositoryId(v int32) {
	o.RepositoryId = &v
}

func (o RestAuthenticationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAuthenticationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["credentials"] = o.Credentials
	if !IsNil(o.RepositoryId) {
		toSerialize["repositoryId"] = o.RepositoryId
	}
	return toSerialize, nil
}

func (o *RestAuthenticationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"credentials",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestAuthenticationRequest := _RestAuthenticationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestAuthenticationRequest)

	if err != nil {
		return err
	}

	*o = RestAuthenticationRequest(varRestAuthenticationRequest)

	return err
}

type NullableRestAuthenticationRequest struct {
	value *RestAuthenticationRequest
	isSet bool
}

func (v NullableRestAuthenticationRequest) Get() *RestAuthenticationRequest {
	return v.value
}

func (v *NullableRestAuthenticationRequest) Set(val *RestAuthenticationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAuthenticationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAuthenticationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAuthenticationRequest(val *RestAuthenticationRequest) *NullableRestAuthenticationRequest {
	return &NullableRestAuthenticationRequest{value: val, isSet: true}
}

func (v NullableRestAuthenticationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAuthenticationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


