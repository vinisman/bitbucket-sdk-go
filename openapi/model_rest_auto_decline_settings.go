/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestAutoDeclineSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAutoDeclineSettings{}

// RestAutoDeclineSettings struct for RestAutoDeclineSettings
type RestAutoDeclineSettings struct {
	Enabled *bool `json:"enabled,omitempty"`
	InactivityWeeks *int32 `json:"inactivityWeeks,omitempty"`
	Scope *RestReviewerGroupScope `json:"scope,omitempty"`
}

// NewRestAutoDeclineSettings instantiates a new RestAutoDeclineSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAutoDeclineSettings() *RestAutoDeclineSettings {
	this := RestAutoDeclineSettings{}
	return &this
}

// NewRestAutoDeclineSettingsWithDefaults instantiates a new RestAutoDeclineSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAutoDeclineSettingsWithDefaults() *RestAutoDeclineSettings {
	this := RestAutoDeclineSettings{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *RestAutoDeclineSettings) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoDeclineSettings) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *RestAutoDeclineSettings) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *RestAutoDeclineSettings) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetInactivityWeeks returns the InactivityWeeks field value if set, zero value otherwise.
func (o *RestAutoDeclineSettings) GetInactivityWeeks() int32 {
	if o == nil || IsNil(o.InactivityWeeks) {
		var ret int32
		return ret
	}
	return *o.InactivityWeeks
}

// GetInactivityWeeksOk returns a tuple with the InactivityWeeks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoDeclineSettings) GetInactivityWeeksOk() (*int32, bool) {
	if o == nil || IsNil(o.InactivityWeeks) {
		return nil, false
	}
	return o.InactivityWeeks, true
}

// HasInactivityWeeks returns a boolean if a field has been set.
func (o *RestAutoDeclineSettings) HasInactivityWeeks() bool {
	if o != nil && !IsNil(o.InactivityWeeks) {
		return true
	}

	return false
}

// SetInactivityWeeks gets a reference to the given int32 and assigns it to the InactivityWeeks field.
func (o *RestAutoDeclineSettings) SetInactivityWeeks(v int32) {
	o.InactivityWeeks = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *RestAutoDeclineSettings) GetScope() RestReviewerGroupScope {
	if o == nil || IsNil(o.Scope) {
		var ret RestReviewerGroupScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoDeclineSettings) GetScopeOk() (*RestReviewerGroupScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *RestAutoDeclineSettings) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given RestReviewerGroupScope and assigns it to the Scope field.
func (o *RestAutoDeclineSettings) SetScope(v RestReviewerGroupScope) {
	o.Scope = &v
}

func (o RestAutoDeclineSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAutoDeclineSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.InactivityWeeks) {
		toSerialize["inactivityWeeks"] = o.InactivityWeeks
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	return toSerialize, nil
}

type NullableRestAutoDeclineSettings struct {
	value *RestAutoDeclineSettings
	isSet bool
}

func (v NullableRestAutoDeclineSettings) Get() *RestAutoDeclineSettings {
	return v.value
}

func (v *NullableRestAutoDeclineSettings) Set(val *RestAutoDeclineSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAutoDeclineSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAutoDeclineSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAutoDeclineSettings(val *RestAutoDeclineSettings) *NullableRestAutoDeclineSettings {
	return &NullableRestAutoDeclineSettings{value: val, isSet: true}
}

func (v NullableRestAutoDeclineSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAutoDeclineSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


