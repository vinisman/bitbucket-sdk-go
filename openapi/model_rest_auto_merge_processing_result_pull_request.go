/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestAutoMergeProcessingResultPullRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAutoMergeProcessingResultPullRequest{}

// RestAutoMergeProcessingResultPullRequest struct for RestAutoMergeProcessingResultPullRequest
type RestAutoMergeProcessingResultPullRequest struct {
	Author *RestCommentAnchorPullRequestAuthor `json:"author,omitempty"`
	Closed *bool `json:"closed,omitempty"`
	ClosedDate *int64 `json:"closedDate,omitempty"`
	CreatedDate *int64 `json:"createdDate,omitempty"`
	Description *string `json:"description,omitempty"`
	DescriptionAsHtml *string `json:"descriptionAsHtml,omitempty"`
	Draft *bool `json:"draft,omitempty"`
	FromRef *RestCommentAnchorPullRequestFromRef `json:"fromRef,omitempty"`
	HtmlDescription *string `json:"htmlDescription,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Links map[string]interface{} `json:"links,omitempty"`
	Locked *bool `json:"locked,omitempty"`
	Open *bool `json:"open,omitempty"`
	Participants []RestPullRequestParticipant `json:"participants,omitempty"`
	Reviewers []RestPullRequestParticipant `json:"reviewers,omitempty"`
	State *string `json:"state,omitempty"`
	Title *string `json:"title,omitempty"`
	ToRef *RestCommentAnchorPullRequestFromRef `json:"toRef,omitempty"`
	UpdatedDate *int64 `json:"updatedDate,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

// NewRestAutoMergeProcessingResultPullRequest instantiates a new RestAutoMergeProcessingResultPullRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAutoMergeProcessingResultPullRequest() *RestAutoMergeProcessingResultPullRequest {
	this := RestAutoMergeProcessingResultPullRequest{}
	return &this
}

// NewRestAutoMergeProcessingResultPullRequestWithDefaults instantiates a new RestAutoMergeProcessingResultPullRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAutoMergeProcessingResultPullRequestWithDefaults() *RestAutoMergeProcessingResultPullRequest {
	this := RestAutoMergeProcessingResultPullRequest{}
	return &this
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetAuthor() RestCommentAnchorPullRequestAuthor {
	if o == nil || IsNil(o.Author) {
		var ret RestCommentAnchorPullRequestAuthor
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetAuthorOk() (*RestCommentAnchorPullRequestAuthor, bool) {
	if o == nil || IsNil(o.Author) {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasAuthor() bool {
	if o != nil && !IsNil(o.Author) {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given RestCommentAnchorPullRequestAuthor and assigns it to the Author field.
func (o *RestAutoMergeProcessingResultPullRequest) SetAuthor(v RestCommentAnchorPullRequestAuthor) {
	o.Author = &v
}

// GetClosed returns the Closed field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetClosed() bool {
	if o == nil || IsNil(o.Closed) {
		var ret bool
		return ret
	}
	return *o.Closed
}

// GetClosedOk returns a tuple with the Closed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetClosedOk() (*bool, bool) {
	if o == nil || IsNil(o.Closed) {
		return nil, false
	}
	return o.Closed, true
}

// HasClosed returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasClosed() bool {
	if o != nil && !IsNil(o.Closed) {
		return true
	}

	return false
}

// SetClosed gets a reference to the given bool and assigns it to the Closed field.
func (o *RestAutoMergeProcessingResultPullRequest) SetClosed(v bool) {
	o.Closed = &v
}

// GetClosedDate returns the ClosedDate field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetClosedDate() int64 {
	if o == nil || IsNil(o.ClosedDate) {
		var ret int64
		return ret
	}
	return *o.ClosedDate
}

// GetClosedDateOk returns a tuple with the ClosedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetClosedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.ClosedDate) {
		return nil, false
	}
	return o.ClosedDate, true
}

// HasClosedDate returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasClosedDate() bool {
	if o != nil && !IsNil(o.ClosedDate) {
		return true
	}

	return false
}

// SetClosedDate gets a reference to the given int64 and assigns it to the ClosedDate field.
func (o *RestAutoMergeProcessingResultPullRequest) SetClosedDate(v int64) {
	o.ClosedDate = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetCreatedDate() int64 {
	if o == nil || IsNil(o.CreatedDate) {
		var ret int64
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetCreatedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given int64 and assigns it to the CreatedDate field.
func (o *RestAutoMergeProcessingResultPullRequest) SetCreatedDate(v int64) {
	o.CreatedDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RestAutoMergeProcessingResultPullRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDescriptionAsHtml returns the DescriptionAsHtml field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetDescriptionAsHtml() string {
	if o == nil || IsNil(o.DescriptionAsHtml) {
		var ret string
		return ret
	}
	return *o.DescriptionAsHtml
}

// GetDescriptionAsHtmlOk returns a tuple with the DescriptionAsHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetDescriptionAsHtmlOk() (*string, bool) {
	if o == nil || IsNil(o.DescriptionAsHtml) {
		return nil, false
	}
	return o.DescriptionAsHtml, true
}

// HasDescriptionAsHtml returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasDescriptionAsHtml() bool {
	if o != nil && !IsNil(o.DescriptionAsHtml) {
		return true
	}

	return false
}

// SetDescriptionAsHtml gets a reference to the given string and assigns it to the DescriptionAsHtml field.
func (o *RestAutoMergeProcessingResultPullRequest) SetDescriptionAsHtml(v string) {
	o.DescriptionAsHtml = &v
}

// GetDraft returns the Draft field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetDraft() bool {
	if o == nil || IsNil(o.Draft) {
		var ret bool
		return ret
	}
	return *o.Draft
}

// GetDraftOk returns a tuple with the Draft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetDraftOk() (*bool, bool) {
	if o == nil || IsNil(o.Draft) {
		return nil, false
	}
	return o.Draft, true
}

// HasDraft returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasDraft() bool {
	if o != nil && !IsNil(o.Draft) {
		return true
	}

	return false
}

// SetDraft gets a reference to the given bool and assigns it to the Draft field.
func (o *RestAutoMergeProcessingResultPullRequest) SetDraft(v bool) {
	o.Draft = &v
}

// GetFromRef returns the FromRef field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetFromRef() RestCommentAnchorPullRequestFromRef {
	if o == nil || IsNil(o.FromRef) {
		var ret RestCommentAnchorPullRequestFromRef
		return ret
	}
	return *o.FromRef
}

// GetFromRefOk returns a tuple with the FromRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetFromRefOk() (*RestCommentAnchorPullRequestFromRef, bool) {
	if o == nil || IsNil(o.FromRef) {
		return nil, false
	}
	return o.FromRef, true
}

// HasFromRef returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasFromRef() bool {
	if o != nil && !IsNil(o.FromRef) {
		return true
	}

	return false
}

// SetFromRef gets a reference to the given RestCommentAnchorPullRequestFromRef and assigns it to the FromRef field.
func (o *RestAutoMergeProcessingResultPullRequest) SetFromRef(v RestCommentAnchorPullRequestFromRef) {
	o.FromRef = &v
}

// GetHtmlDescription returns the HtmlDescription field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetHtmlDescription() string {
	if o == nil || IsNil(o.HtmlDescription) {
		var ret string
		return ret
	}
	return *o.HtmlDescription
}

// GetHtmlDescriptionOk returns a tuple with the HtmlDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetHtmlDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.HtmlDescription) {
		return nil, false
	}
	return o.HtmlDescription, true
}

// HasHtmlDescription returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasHtmlDescription() bool {
	if o != nil && !IsNil(o.HtmlDescription) {
		return true
	}

	return false
}

// SetHtmlDescription gets a reference to the given string and assigns it to the HtmlDescription field.
func (o *RestAutoMergeProcessingResultPullRequest) SetHtmlDescription(v string) {
	o.HtmlDescription = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *RestAutoMergeProcessingResultPullRequest) SetId(v int64) {
	o.Id = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetLinks() map[string]interface{} {
	if o == nil || IsNil(o.Links) {
		var ret map[string]interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetLinksOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Links) {
		return map[string]interface{}{}, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]interface{} and assigns it to the Links field.
func (o *RestAutoMergeProcessingResultPullRequest) SetLinks(v map[string]interface{}) {
	o.Links = v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetLocked() bool {
	if o == nil || IsNil(o.Locked) {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *RestAutoMergeProcessingResultPullRequest) SetLocked(v bool) {
	o.Locked = &v
}

// GetOpen returns the Open field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetOpen() bool {
	if o == nil || IsNil(o.Open) {
		var ret bool
		return ret
	}
	return *o.Open
}

// GetOpenOk returns a tuple with the Open field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetOpenOk() (*bool, bool) {
	if o == nil || IsNil(o.Open) {
		return nil, false
	}
	return o.Open, true
}

// HasOpen returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasOpen() bool {
	if o != nil && !IsNil(o.Open) {
		return true
	}

	return false
}

// SetOpen gets a reference to the given bool and assigns it to the Open field.
func (o *RestAutoMergeProcessingResultPullRequest) SetOpen(v bool) {
	o.Open = &v
}

// GetParticipants returns the Participants field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetParticipants() []RestPullRequestParticipant {
	if o == nil || IsNil(o.Participants) {
		var ret []RestPullRequestParticipant
		return ret
	}
	return o.Participants
}

// GetParticipantsOk returns a tuple with the Participants field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetParticipantsOk() ([]RestPullRequestParticipant, bool) {
	if o == nil || IsNil(o.Participants) {
		return nil, false
	}
	return o.Participants, true
}

// HasParticipants returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasParticipants() bool {
	if o != nil && !IsNil(o.Participants) {
		return true
	}

	return false
}

// SetParticipants gets a reference to the given []RestPullRequestParticipant and assigns it to the Participants field.
func (o *RestAutoMergeProcessingResultPullRequest) SetParticipants(v []RestPullRequestParticipant) {
	o.Participants = v
}

// GetReviewers returns the Reviewers field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetReviewers() []RestPullRequestParticipant {
	if o == nil || IsNil(o.Reviewers) {
		var ret []RestPullRequestParticipant
		return ret
	}
	return o.Reviewers
}

// GetReviewersOk returns a tuple with the Reviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetReviewersOk() ([]RestPullRequestParticipant, bool) {
	if o == nil || IsNil(o.Reviewers) {
		return nil, false
	}
	return o.Reviewers, true
}

// HasReviewers returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasReviewers() bool {
	if o != nil && !IsNil(o.Reviewers) {
		return true
	}

	return false
}

// SetReviewers gets a reference to the given []RestPullRequestParticipant and assigns it to the Reviewers field.
func (o *RestAutoMergeProcessingResultPullRequest) SetReviewers(v []RestPullRequestParticipant) {
	o.Reviewers = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *RestAutoMergeProcessingResultPullRequest) SetState(v string) {
	o.State = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *RestAutoMergeProcessingResultPullRequest) SetTitle(v string) {
	o.Title = &v
}

// GetToRef returns the ToRef field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetToRef() RestCommentAnchorPullRequestFromRef {
	if o == nil || IsNil(o.ToRef) {
		var ret RestCommentAnchorPullRequestFromRef
		return ret
	}
	return *o.ToRef
}

// GetToRefOk returns a tuple with the ToRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetToRefOk() (*RestCommentAnchorPullRequestFromRef, bool) {
	if o == nil || IsNil(o.ToRef) {
		return nil, false
	}
	return o.ToRef, true
}

// HasToRef returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasToRef() bool {
	if o != nil && !IsNil(o.ToRef) {
		return true
	}

	return false
}

// SetToRef gets a reference to the given RestCommentAnchorPullRequestFromRef and assigns it to the ToRef field.
func (o *RestAutoMergeProcessingResultPullRequest) SetToRef(v RestCommentAnchorPullRequestFromRef) {
	o.ToRef = &v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetUpdatedDate() int64 {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret int64
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetUpdatedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given int64 and assigns it to the UpdatedDate field.
func (o *RestAutoMergeProcessingResultPullRequest) SetUpdatedDate(v int64) {
	o.UpdatedDate = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *RestAutoMergeProcessingResultPullRequest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProcessingResultPullRequest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *RestAutoMergeProcessingResultPullRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *RestAutoMergeProcessingResultPullRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o RestAutoMergeProcessingResultPullRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAutoMergeProcessingResultPullRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Author) {
		toSerialize["author"] = o.Author
	}
	if !IsNil(o.Closed) {
		toSerialize["closed"] = o.Closed
	}
	if !IsNil(o.ClosedDate) {
		toSerialize["closedDate"] = o.ClosedDate
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DescriptionAsHtml) {
		toSerialize["descriptionAsHtml"] = o.DescriptionAsHtml
	}
	if !IsNil(o.Draft) {
		toSerialize["draft"] = o.Draft
	}
	if !IsNil(o.FromRef) {
		toSerialize["fromRef"] = o.FromRef
	}
	if !IsNil(o.HtmlDescription) {
		toSerialize["htmlDescription"] = o.HtmlDescription
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.Open) {
		toSerialize["open"] = o.Open
	}
	if !IsNil(o.Participants) {
		toSerialize["participants"] = o.Participants
	}
	if !IsNil(o.Reviewers) {
		toSerialize["reviewers"] = o.Reviewers
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ToRef) {
		toSerialize["toRef"] = o.ToRef
	}
	if !IsNil(o.UpdatedDate) {
		toSerialize["updatedDate"] = o.UpdatedDate
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableRestAutoMergeProcessingResultPullRequest struct {
	value *RestAutoMergeProcessingResultPullRequest
	isSet bool
}

func (v NullableRestAutoMergeProcessingResultPullRequest) Get() *RestAutoMergeProcessingResultPullRequest {
	return v.value
}

func (v *NullableRestAutoMergeProcessingResultPullRequest) Set(val *RestAutoMergeProcessingResultPullRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAutoMergeProcessingResultPullRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAutoMergeProcessingResultPullRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAutoMergeProcessingResultPullRequest(val *RestAutoMergeProcessingResultPullRequest) *NullableRestAutoMergeProcessingResultPullRequest {
	return &NullableRestAutoMergeProcessingResultPullRequest{value: val, isSet: true}
}

func (v NullableRestAutoMergeProcessingResultPullRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAutoMergeProcessingResultPullRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


