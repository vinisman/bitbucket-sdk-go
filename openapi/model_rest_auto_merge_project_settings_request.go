/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestAutoMergeProjectSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAutoMergeProjectSettingsRequest{}

// RestAutoMergeProjectSettingsRequest struct for RestAutoMergeProjectSettingsRequest
type RestAutoMergeProjectSettingsRequest struct {
	Enabled *bool `json:"enabled,omitempty"`
	RestrictionAction *string `json:"restrictionAction,omitempty"`
}

// NewRestAutoMergeProjectSettingsRequest instantiates a new RestAutoMergeProjectSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAutoMergeProjectSettingsRequest() *RestAutoMergeProjectSettingsRequest {
	this := RestAutoMergeProjectSettingsRequest{}
	return &this
}

// NewRestAutoMergeProjectSettingsRequestWithDefaults instantiates a new RestAutoMergeProjectSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAutoMergeProjectSettingsRequestWithDefaults() *RestAutoMergeProjectSettingsRequest {
	this := RestAutoMergeProjectSettingsRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *RestAutoMergeProjectSettingsRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProjectSettingsRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *RestAutoMergeProjectSettingsRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *RestAutoMergeProjectSettingsRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRestrictionAction returns the RestrictionAction field value if set, zero value otherwise.
func (o *RestAutoMergeProjectSettingsRequest) GetRestrictionAction() string {
	if o == nil || IsNil(o.RestrictionAction) {
		var ret string
		return ret
	}
	return *o.RestrictionAction
}

// GetRestrictionActionOk returns a tuple with the RestrictionAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeProjectSettingsRequest) GetRestrictionActionOk() (*string, bool) {
	if o == nil || IsNil(o.RestrictionAction) {
		return nil, false
	}
	return o.RestrictionAction, true
}

// HasRestrictionAction returns a boolean if a field has been set.
func (o *RestAutoMergeProjectSettingsRequest) HasRestrictionAction() bool {
	if o != nil && !IsNil(o.RestrictionAction) {
		return true
	}

	return false
}

// SetRestrictionAction gets a reference to the given string and assigns it to the RestrictionAction field.
func (o *RestAutoMergeProjectSettingsRequest) SetRestrictionAction(v string) {
	o.RestrictionAction = &v
}

func (o RestAutoMergeProjectSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAutoMergeProjectSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.RestrictionAction) {
		toSerialize["restrictionAction"] = o.RestrictionAction
	}
	return toSerialize, nil
}

type NullableRestAutoMergeProjectSettingsRequest struct {
	value *RestAutoMergeProjectSettingsRequest
	isSet bool
}

func (v NullableRestAutoMergeProjectSettingsRequest) Get() *RestAutoMergeProjectSettingsRequest {
	return v.value
}

func (v *NullableRestAutoMergeProjectSettingsRequest) Set(val *RestAutoMergeProjectSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAutoMergeProjectSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAutoMergeProjectSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAutoMergeProjectSettingsRequest(val *RestAutoMergeProjectSettingsRequest) *NullableRestAutoMergeProjectSettingsRequest {
	return &NullableRestAutoMergeProjectSettingsRequest{value: val, isSet: true}
}

func (v NullableRestAutoMergeProjectSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAutoMergeProjectSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


