/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestAutoMergeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestAutoMergeRequest{}

// RestAutoMergeRequest struct for RestAutoMergeRequest
type RestAutoMergeRequest struct {
	AutoSubject *bool `json:"autoSubject,omitempty"`
	CreatedDate *int64 `json:"createdDate,omitempty"`
	FromHash *string `json:"fromHash,omitempty"`
	Message *string `json:"message,omitempty"`
	StrategyId *string `json:"strategyId,omitempty"`
	ToRefId *string `json:"toRefId,omitempty"`
}

// NewRestAutoMergeRequest instantiates a new RestAutoMergeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestAutoMergeRequest() *RestAutoMergeRequest {
	this := RestAutoMergeRequest{}
	return &this
}

// NewRestAutoMergeRequestWithDefaults instantiates a new RestAutoMergeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestAutoMergeRequestWithDefaults() *RestAutoMergeRequest {
	this := RestAutoMergeRequest{}
	return &this
}

// GetAutoSubject returns the AutoSubject field value if set, zero value otherwise.
func (o *RestAutoMergeRequest) GetAutoSubject() bool {
	if o == nil || IsNil(o.AutoSubject) {
		var ret bool
		return ret
	}
	return *o.AutoSubject
}

// GetAutoSubjectOk returns a tuple with the AutoSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeRequest) GetAutoSubjectOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoSubject) {
		return nil, false
	}
	return o.AutoSubject, true
}

// HasAutoSubject returns a boolean if a field has been set.
func (o *RestAutoMergeRequest) HasAutoSubject() bool {
	if o != nil && !IsNil(o.AutoSubject) {
		return true
	}

	return false
}

// SetAutoSubject gets a reference to the given bool and assigns it to the AutoSubject field.
func (o *RestAutoMergeRequest) SetAutoSubject(v bool) {
	o.AutoSubject = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *RestAutoMergeRequest) GetCreatedDate() int64 {
	if o == nil || IsNil(o.CreatedDate) {
		var ret int64
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeRequest) GetCreatedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *RestAutoMergeRequest) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given int64 and assigns it to the CreatedDate field.
func (o *RestAutoMergeRequest) SetCreatedDate(v int64) {
	o.CreatedDate = &v
}

// GetFromHash returns the FromHash field value if set, zero value otherwise.
func (o *RestAutoMergeRequest) GetFromHash() string {
	if o == nil || IsNil(o.FromHash) {
		var ret string
		return ret
	}
	return *o.FromHash
}

// GetFromHashOk returns a tuple with the FromHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeRequest) GetFromHashOk() (*string, bool) {
	if o == nil || IsNil(o.FromHash) {
		return nil, false
	}
	return o.FromHash, true
}

// HasFromHash returns a boolean if a field has been set.
func (o *RestAutoMergeRequest) HasFromHash() bool {
	if o != nil && !IsNil(o.FromHash) {
		return true
	}

	return false
}

// SetFromHash gets a reference to the given string and assigns it to the FromHash field.
func (o *RestAutoMergeRequest) SetFromHash(v string) {
	o.FromHash = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *RestAutoMergeRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *RestAutoMergeRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *RestAutoMergeRequest) SetMessage(v string) {
	o.Message = &v
}

// GetStrategyId returns the StrategyId field value if set, zero value otherwise.
func (o *RestAutoMergeRequest) GetStrategyId() string {
	if o == nil || IsNil(o.StrategyId) {
		var ret string
		return ret
	}
	return *o.StrategyId
}

// GetStrategyIdOk returns a tuple with the StrategyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeRequest) GetStrategyIdOk() (*string, bool) {
	if o == nil || IsNil(o.StrategyId) {
		return nil, false
	}
	return o.StrategyId, true
}

// HasStrategyId returns a boolean if a field has been set.
func (o *RestAutoMergeRequest) HasStrategyId() bool {
	if o != nil && !IsNil(o.StrategyId) {
		return true
	}

	return false
}

// SetStrategyId gets a reference to the given string and assigns it to the StrategyId field.
func (o *RestAutoMergeRequest) SetStrategyId(v string) {
	o.StrategyId = &v
}

// GetToRefId returns the ToRefId field value if set, zero value otherwise.
func (o *RestAutoMergeRequest) GetToRefId() string {
	if o == nil || IsNil(o.ToRefId) {
		var ret string
		return ret
	}
	return *o.ToRefId
}

// GetToRefIdOk returns a tuple with the ToRefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestAutoMergeRequest) GetToRefIdOk() (*string, bool) {
	if o == nil || IsNil(o.ToRefId) {
		return nil, false
	}
	return o.ToRefId, true
}

// HasToRefId returns a boolean if a field has been set.
func (o *RestAutoMergeRequest) HasToRefId() bool {
	if o != nil && !IsNil(o.ToRefId) {
		return true
	}

	return false
}

// SetToRefId gets a reference to the given string and assigns it to the ToRefId field.
func (o *RestAutoMergeRequest) SetToRefId(v string) {
	o.ToRefId = &v
}

func (o RestAutoMergeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestAutoMergeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoSubject) {
		toSerialize["autoSubject"] = o.AutoSubject
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.FromHash) {
		toSerialize["fromHash"] = o.FromHash
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.StrategyId) {
		toSerialize["strategyId"] = o.StrategyId
	}
	if !IsNil(o.ToRefId) {
		toSerialize["toRefId"] = o.ToRefId
	}
	return toSerialize, nil
}

type NullableRestAutoMergeRequest struct {
	value *RestAutoMergeRequest
	isSet bool
}

func (v NullableRestAutoMergeRequest) Get() *RestAutoMergeRequest {
	return v.value
}

func (v *NullableRestAutoMergeRequest) Set(val *RestAutoMergeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestAutoMergeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestAutoMergeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestAutoMergeRequest(val *RestAutoMergeRequest) *NullableRestAutoMergeRequest {
	return &NullableRestAutoMergeRequest{value: val, isSet: true}
}

func (v NullableRestAutoMergeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestAutoMergeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


