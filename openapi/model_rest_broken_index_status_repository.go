/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestBrokenIndexStatusRepository type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestBrokenIndexStatusRepository{}

// RestBrokenIndexStatusRepository struct for RestBrokenIndexStatusRepository
type RestBrokenIndexStatusRepository struct {
	Details *RestBrokenIndexStatusRepositoryDetails `json:"details,omitempty"`
	Repository *RestBrokenIndexStatusRepositoryRepository `json:"repository,omitempty"`
}

// NewRestBrokenIndexStatusRepository instantiates a new RestBrokenIndexStatusRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestBrokenIndexStatusRepository() *RestBrokenIndexStatusRepository {
	this := RestBrokenIndexStatusRepository{}
	return &this
}

// NewRestBrokenIndexStatusRepositoryWithDefaults instantiates a new RestBrokenIndexStatusRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestBrokenIndexStatusRepositoryWithDefaults() *RestBrokenIndexStatusRepository {
	this := RestBrokenIndexStatusRepository{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *RestBrokenIndexStatusRepository) GetDetails() RestBrokenIndexStatusRepositoryDetails {
	if o == nil || IsNil(o.Details) {
		var ret RestBrokenIndexStatusRepositoryDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBrokenIndexStatusRepository) GetDetailsOk() (*RestBrokenIndexStatusRepositoryDetails, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *RestBrokenIndexStatusRepository) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given RestBrokenIndexStatusRepositoryDetails and assigns it to the Details field.
func (o *RestBrokenIndexStatusRepository) SetDetails(v RestBrokenIndexStatusRepositoryDetails) {
	o.Details = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *RestBrokenIndexStatusRepository) GetRepository() RestBrokenIndexStatusRepositoryRepository {
	if o == nil || IsNil(o.Repository) {
		var ret RestBrokenIndexStatusRepositoryRepository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBrokenIndexStatusRepository) GetRepositoryOk() (*RestBrokenIndexStatusRepositoryRepository, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *RestBrokenIndexStatusRepository) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given RestBrokenIndexStatusRepositoryRepository and assigns it to the Repository field.
func (o *RestBrokenIndexStatusRepository) SetRepository(v RestBrokenIndexStatusRepositoryRepository) {
	o.Repository = &v
}

func (o RestBrokenIndexStatusRepository) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestBrokenIndexStatusRepository) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	return toSerialize, nil
}

type NullableRestBrokenIndexStatusRepository struct {
	value *RestBrokenIndexStatusRepository
	isSet bool
}

func (v NullableRestBrokenIndexStatusRepository) Get() *RestBrokenIndexStatusRepository {
	return v.value
}

func (v *NullableRestBrokenIndexStatusRepository) Set(val *RestBrokenIndexStatusRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableRestBrokenIndexStatusRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableRestBrokenIndexStatusRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestBrokenIndexStatusRepository(val *RestBrokenIndexStatusRepository) *NullableRestBrokenIndexStatusRepository {
	return &NullableRestBrokenIndexStatusRepository{value: val, isSet: true}
}

func (v NullableRestBrokenIndexStatusRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestBrokenIndexStatusRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


