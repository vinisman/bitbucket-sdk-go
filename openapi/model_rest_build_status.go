/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestBuildStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestBuildStatus{}

// RestBuildStatus struct for RestBuildStatus
type RestBuildStatus struct {
	BuildNumber *string `json:"buildNumber,omitempty"`
	CreatedDate *int64 `json:"createdDate,omitempty"`
	Description *string `json:"description,omitempty"`
	Duration *int64 `json:"duration,omitempty"`
	Key *string `json:"key,omitempty"`
	Name *string `json:"name,omitempty"`
	Parent *string `json:"parent,omitempty"`
	ProjectKey *string `json:"projectKey,omitempty"`
	Ref *string `json:"ref,omitempty"`
	RepositorySlug *string `json:"repositorySlug,omitempty"`
	State *string `json:"state,omitempty"`
	TestResults *RestBuildStatusTestResults `json:"testResults,omitempty"`
	UpdatedDate *int64 `json:"updatedDate,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewRestBuildStatus instantiates a new RestBuildStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestBuildStatus() *RestBuildStatus {
	this := RestBuildStatus{}
	return &this
}

// NewRestBuildStatusWithDefaults instantiates a new RestBuildStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestBuildStatusWithDefaults() *RestBuildStatus {
	this := RestBuildStatus{}
	return &this
}

// GetBuildNumber returns the BuildNumber field value if set, zero value otherwise.
func (o *RestBuildStatus) GetBuildNumber() string {
	if o == nil || IsNil(o.BuildNumber) {
		var ret string
		return ret
	}
	return *o.BuildNumber
}

// GetBuildNumberOk returns a tuple with the BuildNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetBuildNumberOk() (*string, bool) {
	if o == nil || IsNil(o.BuildNumber) {
		return nil, false
	}
	return o.BuildNumber, true
}

// HasBuildNumber returns a boolean if a field has been set.
func (o *RestBuildStatus) HasBuildNumber() bool {
	if o != nil && !IsNil(o.BuildNumber) {
		return true
	}

	return false
}

// SetBuildNumber gets a reference to the given string and assigns it to the BuildNumber field.
func (o *RestBuildStatus) SetBuildNumber(v string) {
	o.BuildNumber = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *RestBuildStatus) GetCreatedDate() int64 {
	if o == nil || IsNil(o.CreatedDate) {
		var ret int64
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetCreatedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *RestBuildStatus) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given int64 and assigns it to the CreatedDate field.
func (o *RestBuildStatus) SetCreatedDate(v int64) {
	o.CreatedDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RestBuildStatus) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RestBuildStatus) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RestBuildStatus) SetDescription(v string) {
	o.Description = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *RestBuildStatus) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *RestBuildStatus) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *RestBuildStatus) SetDuration(v int64) {
	o.Duration = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *RestBuildStatus) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *RestBuildStatus) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *RestBuildStatus) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RestBuildStatus) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RestBuildStatus) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RestBuildStatus) SetName(v string) {
	o.Name = &v
}

// GetParent returns the Parent field value if set, zero value otherwise.
func (o *RestBuildStatus) GetParent() string {
	if o == nil || IsNil(o.Parent) {
		var ret string
		return ret
	}
	return *o.Parent
}

// GetParentOk returns a tuple with the Parent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetParentOk() (*string, bool) {
	if o == nil || IsNil(o.Parent) {
		return nil, false
	}
	return o.Parent, true
}

// HasParent returns a boolean if a field has been set.
func (o *RestBuildStatus) HasParent() bool {
	if o != nil && !IsNil(o.Parent) {
		return true
	}

	return false
}

// SetParent gets a reference to the given string and assigns it to the Parent field.
func (o *RestBuildStatus) SetParent(v string) {
	o.Parent = &v
}

// GetProjectKey returns the ProjectKey field value if set, zero value otherwise.
func (o *RestBuildStatus) GetProjectKey() string {
	if o == nil || IsNil(o.ProjectKey) {
		var ret string
		return ret
	}
	return *o.ProjectKey
}

// GetProjectKeyOk returns a tuple with the ProjectKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetProjectKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectKey) {
		return nil, false
	}
	return o.ProjectKey, true
}

// HasProjectKey returns a boolean if a field has been set.
func (o *RestBuildStatus) HasProjectKey() bool {
	if o != nil && !IsNil(o.ProjectKey) {
		return true
	}

	return false
}

// SetProjectKey gets a reference to the given string and assigns it to the ProjectKey field.
func (o *RestBuildStatus) SetProjectKey(v string) {
	o.ProjectKey = &v
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *RestBuildStatus) GetRef() string {
	if o == nil || IsNil(o.Ref) {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *RestBuildStatus) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *RestBuildStatus) SetRef(v string) {
	o.Ref = &v
}

// GetRepositorySlug returns the RepositorySlug field value if set, zero value otherwise.
func (o *RestBuildStatus) GetRepositorySlug() string {
	if o == nil || IsNil(o.RepositorySlug) {
		var ret string
		return ret
	}
	return *o.RepositorySlug
}

// GetRepositorySlugOk returns a tuple with the RepositorySlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetRepositorySlugOk() (*string, bool) {
	if o == nil || IsNil(o.RepositorySlug) {
		return nil, false
	}
	return o.RepositorySlug, true
}

// HasRepositorySlug returns a boolean if a field has been set.
func (o *RestBuildStatus) HasRepositorySlug() bool {
	if o != nil && !IsNil(o.RepositorySlug) {
		return true
	}

	return false
}

// SetRepositorySlug gets a reference to the given string and assigns it to the RepositorySlug field.
func (o *RestBuildStatus) SetRepositorySlug(v string) {
	o.RepositorySlug = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RestBuildStatus) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RestBuildStatus) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *RestBuildStatus) SetState(v string) {
	o.State = &v
}

// GetTestResults returns the TestResults field value if set, zero value otherwise.
func (o *RestBuildStatus) GetTestResults() RestBuildStatusTestResults {
	if o == nil || IsNil(o.TestResults) {
		var ret RestBuildStatusTestResults
		return ret
	}
	return *o.TestResults
}

// GetTestResultsOk returns a tuple with the TestResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetTestResultsOk() (*RestBuildStatusTestResults, bool) {
	if o == nil || IsNil(o.TestResults) {
		return nil, false
	}
	return o.TestResults, true
}

// HasTestResults returns a boolean if a field has been set.
func (o *RestBuildStatus) HasTestResults() bool {
	if o != nil && !IsNil(o.TestResults) {
		return true
	}

	return false
}

// SetTestResults gets a reference to the given RestBuildStatusTestResults and assigns it to the TestResults field.
func (o *RestBuildStatus) SetTestResults(v RestBuildStatusTestResults) {
	o.TestResults = &v
}

// GetUpdatedDate returns the UpdatedDate field value if set, zero value otherwise.
func (o *RestBuildStatus) GetUpdatedDate() int64 {
	if o == nil || IsNil(o.UpdatedDate) {
		var ret int64
		return ret
	}
	return *o.UpdatedDate
}

// GetUpdatedDateOk returns a tuple with the UpdatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetUpdatedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedDate) {
		return nil, false
	}
	return o.UpdatedDate, true
}

// HasUpdatedDate returns a boolean if a field has been set.
func (o *RestBuildStatus) HasUpdatedDate() bool {
	if o != nil && !IsNil(o.UpdatedDate) {
		return true
	}

	return false
}

// SetUpdatedDate gets a reference to the given int64 and assigns it to the UpdatedDate field.
func (o *RestBuildStatus) SetUpdatedDate(v int64) {
	o.UpdatedDate = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *RestBuildStatus) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestBuildStatus) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *RestBuildStatus) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *RestBuildStatus) SetUrl(v string) {
	o.Url = &v
}

func (o RestBuildStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestBuildStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildNumber) {
		toSerialize["buildNumber"] = o.BuildNumber
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Parent) {
		toSerialize["parent"] = o.Parent
	}
	if !IsNil(o.ProjectKey) {
		toSerialize["projectKey"] = o.ProjectKey
	}
	if !IsNil(o.Ref) {
		toSerialize["ref"] = o.Ref
	}
	if !IsNil(o.RepositorySlug) {
		toSerialize["repositorySlug"] = o.RepositorySlug
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.TestResults) {
		toSerialize["testResults"] = o.TestResults
	}
	if !IsNil(o.UpdatedDate) {
		toSerialize["updatedDate"] = o.UpdatedDate
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableRestBuildStatus struct {
	value *RestBuildStatus
	isSet bool
}

func (v NullableRestBuildStatus) Get() *RestBuildStatus {
	return v.value
}

func (v *NullableRestBuildStatus) Set(val *RestBuildStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableRestBuildStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableRestBuildStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestBuildStatus(val *RestBuildStatus) *NullableRestBuildStatus {
	return &NullableRestBuildStatus{value: val, isSet: true}
}

func (v NullableRestBuildStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestBuildStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


