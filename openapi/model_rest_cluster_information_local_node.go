/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestClusterInformationLocalNode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestClusterInformationLocalNode{}

// RestClusterInformationLocalNode struct for RestClusterInformationLocalNode
type RestClusterInformationLocalNode struct {
	Address *RestClusterNodeAddress `json:"address,omitempty"`
	BuildVersion *string `json:"buildVersion,omitempty"`
	Id *string `json:"id,omitempty"`
	Local *bool `json:"local,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewRestClusterInformationLocalNode instantiates a new RestClusterInformationLocalNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestClusterInformationLocalNode() *RestClusterInformationLocalNode {
	this := RestClusterInformationLocalNode{}
	return &this
}

// NewRestClusterInformationLocalNodeWithDefaults instantiates a new RestClusterInformationLocalNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestClusterInformationLocalNodeWithDefaults() *RestClusterInformationLocalNode {
	this := RestClusterInformationLocalNode{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *RestClusterInformationLocalNode) GetAddress() RestClusterNodeAddress {
	if o == nil || IsNil(o.Address) {
		var ret RestClusterNodeAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestClusterInformationLocalNode) GetAddressOk() (*RestClusterNodeAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *RestClusterInformationLocalNode) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given RestClusterNodeAddress and assigns it to the Address field.
func (o *RestClusterInformationLocalNode) SetAddress(v RestClusterNodeAddress) {
	o.Address = &v
}

// GetBuildVersion returns the BuildVersion field value if set, zero value otherwise.
func (o *RestClusterInformationLocalNode) GetBuildVersion() string {
	if o == nil || IsNil(o.BuildVersion) {
		var ret string
		return ret
	}
	return *o.BuildVersion
}

// GetBuildVersionOk returns a tuple with the BuildVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestClusterInformationLocalNode) GetBuildVersionOk() (*string, bool) {
	if o == nil || IsNil(o.BuildVersion) {
		return nil, false
	}
	return o.BuildVersion, true
}

// HasBuildVersion returns a boolean if a field has been set.
func (o *RestClusterInformationLocalNode) HasBuildVersion() bool {
	if o != nil && !IsNil(o.BuildVersion) {
		return true
	}

	return false
}

// SetBuildVersion gets a reference to the given string and assigns it to the BuildVersion field.
func (o *RestClusterInformationLocalNode) SetBuildVersion(v string) {
	o.BuildVersion = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestClusterInformationLocalNode) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestClusterInformationLocalNode) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestClusterInformationLocalNode) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RestClusterInformationLocalNode) SetId(v string) {
	o.Id = &v
}

// GetLocal returns the Local field value if set, zero value otherwise.
func (o *RestClusterInformationLocalNode) GetLocal() bool {
	if o == nil || IsNil(o.Local) {
		var ret bool
		return ret
	}
	return *o.Local
}

// GetLocalOk returns a tuple with the Local field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestClusterInformationLocalNode) GetLocalOk() (*bool, bool) {
	if o == nil || IsNil(o.Local) {
		return nil, false
	}
	return o.Local, true
}

// HasLocal returns a boolean if a field has been set.
func (o *RestClusterInformationLocalNode) HasLocal() bool {
	if o != nil && !IsNil(o.Local) {
		return true
	}

	return false
}

// SetLocal gets a reference to the given bool and assigns it to the Local field.
func (o *RestClusterInformationLocalNode) SetLocal(v bool) {
	o.Local = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RestClusterInformationLocalNode) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestClusterInformationLocalNode) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RestClusterInformationLocalNode) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RestClusterInformationLocalNode) SetName(v string) {
	o.Name = &v
}

func (o RestClusterInformationLocalNode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestClusterInformationLocalNode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.BuildVersion) {
		toSerialize["buildVersion"] = o.BuildVersion
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Local) {
		toSerialize["local"] = o.Local
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableRestClusterInformationLocalNode struct {
	value *RestClusterInformationLocalNode
	isSet bool
}

func (v NullableRestClusterInformationLocalNode) Get() *RestClusterInformationLocalNode {
	return v.value
}

func (v *NullableRestClusterInformationLocalNode) Set(val *RestClusterInformationLocalNode) {
	v.value = val
	v.isSet = true
}

func (v NullableRestClusterInformationLocalNode) IsSet() bool {
	return v.isSet
}

func (v *NullableRestClusterInformationLocalNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestClusterInformationLocalNode(val *RestClusterInformationLocalNode) *NullableRestClusterInformationLocalNode {
	return &NullableRestClusterInformationLocalNode{value: val, isSet: true}
}

func (v NullableRestClusterInformationLocalNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestClusterInformationLocalNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


