/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestDefaultReviewersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestDefaultReviewersRequest{}

// RestDefaultReviewersRequest struct for RestDefaultReviewersRequest
type RestDefaultReviewersRequest struct {
	RequiredApprovals *int32 `json:"requiredApprovals,omitempty"`
	ReviewerGroups []RestReviewerGroup `json:"reviewerGroups,omitempty"`
	Reviewers []RestApplicationUser `json:"reviewers,omitempty"`
	SourceMatcher *UpdatePullRequestCondition1RequestSourceMatcher `json:"sourceMatcher,omitempty"`
	TargetMatcher *UpdatePullRequestCondition1RequestSourceMatcher `json:"targetMatcher,omitempty"`
}

// NewRestDefaultReviewersRequest instantiates a new RestDefaultReviewersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestDefaultReviewersRequest() *RestDefaultReviewersRequest {
	this := RestDefaultReviewersRequest{}
	return &this
}

// NewRestDefaultReviewersRequestWithDefaults instantiates a new RestDefaultReviewersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestDefaultReviewersRequestWithDefaults() *RestDefaultReviewersRequest {
	this := RestDefaultReviewersRequest{}
	return &this
}

// GetRequiredApprovals returns the RequiredApprovals field value if set, zero value otherwise.
func (o *RestDefaultReviewersRequest) GetRequiredApprovals() int32 {
	if o == nil || IsNil(o.RequiredApprovals) {
		var ret int32
		return ret
	}
	return *o.RequiredApprovals
}

// GetRequiredApprovalsOk returns a tuple with the RequiredApprovals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDefaultReviewersRequest) GetRequiredApprovalsOk() (*int32, bool) {
	if o == nil || IsNil(o.RequiredApprovals) {
		return nil, false
	}
	return o.RequiredApprovals, true
}

// HasRequiredApprovals returns a boolean if a field has been set.
func (o *RestDefaultReviewersRequest) HasRequiredApprovals() bool {
	if o != nil && !IsNil(o.RequiredApprovals) {
		return true
	}

	return false
}

// SetRequiredApprovals gets a reference to the given int32 and assigns it to the RequiredApprovals field.
func (o *RestDefaultReviewersRequest) SetRequiredApprovals(v int32) {
	o.RequiredApprovals = &v
}

// GetReviewerGroups returns the ReviewerGroups field value if set, zero value otherwise.
func (o *RestDefaultReviewersRequest) GetReviewerGroups() []RestReviewerGroup {
	if o == nil || IsNil(o.ReviewerGroups) {
		var ret []RestReviewerGroup
		return ret
	}
	return o.ReviewerGroups
}

// GetReviewerGroupsOk returns a tuple with the ReviewerGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDefaultReviewersRequest) GetReviewerGroupsOk() ([]RestReviewerGroup, bool) {
	if o == nil || IsNil(o.ReviewerGroups) {
		return nil, false
	}
	return o.ReviewerGroups, true
}

// HasReviewerGroups returns a boolean if a field has been set.
func (o *RestDefaultReviewersRequest) HasReviewerGroups() bool {
	if o != nil && !IsNil(o.ReviewerGroups) {
		return true
	}

	return false
}

// SetReviewerGroups gets a reference to the given []RestReviewerGroup and assigns it to the ReviewerGroups field.
func (o *RestDefaultReviewersRequest) SetReviewerGroups(v []RestReviewerGroup) {
	o.ReviewerGroups = v
}

// GetReviewers returns the Reviewers field value if set, zero value otherwise.
func (o *RestDefaultReviewersRequest) GetReviewers() []RestApplicationUser {
	if o == nil || IsNil(o.Reviewers) {
		var ret []RestApplicationUser
		return ret
	}
	return o.Reviewers
}

// GetReviewersOk returns a tuple with the Reviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDefaultReviewersRequest) GetReviewersOk() ([]RestApplicationUser, bool) {
	if o == nil || IsNil(o.Reviewers) {
		return nil, false
	}
	return o.Reviewers, true
}

// HasReviewers returns a boolean if a field has been set.
func (o *RestDefaultReviewersRequest) HasReviewers() bool {
	if o != nil && !IsNil(o.Reviewers) {
		return true
	}

	return false
}

// SetReviewers gets a reference to the given []RestApplicationUser and assigns it to the Reviewers field.
func (o *RestDefaultReviewersRequest) SetReviewers(v []RestApplicationUser) {
	o.Reviewers = v
}

// GetSourceMatcher returns the SourceMatcher field value if set, zero value otherwise.
func (o *RestDefaultReviewersRequest) GetSourceMatcher() UpdatePullRequestCondition1RequestSourceMatcher {
	if o == nil || IsNil(o.SourceMatcher) {
		var ret UpdatePullRequestCondition1RequestSourceMatcher
		return ret
	}
	return *o.SourceMatcher
}

// GetSourceMatcherOk returns a tuple with the SourceMatcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDefaultReviewersRequest) GetSourceMatcherOk() (*UpdatePullRequestCondition1RequestSourceMatcher, bool) {
	if o == nil || IsNil(o.SourceMatcher) {
		return nil, false
	}
	return o.SourceMatcher, true
}

// HasSourceMatcher returns a boolean if a field has been set.
func (o *RestDefaultReviewersRequest) HasSourceMatcher() bool {
	if o != nil && !IsNil(o.SourceMatcher) {
		return true
	}

	return false
}

// SetSourceMatcher gets a reference to the given UpdatePullRequestCondition1RequestSourceMatcher and assigns it to the SourceMatcher field.
func (o *RestDefaultReviewersRequest) SetSourceMatcher(v UpdatePullRequestCondition1RequestSourceMatcher) {
	o.SourceMatcher = &v
}

// GetTargetMatcher returns the TargetMatcher field value if set, zero value otherwise.
func (o *RestDefaultReviewersRequest) GetTargetMatcher() UpdatePullRequestCondition1RequestSourceMatcher {
	if o == nil || IsNil(o.TargetMatcher) {
		var ret UpdatePullRequestCondition1RequestSourceMatcher
		return ret
	}
	return *o.TargetMatcher
}

// GetTargetMatcherOk returns a tuple with the TargetMatcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDefaultReviewersRequest) GetTargetMatcherOk() (*UpdatePullRequestCondition1RequestSourceMatcher, bool) {
	if o == nil || IsNil(o.TargetMatcher) {
		return nil, false
	}
	return o.TargetMatcher, true
}

// HasTargetMatcher returns a boolean if a field has been set.
func (o *RestDefaultReviewersRequest) HasTargetMatcher() bool {
	if o != nil && !IsNil(o.TargetMatcher) {
		return true
	}

	return false
}

// SetTargetMatcher gets a reference to the given UpdatePullRequestCondition1RequestSourceMatcher and assigns it to the TargetMatcher field.
func (o *RestDefaultReviewersRequest) SetTargetMatcher(v UpdatePullRequestCondition1RequestSourceMatcher) {
	o.TargetMatcher = &v
}

func (o RestDefaultReviewersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestDefaultReviewersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequiredApprovals) {
		toSerialize["requiredApprovals"] = o.RequiredApprovals
	}
	if !IsNil(o.ReviewerGroups) {
		toSerialize["reviewerGroups"] = o.ReviewerGroups
	}
	if !IsNil(o.Reviewers) {
		toSerialize["reviewers"] = o.Reviewers
	}
	if !IsNil(o.SourceMatcher) {
		toSerialize["sourceMatcher"] = o.SourceMatcher
	}
	if !IsNil(o.TargetMatcher) {
		toSerialize["targetMatcher"] = o.TargetMatcher
	}
	return toSerialize, nil
}

type NullableRestDefaultReviewersRequest struct {
	value *RestDefaultReviewersRequest
	isSet bool
}

func (v NullableRestDefaultReviewersRequest) Get() *RestDefaultReviewersRequest {
	return v.value
}

func (v *NullableRestDefaultReviewersRequest) Set(val *RestDefaultReviewersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestDefaultReviewersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestDefaultReviewersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestDefaultReviewersRequest(val *RestDefaultReviewersRequest) *NullableRestDefaultReviewersRequest {
	return &NullableRestDefaultReviewersRequest{value: val, isSet: true}
}

func (v NullableRestDefaultReviewersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestDefaultReviewersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


