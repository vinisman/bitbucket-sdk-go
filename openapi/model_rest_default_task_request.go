/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestDefaultTaskRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestDefaultTaskRequest{}

// RestDefaultTaskRequest struct for RestDefaultTaskRequest
type RestDefaultTaskRequest struct {
	Description *string `json:"description,omitempty"`
	SourceMatcher *UpdatePullRequestCondition1RequestSourceMatcher `json:"sourceMatcher,omitempty"`
	TargetMatcher *UpdatePullRequestCondition1RequestSourceMatcher `json:"targetMatcher,omitempty"`
}

// NewRestDefaultTaskRequest instantiates a new RestDefaultTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestDefaultTaskRequest() *RestDefaultTaskRequest {
	this := RestDefaultTaskRequest{}
	return &this
}

// NewRestDefaultTaskRequestWithDefaults instantiates a new RestDefaultTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestDefaultTaskRequestWithDefaults() *RestDefaultTaskRequest {
	this := RestDefaultTaskRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RestDefaultTaskRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDefaultTaskRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RestDefaultTaskRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RestDefaultTaskRequest) SetDescription(v string) {
	o.Description = &v
}

// GetSourceMatcher returns the SourceMatcher field value if set, zero value otherwise.
func (o *RestDefaultTaskRequest) GetSourceMatcher() UpdatePullRequestCondition1RequestSourceMatcher {
	if o == nil || IsNil(o.SourceMatcher) {
		var ret UpdatePullRequestCondition1RequestSourceMatcher
		return ret
	}
	return *o.SourceMatcher
}

// GetSourceMatcherOk returns a tuple with the SourceMatcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDefaultTaskRequest) GetSourceMatcherOk() (*UpdatePullRequestCondition1RequestSourceMatcher, bool) {
	if o == nil || IsNil(o.SourceMatcher) {
		return nil, false
	}
	return o.SourceMatcher, true
}

// HasSourceMatcher returns a boolean if a field has been set.
func (o *RestDefaultTaskRequest) HasSourceMatcher() bool {
	if o != nil && !IsNil(o.SourceMatcher) {
		return true
	}

	return false
}

// SetSourceMatcher gets a reference to the given UpdatePullRequestCondition1RequestSourceMatcher and assigns it to the SourceMatcher field.
func (o *RestDefaultTaskRequest) SetSourceMatcher(v UpdatePullRequestCondition1RequestSourceMatcher) {
	o.SourceMatcher = &v
}

// GetTargetMatcher returns the TargetMatcher field value if set, zero value otherwise.
func (o *RestDefaultTaskRequest) GetTargetMatcher() UpdatePullRequestCondition1RequestSourceMatcher {
	if o == nil || IsNil(o.TargetMatcher) {
		var ret UpdatePullRequestCondition1RequestSourceMatcher
		return ret
	}
	return *o.TargetMatcher
}

// GetTargetMatcherOk returns a tuple with the TargetMatcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDefaultTaskRequest) GetTargetMatcherOk() (*UpdatePullRequestCondition1RequestSourceMatcher, bool) {
	if o == nil || IsNil(o.TargetMatcher) {
		return nil, false
	}
	return o.TargetMatcher, true
}

// HasTargetMatcher returns a boolean if a field has been set.
func (o *RestDefaultTaskRequest) HasTargetMatcher() bool {
	if o != nil && !IsNil(o.TargetMatcher) {
		return true
	}

	return false
}

// SetTargetMatcher gets a reference to the given UpdatePullRequestCondition1RequestSourceMatcher and assigns it to the TargetMatcher field.
func (o *RestDefaultTaskRequest) SetTargetMatcher(v UpdatePullRequestCondition1RequestSourceMatcher) {
	o.TargetMatcher = &v
}

func (o RestDefaultTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestDefaultTaskRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.SourceMatcher) {
		toSerialize["sourceMatcher"] = o.SourceMatcher
	}
	if !IsNil(o.TargetMatcher) {
		toSerialize["targetMatcher"] = o.TargetMatcher
	}
	return toSerialize, nil
}

type NullableRestDefaultTaskRequest struct {
	value *RestDefaultTaskRequest
	isSet bool
}

func (v NullableRestDefaultTaskRequest) Get() *RestDefaultTaskRequest {
	return v.value
}

func (v *NullableRestDefaultTaskRequest) Set(val *RestDefaultTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestDefaultTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestDefaultTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestDefaultTaskRequest(val *RestDefaultTaskRequest) *NullableRestDefaultTaskRequest {
	return &NullableRestDefaultTaskRequest{value: val, isSet: true}
}

func (v NullableRestDefaultTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestDefaultTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


