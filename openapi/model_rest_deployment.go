/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestDeployment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestDeployment{}

// RestDeployment struct for RestDeployment
type RestDeployment struct {
	DeploymentSequenceNumber *int64 `json:"deploymentSequenceNumber,omitempty"`
	Description *string `json:"description,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Environment *RestDeploymentEnvironment `json:"environment,omitempty"`
	FromCommit *RestChangesetFromCommit `json:"fromCommit,omitempty"`
	Key *string `json:"key,omitempty"`
	LastUpdated *int64 `json:"lastUpdated,omitempty"`
	Repository *RestChangesetRepository `json:"repository,omitempty"`
	State *string `json:"state,omitempty"`
	ToCommit *RestChangesetFromCommit `json:"toCommit,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewRestDeployment instantiates a new RestDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestDeployment() *RestDeployment {
	this := RestDeployment{}
	return &this
}

// NewRestDeploymentWithDefaults instantiates a new RestDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestDeploymentWithDefaults() *RestDeployment {
	this := RestDeployment{}
	return &this
}

// GetDeploymentSequenceNumber returns the DeploymentSequenceNumber field value if set, zero value otherwise.
func (o *RestDeployment) GetDeploymentSequenceNumber() int64 {
	if o == nil || IsNil(o.DeploymentSequenceNumber) {
		var ret int64
		return ret
	}
	return *o.DeploymentSequenceNumber
}

// GetDeploymentSequenceNumberOk returns a tuple with the DeploymentSequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetDeploymentSequenceNumberOk() (*int64, bool) {
	if o == nil || IsNil(o.DeploymentSequenceNumber) {
		return nil, false
	}
	return o.DeploymentSequenceNumber, true
}

// HasDeploymentSequenceNumber returns a boolean if a field has been set.
func (o *RestDeployment) HasDeploymentSequenceNumber() bool {
	if o != nil && !IsNil(o.DeploymentSequenceNumber) {
		return true
	}

	return false
}

// SetDeploymentSequenceNumber gets a reference to the given int64 and assigns it to the DeploymentSequenceNumber field.
func (o *RestDeployment) SetDeploymentSequenceNumber(v int64) {
	o.DeploymentSequenceNumber = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RestDeployment) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RestDeployment) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RestDeployment) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *RestDeployment) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *RestDeployment) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *RestDeployment) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *RestDeployment) GetEnvironment() RestDeploymentEnvironment {
	if o == nil || IsNil(o.Environment) {
		var ret RestDeploymentEnvironment
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetEnvironmentOk() (*RestDeploymentEnvironment, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *RestDeployment) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given RestDeploymentEnvironment and assigns it to the Environment field.
func (o *RestDeployment) SetEnvironment(v RestDeploymentEnvironment) {
	o.Environment = &v
}

// GetFromCommit returns the FromCommit field value if set, zero value otherwise.
func (o *RestDeployment) GetFromCommit() RestChangesetFromCommit {
	if o == nil || IsNil(o.FromCommit) {
		var ret RestChangesetFromCommit
		return ret
	}
	return *o.FromCommit
}

// GetFromCommitOk returns a tuple with the FromCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetFromCommitOk() (*RestChangesetFromCommit, bool) {
	if o == nil || IsNil(o.FromCommit) {
		return nil, false
	}
	return o.FromCommit, true
}

// HasFromCommit returns a boolean if a field has been set.
func (o *RestDeployment) HasFromCommit() bool {
	if o != nil && !IsNil(o.FromCommit) {
		return true
	}

	return false
}

// SetFromCommit gets a reference to the given RestChangesetFromCommit and assigns it to the FromCommit field.
func (o *RestDeployment) SetFromCommit(v RestChangesetFromCommit) {
	o.FromCommit = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *RestDeployment) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *RestDeployment) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *RestDeployment) SetKey(v string) {
	o.Key = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *RestDeployment) GetLastUpdated() int64 {
	if o == nil || IsNil(o.LastUpdated) {
		var ret int64
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetLastUpdatedOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *RestDeployment) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given int64 and assigns it to the LastUpdated field.
func (o *RestDeployment) SetLastUpdated(v int64) {
	o.LastUpdated = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *RestDeployment) GetRepository() RestChangesetRepository {
	if o == nil || IsNil(o.Repository) {
		var ret RestChangesetRepository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetRepositoryOk() (*RestChangesetRepository, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *RestDeployment) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given RestChangesetRepository and assigns it to the Repository field.
func (o *RestDeployment) SetRepository(v RestChangesetRepository) {
	o.Repository = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RestDeployment) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RestDeployment) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *RestDeployment) SetState(v string) {
	o.State = &v
}

// GetToCommit returns the ToCommit field value if set, zero value otherwise.
func (o *RestDeployment) GetToCommit() RestChangesetFromCommit {
	if o == nil || IsNil(o.ToCommit) {
		var ret RestChangesetFromCommit
		return ret
	}
	return *o.ToCommit
}

// GetToCommitOk returns a tuple with the ToCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetToCommitOk() (*RestChangesetFromCommit, bool) {
	if o == nil || IsNil(o.ToCommit) {
		return nil, false
	}
	return o.ToCommit, true
}

// HasToCommit returns a boolean if a field has been set.
func (o *RestDeployment) HasToCommit() bool {
	if o != nil && !IsNil(o.ToCommit) {
		return true
	}

	return false
}

// SetToCommit gets a reference to the given RestChangesetFromCommit and assigns it to the ToCommit field.
func (o *RestDeployment) SetToCommit(v RestChangesetFromCommit) {
	o.ToCommit = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *RestDeployment) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDeployment) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *RestDeployment) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *RestDeployment) SetUrl(v string) {
	o.Url = &v
}

func (o RestDeployment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestDeployment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeploymentSequenceNumber) {
		toSerialize["deploymentSequenceNumber"] = o.DeploymentSequenceNumber
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	if !IsNil(o.FromCommit) {
		toSerialize["fromCommit"] = o.FromCommit
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.ToCommit) {
		toSerialize["toCommit"] = o.ToCommit
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableRestDeployment struct {
	value *RestDeployment
	isSet bool
}

func (v NullableRestDeployment) Get() *RestDeployment {
	return v.value
}

func (v *NullableRestDeployment) Set(val *RestDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullableRestDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableRestDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestDeployment(val *RestDeployment) *NullableRestDeployment {
	return &NullableRestDeployment{value: val, isSet: true}
}

func (v NullableRestDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


