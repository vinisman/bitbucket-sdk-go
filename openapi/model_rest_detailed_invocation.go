/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestDetailedInvocation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestDetailedInvocation{}

// RestDetailedInvocation struct for RestDetailedInvocation
type RestDetailedInvocation struct {
	Duration *int32 `json:"duration,omitempty"`
	Event *string `json:"event,omitempty"`
	EventScope *RestDetailedInvocationEventScope `json:"eventScope,omitempty"`
	Finish *int32 `json:"finish,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Request map[string]interface{} `json:"request,omitempty"`
	Result map[string]interface{} `json:"result,omitempty"`
	Start *int32 `json:"start,omitempty"`
}

// NewRestDetailedInvocation instantiates a new RestDetailedInvocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestDetailedInvocation() *RestDetailedInvocation {
	this := RestDetailedInvocation{}
	return &this
}

// NewRestDetailedInvocationWithDefaults instantiates a new RestDetailedInvocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestDetailedInvocationWithDefaults() *RestDetailedInvocation {
	this := RestDetailedInvocation{}
	return &this
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *RestDetailedInvocation) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocation) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *RestDetailedInvocation) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *RestDetailedInvocation) SetDuration(v int32) {
	o.Duration = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *RestDetailedInvocation) GetEvent() string {
	if o == nil || IsNil(o.Event) {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocation) GetEventOk() (*string, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *RestDetailedInvocation) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *RestDetailedInvocation) SetEvent(v string) {
	o.Event = &v
}

// GetEventScope returns the EventScope field value if set, zero value otherwise.
func (o *RestDetailedInvocation) GetEventScope() RestDetailedInvocationEventScope {
	if o == nil || IsNil(o.EventScope) {
		var ret RestDetailedInvocationEventScope
		return ret
	}
	return *o.EventScope
}

// GetEventScopeOk returns a tuple with the EventScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocation) GetEventScopeOk() (*RestDetailedInvocationEventScope, bool) {
	if o == nil || IsNil(o.EventScope) {
		return nil, false
	}
	return o.EventScope, true
}

// HasEventScope returns a boolean if a field has been set.
func (o *RestDetailedInvocation) HasEventScope() bool {
	if o != nil && !IsNil(o.EventScope) {
		return true
	}

	return false
}

// SetEventScope gets a reference to the given RestDetailedInvocationEventScope and assigns it to the EventScope field.
func (o *RestDetailedInvocation) SetEventScope(v RestDetailedInvocationEventScope) {
	o.EventScope = &v
}

// GetFinish returns the Finish field value if set, zero value otherwise.
func (o *RestDetailedInvocation) GetFinish() int32 {
	if o == nil || IsNil(o.Finish) {
		var ret int32
		return ret
	}
	return *o.Finish
}

// GetFinishOk returns a tuple with the Finish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocation) GetFinishOk() (*int32, bool) {
	if o == nil || IsNil(o.Finish) {
		return nil, false
	}
	return o.Finish, true
}

// HasFinish returns a boolean if a field has been set.
func (o *RestDetailedInvocation) HasFinish() bool {
	if o != nil && !IsNil(o.Finish) {
		return true
	}

	return false
}

// SetFinish gets a reference to the given int32 and assigns it to the Finish field.
func (o *RestDetailedInvocation) SetFinish(v int32) {
	o.Finish = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestDetailedInvocation) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocation) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestDetailedInvocation) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RestDetailedInvocation) SetId(v int32) {
	o.Id = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *RestDetailedInvocation) GetRequest() map[string]interface{} {
	if o == nil || IsNil(o.Request) {
		var ret map[string]interface{}
		return ret
	}
	return o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocation) GetRequestOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Request) {
		return map[string]interface{}{}, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *RestDetailedInvocation) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given map[string]interface{} and assigns it to the Request field.
func (o *RestDetailedInvocation) SetRequest(v map[string]interface{}) {
	o.Request = v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *RestDetailedInvocation) GetResult() map[string]interface{} {
	if o == nil || IsNil(o.Result) {
		var ret map[string]interface{}
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocation) GetResultOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Result) {
		return map[string]interface{}{}, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *RestDetailedInvocation) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given map[string]interface{} and assigns it to the Result field.
func (o *RestDetailedInvocation) SetResult(v map[string]interface{}) {
	o.Result = v
}

// GetStart returns the Start field value if set, zero value otherwise.
func (o *RestDetailedInvocation) GetStart() int32 {
	if o == nil || IsNil(o.Start) {
		var ret int32
		return ret
	}
	return *o.Start
}

// GetStartOk returns a tuple with the Start field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocation) GetStartOk() (*int32, bool) {
	if o == nil || IsNil(o.Start) {
		return nil, false
	}
	return o.Start, true
}

// HasStart returns a boolean if a field has been set.
func (o *RestDetailedInvocation) HasStart() bool {
	if o != nil && !IsNil(o.Start) {
		return true
	}

	return false
}

// SetStart gets a reference to the given int32 and assigns it to the Start field.
func (o *RestDetailedInvocation) SetStart(v int32) {
	o.Start = &v
}

func (o RestDetailedInvocation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestDetailedInvocation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	if !IsNil(o.EventScope) {
		toSerialize["eventScope"] = o.EventScope
	}
	if !IsNil(o.Finish) {
		toSerialize["finish"] = o.Finish
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Start) {
		toSerialize["start"] = o.Start
	}
	return toSerialize, nil
}

type NullableRestDetailedInvocation struct {
	value *RestDetailedInvocation
	isSet bool
}

func (v NullableRestDetailedInvocation) Get() *RestDetailedInvocation {
	return v.value
}

func (v *NullableRestDetailedInvocation) Set(val *RestDetailedInvocation) {
	v.value = val
	v.isSet = true
}

func (v NullableRestDetailedInvocation) IsSet() bool {
	return v.isSet
}

func (v *NullableRestDetailedInvocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestDetailedInvocation(val *RestDetailedInvocation) *NullableRestDetailedInvocation {
	return &NullableRestDetailedInvocation{value: val, isSet: true}
}

func (v NullableRestDetailedInvocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestDetailedInvocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


