/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestDetailedInvocationEventScope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestDetailedInvocationEventScope{}

// RestDetailedInvocationEventScope struct for RestDetailedInvocationEventScope
type RestDetailedInvocationEventScope struct {
	Id *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewRestDetailedInvocationEventScope instantiates a new RestDetailedInvocationEventScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestDetailedInvocationEventScope() *RestDetailedInvocationEventScope {
	this := RestDetailedInvocationEventScope{}
	return &this
}

// NewRestDetailedInvocationEventScopeWithDefaults instantiates a new RestDetailedInvocationEventScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestDetailedInvocationEventScopeWithDefaults() *RestDetailedInvocationEventScope {
	this := RestDetailedInvocationEventScope{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestDetailedInvocationEventScope) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocationEventScope) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestDetailedInvocationEventScope) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RestDetailedInvocationEventScope) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RestDetailedInvocationEventScope) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestDetailedInvocationEventScope) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RestDetailedInvocationEventScope) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RestDetailedInvocationEventScope) SetType(v string) {
	o.Type = &v
}

func (o RestDetailedInvocationEventScope) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestDetailedInvocationEventScope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableRestDetailedInvocationEventScope struct {
	value *RestDetailedInvocationEventScope
	isSet bool
}

func (v NullableRestDetailedInvocationEventScope) Get() *RestDetailedInvocationEventScope {
	return v.value
}

func (v *NullableRestDetailedInvocationEventScope) Set(val *RestDetailedInvocationEventScope) {
	v.value = val
	v.isSet = true
}

func (v NullableRestDetailedInvocationEventScope) IsSet() bool {
	return v.isSet
}

func (v *NullableRestDetailedInvocationEventScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestDetailedInvocationEventScope(val *RestDetailedInvocationEventScope) *NullableRestDetailedInvocationEventScope {
	return &NullableRestDetailedInvocationEventScope{value: val, isSet: true}
}

func (v NullableRestDetailedInvocationEventScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestDetailedInvocationEventScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


