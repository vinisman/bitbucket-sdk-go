/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestFarmSynchronizationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestFarmSynchronizationRequest{}

// RestFarmSynchronizationRequest struct for RestFarmSynchronizationRequest
type RestFarmSynchronizationRequest struct {
	Attempt *int32 `json:"attempt,omitempty"`
	CreatedAt *string `json:"createdAt,omitempty"`
	ExternalRepoId *string `json:"externalRepoId,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewRestFarmSynchronizationRequest instantiates a new RestFarmSynchronizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestFarmSynchronizationRequest() *RestFarmSynchronizationRequest {
	this := RestFarmSynchronizationRequest{}
	return &this
}

// NewRestFarmSynchronizationRequestWithDefaults instantiates a new RestFarmSynchronizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestFarmSynchronizationRequestWithDefaults() *RestFarmSynchronizationRequest {
	this := RestFarmSynchronizationRequest{}
	return &this
}

// GetAttempt returns the Attempt field value if set, zero value otherwise.
func (o *RestFarmSynchronizationRequest) GetAttempt() int32 {
	if o == nil || IsNil(o.Attempt) {
		var ret int32
		return ret
	}
	return *o.Attempt
}

// GetAttemptOk returns a tuple with the Attempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestFarmSynchronizationRequest) GetAttemptOk() (*int32, bool) {
	if o == nil || IsNil(o.Attempt) {
		return nil, false
	}
	return o.Attempt, true
}

// HasAttempt returns a boolean if a field has been set.
func (o *RestFarmSynchronizationRequest) HasAttempt() bool {
	if o != nil && !IsNil(o.Attempt) {
		return true
	}

	return false
}

// SetAttempt gets a reference to the given int32 and assigns it to the Attempt field.
func (o *RestFarmSynchronizationRequest) SetAttempt(v int32) {
	o.Attempt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RestFarmSynchronizationRequest) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestFarmSynchronizationRequest) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RestFarmSynchronizationRequest) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *RestFarmSynchronizationRequest) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetExternalRepoId returns the ExternalRepoId field value if set, zero value otherwise.
func (o *RestFarmSynchronizationRequest) GetExternalRepoId() string {
	if o == nil || IsNil(o.ExternalRepoId) {
		var ret string
		return ret
	}
	return *o.ExternalRepoId
}

// GetExternalRepoIdOk returns a tuple with the ExternalRepoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestFarmSynchronizationRequest) GetExternalRepoIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalRepoId) {
		return nil, false
	}
	return o.ExternalRepoId, true
}

// HasExternalRepoId returns a boolean if a field has been set.
func (o *RestFarmSynchronizationRequest) HasExternalRepoId() bool {
	if o != nil && !IsNil(o.ExternalRepoId) {
		return true
	}

	return false
}

// SetExternalRepoId gets a reference to the given string and assigns it to the ExternalRepoId field.
func (o *RestFarmSynchronizationRequest) SetExternalRepoId(v string) {
	o.ExternalRepoId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RestFarmSynchronizationRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestFarmSynchronizationRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RestFarmSynchronizationRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RestFarmSynchronizationRequest) SetType(v string) {
	o.Type = &v
}

func (o RestFarmSynchronizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestFarmSynchronizationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attempt) {
		toSerialize["attempt"] = o.Attempt
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.ExternalRepoId) {
		toSerialize["externalRepoId"] = o.ExternalRepoId
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableRestFarmSynchronizationRequest struct {
	value *RestFarmSynchronizationRequest
	isSet bool
}

func (v NullableRestFarmSynchronizationRequest) Get() *RestFarmSynchronizationRequest {
	return v.value
}

func (v *NullableRestFarmSynchronizationRequest) Set(val *RestFarmSynchronizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestFarmSynchronizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestFarmSynchronizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestFarmSynchronizationRequest(val *RestFarmSynchronizationRequest) *NullableRestFarmSynchronizationRequest {
	return &NullableRestFarmSynchronizationRequest{value: val, isSet: true}
}

func (v NullableRestFarmSynchronizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestFarmSynchronizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


