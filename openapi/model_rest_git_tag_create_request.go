/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestGitTagCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestGitTagCreateRequest{}

// RestGitTagCreateRequest struct for RestGitTagCreateRequest
type RestGitTagCreateRequest struct {
	Force *bool `json:"force,omitempty"`
	Message *string `json:"message,omitempty"`
	Name *string `json:"name,omitempty"`
	StartPoint *string `json:"startPoint,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewRestGitTagCreateRequest instantiates a new RestGitTagCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestGitTagCreateRequest() *RestGitTagCreateRequest {
	this := RestGitTagCreateRequest{}
	return &this
}

// NewRestGitTagCreateRequestWithDefaults instantiates a new RestGitTagCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestGitTagCreateRequestWithDefaults() *RestGitTagCreateRequest {
	this := RestGitTagCreateRequest{}
	return &this
}

// GetForce returns the Force field value if set, zero value otherwise.
func (o *RestGitTagCreateRequest) GetForce() bool {
	if o == nil || IsNil(o.Force) {
		var ret bool
		return ret
	}
	return *o.Force
}

// GetForceOk returns a tuple with the Force field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestGitTagCreateRequest) GetForceOk() (*bool, bool) {
	if o == nil || IsNil(o.Force) {
		return nil, false
	}
	return o.Force, true
}

// HasForce returns a boolean if a field has been set.
func (o *RestGitTagCreateRequest) HasForce() bool {
	if o != nil && !IsNil(o.Force) {
		return true
	}

	return false
}

// SetForce gets a reference to the given bool and assigns it to the Force field.
func (o *RestGitTagCreateRequest) SetForce(v bool) {
	o.Force = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *RestGitTagCreateRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestGitTagCreateRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *RestGitTagCreateRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *RestGitTagCreateRequest) SetMessage(v string) {
	o.Message = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RestGitTagCreateRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestGitTagCreateRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RestGitTagCreateRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RestGitTagCreateRequest) SetName(v string) {
	o.Name = &v
}

// GetStartPoint returns the StartPoint field value if set, zero value otherwise.
func (o *RestGitTagCreateRequest) GetStartPoint() string {
	if o == nil || IsNil(o.StartPoint) {
		var ret string
		return ret
	}
	return *o.StartPoint
}

// GetStartPointOk returns a tuple with the StartPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestGitTagCreateRequest) GetStartPointOk() (*string, bool) {
	if o == nil || IsNil(o.StartPoint) {
		return nil, false
	}
	return o.StartPoint, true
}

// HasStartPoint returns a boolean if a field has been set.
func (o *RestGitTagCreateRequest) HasStartPoint() bool {
	if o != nil && !IsNil(o.StartPoint) {
		return true
	}

	return false
}

// SetStartPoint gets a reference to the given string and assigns it to the StartPoint field.
func (o *RestGitTagCreateRequest) SetStartPoint(v string) {
	o.StartPoint = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RestGitTagCreateRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestGitTagCreateRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RestGitTagCreateRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RestGitTagCreateRequest) SetType(v string) {
	o.Type = &v
}

func (o RestGitTagCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestGitTagCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Force) {
		toSerialize["force"] = o.Force
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartPoint) {
		toSerialize["startPoint"] = o.StartPoint
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableRestGitTagCreateRequest struct {
	value *RestGitTagCreateRequest
	isSet bool
}

func (v NullableRestGitTagCreateRequest) Get() *RestGitTagCreateRequest {
	return v.value
}

func (v *NullableRestGitTagCreateRequest) Set(val *RestGitTagCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestGitTagCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestGitTagCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestGitTagCreateRequest(val *RestGitTagCreateRequest) *NullableRestGitTagCreateRequest {
	return &NullableRestGitTagCreateRequest{value: val, isSet: true}
}

func (v NullableRestGitTagCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestGitTagCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


