/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestHookScriptConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestHookScriptConfig{}

// RestHookScriptConfig struct for RestHookScriptConfig
type RestHookScriptConfig struct {
	Scope *RestReviewerGroupScope `json:"scope,omitempty"`
	Script *RestHookScriptConfigScript `json:"script,omitempty"`
	TriggerIds []string `json:"triggerIds,omitempty"`
}

// NewRestHookScriptConfig instantiates a new RestHookScriptConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestHookScriptConfig() *RestHookScriptConfig {
	this := RestHookScriptConfig{}
	return &this
}

// NewRestHookScriptConfigWithDefaults instantiates a new RestHookScriptConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestHookScriptConfigWithDefaults() *RestHookScriptConfig {
	this := RestHookScriptConfig{}
	return &this
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *RestHookScriptConfig) GetScope() RestReviewerGroupScope {
	if o == nil || IsNil(o.Scope) {
		var ret RestReviewerGroupScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestHookScriptConfig) GetScopeOk() (*RestReviewerGroupScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *RestHookScriptConfig) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given RestReviewerGroupScope and assigns it to the Scope field.
func (o *RestHookScriptConfig) SetScope(v RestReviewerGroupScope) {
	o.Scope = &v
}

// GetScript returns the Script field value if set, zero value otherwise.
func (o *RestHookScriptConfig) GetScript() RestHookScriptConfigScript {
	if o == nil || IsNil(o.Script) {
		var ret RestHookScriptConfigScript
		return ret
	}
	return *o.Script
}

// GetScriptOk returns a tuple with the Script field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestHookScriptConfig) GetScriptOk() (*RestHookScriptConfigScript, bool) {
	if o == nil || IsNil(o.Script) {
		return nil, false
	}
	return o.Script, true
}

// HasScript returns a boolean if a field has been set.
func (o *RestHookScriptConfig) HasScript() bool {
	if o != nil && !IsNil(o.Script) {
		return true
	}

	return false
}

// SetScript gets a reference to the given RestHookScriptConfigScript and assigns it to the Script field.
func (o *RestHookScriptConfig) SetScript(v RestHookScriptConfigScript) {
	o.Script = &v
}

// GetTriggerIds returns the TriggerIds field value if set, zero value otherwise.
func (o *RestHookScriptConfig) GetTriggerIds() []string {
	if o == nil || IsNil(o.TriggerIds) {
		var ret []string
		return ret
	}
	return o.TriggerIds
}

// GetTriggerIdsOk returns a tuple with the TriggerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestHookScriptConfig) GetTriggerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TriggerIds) {
		return nil, false
	}
	return o.TriggerIds, true
}

// HasTriggerIds returns a boolean if a field has been set.
func (o *RestHookScriptConfig) HasTriggerIds() bool {
	if o != nil && !IsNil(o.TriggerIds) {
		return true
	}

	return false
}

// SetTriggerIds gets a reference to the given []string and assigns it to the TriggerIds field.
func (o *RestHookScriptConfig) SetTriggerIds(v []string) {
	o.TriggerIds = v
}

func (o RestHookScriptConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestHookScriptConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.Script) {
		toSerialize["script"] = o.Script
	}
	if !IsNil(o.TriggerIds) {
		toSerialize["triggerIds"] = o.TriggerIds
	}
	return toSerialize, nil
}

type NullableRestHookScriptConfig struct {
	value *RestHookScriptConfig
	isSet bool
}

func (v NullableRestHookScriptConfig) Get() *RestHookScriptConfig {
	return v.value
}

func (v *NullableRestHookScriptConfig) Set(val *RestHookScriptConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRestHookScriptConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRestHookScriptConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestHookScriptConfig(val *RestHookScriptConfig) *NullableRestHookScriptConfig {
	return &NullableRestHookScriptConfig{value: val, isSet: true}
}

func (v NullableRestHookScriptConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestHookScriptConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


