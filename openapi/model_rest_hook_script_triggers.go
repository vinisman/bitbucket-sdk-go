/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestHookScriptTriggers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestHookScriptTriggers{}

// RestHookScriptTriggers struct for RestHookScriptTriggers
type RestHookScriptTriggers struct {
	TriggerIds []string `json:"triggerIds,omitempty"`
}

// NewRestHookScriptTriggers instantiates a new RestHookScriptTriggers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestHookScriptTriggers() *RestHookScriptTriggers {
	this := RestHookScriptTriggers{}
	return &this
}

// NewRestHookScriptTriggersWithDefaults instantiates a new RestHookScriptTriggers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestHookScriptTriggersWithDefaults() *RestHookScriptTriggers {
	this := RestHookScriptTriggers{}
	return &this
}

// GetTriggerIds returns the TriggerIds field value if set, zero value otherwise.
func (o *RestHookScriptTriggers) GetTriggerIds() []string {
	if o == nil || IsNil(o.TriggerIds) {
		var ret []string
		return ret
	}
	return o.TriggerIds
}

// GetTriggerIdsOk returns a tuple with the TriggerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestHookScriptTriggers) GetTriggerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TriggerIds) {
		return nil, false
	}
	return o.TriggerIds, true
}

// HasTriggerIds returns a boolean if a field has been set.
func (o *RestHookScriptTriggers) HasTriggerIds() bool {
	if o != nil && !IsNil(o.TriggerIds) {
		return true
	}

	return false
}

// SetTriggerIds gets a reference to the given []string and assigns it to the TriggerIds field.
func (o *RestHookScriptTriggers) SetTriggerIds(v []string) {
	o.TriggerIds = v
}

func (o RestHookScriptTriggers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestHookScriptTriggers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TriggerIds) {
		toSerialize["triggerIds"] = o.TriggerIds
	}
	return toSerialize, nil
}

type NullableRestHookScriptTriggers struct {
	value *RestHookScriptTriggers
	isSet bool
}

func (v NullableRestHookScriptTriggers) Get() *RestHookScriptTriggers {
	return v.value
}

func (v *NullableRestHookScriptTriggers) Set(val *RestHookScriptTriggers) {
	v.value = val
	v.isSet = true
}

func (v NullableRestHookScriptTriggers) IsSet() bool {
	return v.isSet
}

func (v *NullableRestHookScriptTriggers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestHookScriptTriggers(val *RestHookScriptTriggers) *NullableRestHookScriptTriggers {
	return &NullableRestHookScriptTriggers{value: val, isSet: true}
}

func (v NullableRestHookScriptTriggers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestHookScriptTriggers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


