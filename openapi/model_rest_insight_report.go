/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestInsightReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestInsightReport{}

// RestInsightReport struct for RestInsightReport
type RestInsightReport struct {
	CreatedDate *float32 `json:"createdDate,omitempty"`
	Data []RestInsightReportData `json:"data,omitempty"`
	Details *string `json:"details,omitempty"`
	Key *string `json:"key,omitempty"`
	Link *string `json:"link,omitempty"`
	LogoUrl *string `json:"logoUrl,omitempty"`
	Reporter *string `json:"reporter,omitempty"`
	Result *string `json:"result,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewRestInsightReport instantiates a new RestInsightReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestInsightReport() *RestInsightReport {
	this := RestInsightReport{}
	return &this
}

// NewRestInsightReportWithDefaults instantiates a new RestInsightReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestInsightReportWithDefaults() *RestInsightReport {
	this := RestInsightReport{}
	return &this
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *RestInsightReport) GetCreatedDate() float32 {
	if o == nil || IsNil(o.CreatedDate) {
		var ret float32
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetCreatedDateOk() (*float32, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *RestInsightReport) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given float32 and assigns it to the CreatedDate field.
func (o *RestInsightReport) SetCreatedDate(v float32) {
	o.CreatedDate = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *RestInsightReport) GetData() []RestInsightReportData {
	if o == nil || IsNil(o.Data) {
		var ret []RestInsightReportData
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetDataOk() ([]RestInsightReportData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *RestInsightReport) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []RestInsightReportData and assigns it to the Data field.
func (o *RestInsightReport) SetData(v []RestInsightReportData) {
	o.Data = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *RestInsightReport) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *RestInsightReport) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *RestInsightReport) SetDetails(v string) {
	o.Details = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *RestInsightReport) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *RestInsightReport) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *RestInsightReport) SetKey(v string) {
	o.Key = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *RestInsightReport) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *RestInsightReport) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *RestInsightReport) SetLink(v string) {
	o.Link = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *RestInsightReport) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUrl) {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *RestInsightReport) HasLogoUrl() bool {
	if o != nil && !IsNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *RestInsightReport) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetReporter returns the Reporter field value if set, zero value otherwise.
func (o *RestInsightReport) GetReporter() string {
	if o == nil || IsNil(o.Reporter) {
		var ret string
		return ret
	}
	return *o.Reporter
}

// GetReporterOk returns a tuple with the Reporter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetReporterOk() (*string, bool) {
	if o == nil || IsNil(o.Reporter) {
		return nil, false
	}
	return o.Reporter, true
}

// HasReporter returns a boolean if a field has been set.
func (o *RestInsightReport) HasReporter() bool {
	if o != nil && !IsNil(o.Reporter) {
		return true
	}

	return false
}

// SetReporter gets a reference to the given string and assigns it to the Reporter field.
func (o *RestInsightReport) SetReporter(v string) {
	o.Reporter = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *RestInsightReport) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *RestInsightReport) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *RestInsightReport) SetResult(v string) {
	o.Result = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *RestInsightReport) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestInsightReport) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *RestInsightReport) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *RestInsightReport) SetTitle(v string) {
	o.Title = &v
}

func (o RestInsightReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestInsightReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.LogoUrl) {
		toSerialize["logoUrl"] = o.LogoUrl
	}
	if !IsNil(o.Reporter) {
		toSerialize["reporter"] = o.Reporter
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableRestInsightReport struct {
	value *RestInsightReport
	isSet bool
}

func (v NullableRestInsightReport) Get() *RestInsightReport {
	return v.value
}

func (v *NullableRestInsightReport) Set(val *RestInsightReport) {
	v.value = val
	v.isSet = true
}

func (v NullableRestInsightReport) IsSet() bool {
	return v.isSet
}

func (v *NullableRestInsightReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestInsightReport(val *RestInsightReport) *NullableRestInsightReport {
	return &NullableRestInsightReport{value: val, isSet: true}
}

func (v NullableRestInsightReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestInsightReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


