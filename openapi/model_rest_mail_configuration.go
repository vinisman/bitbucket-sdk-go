/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestMailConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestMailConfiguration{}

// RestMailConfiguration struct for RestMailConfiguration
type RestMailConfiguration struct {
	Hostname *string `json:"hostname,omitempty"`
	Password *string `json:"password,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Protocol *string `json:"protocol,omitempty"`
	RequireStartTls *bool `json:"requireStartTls,omitempty"`
	SenderAddress *string `json:"senderAddress,omitempty"`
	UseStartTls *bool `json:"useStartTls,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewRestMailConfiguration instantiates a new RestMailConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestMailConfiguration() *RestMailConfiguration {
	this := RestMailConfiguration{}
	return &this
}

// NewRestMailConfigurationWithDefaults instantiates a new RestMailConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestMailConfigurationWithDefaults() *RestMailConfiguration {
	this := RestMailConfiguration{}
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *RestMailConfiguration) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMailConfiguration) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *RestMailConfiguration) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *RestMailConfiguration) SetHostname(v string) {
	o.Hostname = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RestMailConfiguration) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMailConfiguration) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RestMailConfiguration) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RestMailConfiguration) SetPassword(v string) {
	o.Password = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *RestMailConfiguration) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMailConfiguration) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *RestMailConfiguration) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *RestMailConfiguration) SetPort(v int32) {
	o.Port = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *RestMailConfiguration) GetProtocol() string {
	if o == nil || IsNil(o.Protocol) {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMailConfiguration) GetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.Protocol) {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *RestMailConfiguration) HasProtocol() bool {
	if o != nil && !IsNil(o.Protocol) {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *RestMailConfiguration) SetProtocol(v string) {
	o.Protocol = &v
}

// GetRequireStartTls returns the RequireStartTls field value if set, zero value otherwise.
func (o *RestMailConfiguration) GetRequireStartTls() bool {
	if o == nil || IsNil(o.RequireStartTls) {
		var ret bool
		return ret
	}
	return *o.RequireStartTls
}

// GetRequireStartTlsOk returns a tuple with the RequireStartTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMailConfiguration) GetRequireStartTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireStartTls) {
		return nil, false
	}
	return o.RequireStartTls, true
}

// HasRequireStartTls returns a boolean if a field has been set.
func (o *RestMailConfiguration) HasRequireStartTls() bool {
	if o != nil && !IsNil(o.RequireStartTls) {
		return true
	}

	return false
}

// SetRequireStartTls gets a reference to the given bool and assigns it to the RequireStartTls field.
func (o *RestMailConfiguration) SetRequireStartTls(v bool) {
	o.RequireStartTls = &v
}

// GetSenderAddress returns the SenderAddress field value if set, zero value otherwise.
func (o *RestMailConfiguration) GetSenderAddress() string {
	if o == nil || IsNil(o.SenderAddress) {
		var ret string
		return ret
	}
	return *o.SenderAddress
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMailConfiguration) GetSenderAddressOk() (*string, bool) {
	if o == nil || IsNil(o.SenderAddress) {
		return nil, false
	}
	return o.SenderAddress, true
}

// HasSenderAddress returns a boolean if a field has been set.
func (o *RestMailConfiguration) HasSenderAddress() bool {
	if o != nil && !IsNil(o.SenderAddress) {
		return true
	}

	return false
}

// SetSenderAddress gets a reference to the given string and assigns it to the SenderAddress field.
func (o *RestMailConfiguration) SetSenderAddress(v string) {
	o.SenderAddress = &v
}

// GetUseStartTls returns the UseStartTls field value if set, zero value otherwise.
func (o *RestMailConfiguration) GetUseStartTls() bool {
	if o == nil || IsNil(o.UseStartTls) {
		var ret bool
		return ret
	}
	return *o.UseStartTls
}

// GetUseStartTlsOk returns a tuple with the UseStartTls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMailConfiguration) GetUseStartTlsOk() (*bool, bool) {
	if o == nil || IsNil(o.UseStartTls) {
		return nil, false
	}
	return o.UseStartTls, true
}

// HasUseStartTls returns a boolean if a field has been set.
func (o *RestMailConfiguration) HasUseStartTls() bool {
	if o != nil && !IsNil(o.UseStartTls) {
		return true
	}

	return false
}

// SetUseStartTls gets a reference to the given bool and assigns it to the UseStartTls field.
func (o *RestMailConfiguration) SetUseStartTls(v bool) {
	o.UseStartTls = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RestMailConfiguration) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMailConfiguration) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RestMailConfiguration) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RestMailConfiguration) SetUsername(v string) {
	o.Username = &v
}

func (o RestMailConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestMailConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Protocol) {
		toSerialize["protocol"] = o.Protocol
	}
	if !IsNil(o.RequireStartTls) {
		toSerialize["requireStartTls"] = o.RequireStartTls
	}
	if !IsNil(o.SenderAddress) {
		toSerialize["senderAddress"] = o.SenderAddress
	}
	if !IsNil(o.UseStartTls) {
		toSerialize["useStartTls"] = o.UseStartTls
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableRestMailConfiguration struct {
	value *RestMailConfiguration
	isSet bool
}

func (v NullableRestMailConfiguration) Get() *RestMailConfiguration {
	return v.value
}

func (v *NullableRestMailConfiguration) Set(val *RestMailConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableRestMailConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableRestMailConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestMailConfiguration(val *RestMailConfiguration) *NullableRestMailConfiguration {
	return &NullableRestMailConfiguration{value: val, isSet: true}
}

func (v NullableRestMailConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestMailConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


