/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestMirroringRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestMirroringRequest{}

// RestMirroringRequest struct for RestMirroringRequest
type RestMirroringRequest struct {
	Id *int32 `json:"id,omitempty"`
	MirrorBaseUrl *string `json:"mirrorBaseUrl,omitempty"`
	MirrorId *string `json:"mirrorId,omitempty"`
	MirrorName *string `json:"mirrorName,omitempty"`
	MirrorType *string `json:"mirrorType,omitempty"`
	ProductVersion *string `json:"productVersion,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewRestMirroringRequest instantiates a new RestMirroringRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestMirroringRequest() *RestMirroringRequest {
	this := RestMirroringRequest{}
	return &this
}

// NewRestMirroringRequestWithDefaults instantiates a new RestMirroringRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestMirroringRequestWithDefaults() *RestMirroringRequest {
	this := RestMirroringRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestMirroringRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMirroringRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestMirroringRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RestMirroringRequest) SetId(v int32) {
	o.Id = &v
}

// GetMirrorBaseUrl returns the MirrorBaseUrl field value if set, zero value otherwise.
func (o *RestMirroringRequest) GetMirrorBaseUrl() string {
	if o == nil || IsNil(o.MirrorBaseUrl) {
		var ret string
		return ret
	}
	return *o.MirrorBaseUrl
}

// GetMirrorBaseUrlOk returns a tuple with the MirrorBaseUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMirroringRequest) GetMirrorBaseUrlOk() (*string, bool) {
	if o == nil || IsNil(o.MirrorBaseUrl) {
		return nil, false
	}
	return o.MirrorBaseUrl, true
}

// HasMirrorBaseUrl returns a boolean if a field has been set.
func (o *RestMirroringRequest) HasMirrorBaseUrl() bool {
	if o != nil && !IsNil(o.MirrorBaseUrl) {
		return true
	}

	return false
}

// SetMirrorBaseUrl gets a reference to the given string and assigns it to the MirrorBaseUrl field.
func (o *RestMirroringRequest) SetMirrorBaseUrl(v string) {
	o.MirrorBaseUrl = &v
}

// GetMirrorId returns the MirrorId field value if set, zero value otherwise.
func (o *RestMirroringRequest) GetMirrorId() string {
	if o == nil || IsNil(o.MirrorId) {
		var ret string
		return ret
	}
	return *o.MirrorId
}

// GetMirrorIdOk returns a tuple with the MirrorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMirroringRequest) GetMirrorIdOk() (*string, bool) {
	if o == nil || IsNil(o.MirrorId) {
		return nil, false
	}
	return o.MirrorId, true
}

// HasMirrorId returns a boolean if a field has been set.
func (o *RestMirroringRequest) HasMirrorId() bool {
	if o != nil && !IsNil(o.MirrorId) {
		return true
	}

	return false
}

// SetMirrorId gets a reference to the given string and assigns it to the MirrorId field.
func (o *RestMirroringRequest) SetMirrorId(v string) {
	o.MirrorId = &v
}

// GetMirrorName returns the MirrorName field value if set, zero value otherwise.
func (o *RestMirroringRequest) GetMirrorName() string {
	if o == nil || IsNil(o.MirrorName) {
		var ret string
		return ret
	}
	return *o.MirrorName
}

// GetMirrorNameOk returns a tuple with the MirrorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMirroringRequest) GetMirrorNameOk() (*string, bool) {
	if o == nil || IsNil(o.MirrorName) {
		return nil, false
	}
	return o.MirrorName, true
}

// HasMirrorName returns a boolean if a field has been set.
func (o *RestMirroringRequest) HasMirrorName() bool {
	if o != nil && !IsNil(o.MirrorName) {
		return true
	}

	return false
}

// SetMirrorName gets a reference to the given string and assigns it to the MirrorName field.
func (o *RestMirroringRequest) SetMirrorName(v string) {
	o.MirrorName = &v
}

// GetMirrorType returns the MirrorType field value if set, zero value otherwise.
func (o *RestMirroringRequest) GetMirrorType() string {
	if o == nil || IsNil(o.MirrorType) {
		var ret string
		return ret
	}
	return *o.MirrorType
}

// GetMirrorTypeOk returns a tuple with the MirrorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMirroringRequest) GetMirrorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MirrorType) {
		return nil, false
	}
	return o.MirrorType, true
}

// HasMirrorType returns a boolean if a field has been set.
func (o *RestMirroringRequest) HasMirrorType() bool {
	if o != nil && !IsNil(o.MirrorType) {
		return true
	}

	return false
}

// SetMirrorType gets a reference to the given string and assigns it to the MirrorType field.
func (o *RestMirroringRequest) SetMirrorType(v string) {
	o.MirrorType = &v
}

// GetProductVersion returns the ProductVersion field value if set, zero value otherwise.
func (o *RestMirroringRequest) GetProductVersion() string {
	if o == nil || IsNil(o.ProductVersion) {
		var ret string
		return ret
	}
	return *o.ProductVersion
}

// GetProductVersionOk returns a tuple with the ProductVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMirroringRequest) GetProductVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ProductVersion) {
		return nil, false
	}
	return o.ProductVersion, true
}

// HasProductVersion returns a boolean if a field has been set.
func (o *RestMirroringRequest) HasProductVersion() bool {
	if o != nil && !IsNil(o.ProductVersion) {
		return true
	}

	return false
}

// SetProductVersion gets a reference to the given string and assigns it to the ProductVersion field.
func (o *RestMirroringRequest) SetProductVersion(v string) {
	o.ProductVersion = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *RestMirroringRequest) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMirroringRequest) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *RestMirroringRequest) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *RestMirroringRequest) SetState(v string) {
	o.State = &v
}

func (o RestMirroringRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestMirroringRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MirrorBaseUrl) {
		toSerialize["mirrorBaseUrl"] = o.MirrorBaseUrl
	}
	if !IsNil(o.MirrorId) {
		toSerialize["mirrorId"] = o.MirrorId
	}
	if !IsNil(o.MirrorName) {
		toSerialize["mirrorName"] = o.MirrorName
	}
	if !IsNil(o.MirrorType) {
		toSerialize["mirrorType"] = o.MirrorType
	}
	if !IsNil(o.ProductVersion) {
		toSerialize["productVersion"] = o.ProductVersion
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableRestMirroringRequest struct {
	value *RestMirroringRequest
	isSet bool
}

func (v NullableRestMirroringRequest) Get() *RestMirroringRequest {
	return v.value
}

func (v *NullableRestMirroringRequest) Set(val *RestMirroringRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestMirroringRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestMirroringRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestMirroringRequest(val *RestMirroringRequest) *NullableRestMirroringRequest {
	return &NullableRestMirroringRequest{value: val, isSet: true}
}

func (v NullableRestMirroringRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestMirroringRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


