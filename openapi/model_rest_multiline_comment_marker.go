/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestMultilineCommentMarker type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestMultilineCommentMarker{}

// RestMultilineCommentMarker struct for RestMultilineCommentMarker
type RestMultilineCommentMarker struct {
	// The line number where the multiline comment will begin
	StartLine *int32 `json:"startLine,omitempty"`
	// The segment type of the start line of the multiline comment
	StartLineType *string `json:"startLineType,omitempty"`
}

// NewRestMultilineCommentMarker instantiates a new RestMultilineCommentMarker object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestMultilineCommentMarker() *RestMultilineCommentMarker {
	this := RestMultilineCommentMarker{}
	return &this
}

// NewRestMultilineCommentMarkerWithDefaults instantiates a new RestMultilineCommentMarker object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestMultilineCommentMarkerWithDefaults() *RestMultilineCommentMarker {
	this := RestMultilineCommentMarker{}
	return &this
}

// GetStartLine returns the StartLine field value if set, zero value otherwise.
func (o *RestMultilineCommentMarker) GetStartLine() int32 {
	if o == nil || IsNil(o.StartLine) {
		var ret int32
		return ret
	}
	return *o.StartLine
}

// GetStartLineOk returns a tuple with the StartLine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMultilineCommentMarker) GetStartLineOk() (*int32, bool) {
	if o == nil || IsNil(o.StartLine) {
		return nil, false
	}
	return o.StartLine, true
}

// HasStartLine returns a boolean if a field has been set.
func (o *RestMultilineCommentMarker) HasStartLine() bool {
	if o != nil && !IsNil(o.StartLine) {
		return true
	}

	return false
}

// SetStartLine gets a reference to the given int32 and assigns it to the StartLine field.
func (o *RestMultilineCommentMarker) SetStartLine(v int32) {
	o.StartLine = &v
}

// GetStartLineType returns the StartLineType field value if set, zero value otherwise.
func (o *RestMultilineCommentMarker) GetStartLineType() string {
	if o == nil || IsNil(o.StartLineType) {
		var ret string
		return ret
	}
	return *o.StartLineType
}

// GetStartLineTypeOk returns a tuple with the StartLineType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestMultilineCommentMarker) GetStartLineTypeOk() (*string, bool) {
	if o == nil || IsNil(o.StartLineType) {
		return nil, false
	}
	return o.StartLineType, true
}

// HasStartLineType returns a boolean if a field has been set.
func (o *RestMultilineCommentMarker) HasStartLineType() bool {
	if o != nil && !IsNil(o.StartLineType) {
		return true
	}

	return false
}

// SetStartLineType gets a reference to the given string and assigns it to the StartLineType field.
func (o *RestMultilineCommentMarker) SetStartLineType(v string) {
	o.StartLineType = &v
}

func (o RestMultilineCommentMarker) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestMultilineCommentMarker) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StartLine) {
		toSerialize["startLine"] = o.StartLine
	}
	if !IsNil(o.StartLineType) {
		toSerialize["startLineType"] = o.StartLineType
	}
	return toSerialize, nil
}

type NullableRestMultilineCommentMarker struct {
	value *RestMultilineCommentMarker
	isSet bool
}

func (v NullableRestMultilineCommentMarker) Get() *RestMultilineCommentMarker {
	return v.value
}

func (v *NullableRestMultilineCommentMarker) Set(val *RestMultilineCommentMarker) {
	v.value = val
	v.isSet = true
}

func (v NullableRestMultilineCommentMarker) IsSet() bool {
	return v.isSet
}

func (v *NullableRestMultilineCommentMarker) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestMultilineCommentMarker(val *RestMultilineCommentMarker) *NullableRestMultilineCommentMarker {
	return &NullableRestMultilineCommentMarker{value: val, isSet: true}
}

func (v NullableRestMultilineCommentMarker) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestMultilineCommentMarker) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


