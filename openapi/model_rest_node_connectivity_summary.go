/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestNodeConnectivitySummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestNodeConnectivitySummary{}

// RestNodeConnectivitySummary struct for RestNodeConnectivitySummary
type RestNodeConnectivitySummary struct {
	Node *RestNodeConnectivityReportNode `json:"node,omitempty"`
	Summary *RestNodeConnectivitySummarySummary `json:"summary,omitempty"`
}

// NewRestNodeConnectivitySummary instantiates a new RestNodeConnectivitySummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestNodeConnectivitySummary() *RestNodeConnectivitySummary {
	this := RestNodeConnectivitySummary{}
	return &this
}

// NewRestNodeConnectivitySummaryWithDefaults instantiates a new RestNodeConnectivitySummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestNodeConnectivitySummaryWithDefaults() *RestNodeConnectivitySummary {
	this := RestNodeConnectivitySummary{}
	return &this
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *RestNodeConnectivitySummary) GetNode() RestNodeConnectivityReportNode {
	if o == nil || IsNil(o.Node) {
		var ret RestNodeConnectivityReportNode
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestNodeConnectivitySummary) GetNodeOk() (*RestNodeConnectivityReportNode, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *RestNodeConnectivitySummary) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given RestNodeConnectivityReportNode and assigns it to the Node field.
func (o *RestNodeConnectivitySummary) SetNode(v RestNodeConnectivityReportNode) {
	o.Node = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *RestNodeConnectivitySummary) GetSummary() RestNodeConnectivitySummarySummary {
	if o == nil || IsNil(o.Summary) {
		var ret RestNodeConnectivitySummarySummary
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestNodeConnectivitySummary) GetSummaryOk() (*RestNodeConnectivitySummarySummary, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *RestNodeConnectivitySummary) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given RestNodeConnectivitySummarySummary and assigns it to the Summary field.
func (o *RestNodeConnectivitySummary) SetSummary(v RestNodeConnectivitySummarySummary) {
	o.Summary = &v
}

func (o RestNodeConnectivitySummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestNodeConnectivitySummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	return toSerialize, nil
}

type NullableRestNodeConnectivitySummary struct {
	value *RestNodeConnectivitySummary
	isSet bool
}

func (v NullableRestNodeConnectivitySummary) Get() *RestNodeConnectivitySummary {
	return v.value
}

func (v *NullableRestNodeConnectivitySummary) Set(val *RestNodeConnectivitySummary) {
	v.value = val
	v.isSet = true
}

func (v NullableRestNodeConnectivitySummary) IsSet() bool {
	return v.isSet
}

func (v *NullableRestNodeConnectivitySummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestNodeConnectivitySummary(val *RestNodeConnectivitySummary) *NullableRestNodeConnectivitySummary {
	return &NullableRestNodeConnectivitySummary{value: val, isSet: true}
}

func (v NullableRestNodeConnectivitySummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestNodeConnectivitySummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


