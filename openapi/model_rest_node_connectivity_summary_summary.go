/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestNodeConnectivitySummarySummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestNodeConnectivitySummarySummary{}

// RestNodeConnectivitySummarySummary struct for RestNodeConnectivitySummarySummary
type RestNodeConnectivitySummarySummary struct {
	ErrorMessage *string `json:"errorMessage,omitempty"`
	Reachable *bool `json:"reachable,omitempty"`
	RoundTripTime *int64 `json:"roundTripTime,omitempty"`
}

// NewRestNodeConnectivitySummarySummary instantiates a new RestNodeConnectivitySummarySummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestNodeConnectivitySummarySummary() *RestNodeConnectivitySummarySummary {
	this := RestNodeConnectivitySummarySummary{}
	return &this
}

// NewRestNodeConnectivitySummarySummaryWithDefaults instantiates a new RestNodeConnectivitySummarySummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestNodeConnectivitySummarySummaryWithDefaults() *RestNodeConnectivitySummarySummary {
	this := RestNodeConnectivitySummarySummary{}
	return &this
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *RestNodeConnectivitySummarySummary) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestNodeConnectivitySummarySummary) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *RestNodeConnectivitySummarySummary) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *RestNodeConnectivitySummarySummary) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetReachable returns the Reachable field value if set, zero value otherwise.
func (o *RestNodeConnectivitySummarySummary) GetReachable() bool {
	if o == nil || IsNil(o.Reachable) {
		var ret bool
		return ret
	}
	return *o.Reachable
}

// GetReachableOk returns a tuple with the Reachable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestNodeConnectivitySummarySummary) GetReachableOk() (*bool, bool) {
	if o == nil || IsNil(o.Reachable) {
		return nil, false
	}
	return o.Reachable, true
}

// HasReachable returns a boolean if a field has been set.
func (o *RestNodeConnectivitySummarySummary) HasReachable() bool {
	if o != nil && !IsNil(o.Reachable) {
		return true
	}

	return false
}

// SetReachable gets a reference to the given bool and assigns it to the Reachable field.
func (o *RestNodeConnectivitySummarySummary) SetReachable(v bool) {
	o.Reachable = &v
}

// GetRoundTripTime returns the RoundTripTime field value if set, zero value otherwise.
func (o *RestNodeConnectivitySummarySummary) GetRoundTripTime() int64 {
	if o == nil || IsNil(o.RoundTripTime) {
		var ret int64
		return ret
	}
	return *o.RoundTripTime
}

// GetRoundTripTimeOk returns a tuple with the RoundTripTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestNodeConnectivitySummarySummary) GetRoundTripTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.RoundTripTime) {
		return nil, false
	}
	return o.RoundTripTime, true
}

// HasRoundTripTime returns a boolean if a field has been set.
func (o *RestNodeConnectivitySummarySummary) HasRoundTripTime() bool {
	if o != nil && !IsNil(o.RoundTripTime) {
		return true
	}

	return false
}

// SetRoundTripTime gets a reference to the given int64 and assigns it to the RoundTripTime field.
func (o *RestNodeConnectivitySummarySummary) SetRoundTripTime(v int64) {
	o.RoundTripTime = &v
}

func (o RestNodeConnectivitySummarySummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestNodeConnectivitySummarySummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	if !IsNil(o.Reachable) {
		toSerialize["reachable"] = o.Reachable
	}
	if !IsNil(o.RoundTripTime) {
		toSerialize["roundTripTime"] = o.RoundTripTime
	}
	return toSerialize, nil
}

type NullableRestNodeConnectivitySummarySummary struct {
	value *RestNodeConnectivitySummarySummary
	isSet bool
}

func (v NullableRestNodeConnectivitySummarySummary) Get() *RestNodeConnectivitySummarySummary {
	return v.value
}

func (v *NullableRestNodeConnectivitySummarySummary) Set(val *RestNodeConnectivitySummarySummary) {
	v.value = val
	v.isSet = true
}

func (v NullableRestNodeConnectivitySummarySummary) IsSet() bool {
	return v.isSet
}

func (v *NullableRestNodeConnectivitySummarySummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestNodeConnectivitySummarySummary(val *RestNodeConnectivitySummarySummary) *NullableRestNodeConnectivitySummarySummary {
	return &NullableRestNodeConnectivitySummarySummary{value: val, isSet: true}
}

func (v NullableRestNodeConnectivitySummarySummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestNodeConnectivitySummarySummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


