/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestProjectSettingsRestriction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestProjectSettingsRestriction{}

// RestProjectSettingsRestriction struct for RestProjectSettingsRestriction
type RestProjectSettingsRestriction struct {
	ComponentKey *string `json:"componentKey,omitempty"`
	FeatureKey *string `json:"featureKey,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	ProcessedState *string `json:"processedState,omitempty"`
	Project *RestChangesetRepositoryOriginProject `json:"project,omitempty"`
}

// NewRestProjectSettingsRestriction instantiates a new RestProjectSettingsRestriction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestProjectSettingsRestriction() *RestProjectSettingsRestriction {
	this := RestProjectSettingsRestriction{}
	return &this
}

// NewRestProjectSettingsRestrictionWithDefaults instantiates a new RestProjectSettingsRestriction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestProjectSettingsRestrictionWithDefaults() *RestProjectSettingsRestriction {
	this := RestProjectSettingsRestriction{}
	return &this
}

// GetComponentKey returns the ComponentKey field value if set, zero value otherwise.
func (o *RestProjectSettingsRestriction) GetComponentKey() string {
	if o == nil || IsNil(o.ComponentKey) {
		var ret string
		return ret
	}
	return *o.ComponentKey
}

// GetComponentKeyOk returns a tuple with the ComponentKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestProjectSettingsRestriction) GetComponentKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentKey) {
		return nil, false
	}
	return o.ComponentKey, true
}

// HasComponentKey returns a boolean if a field has been set.
func (o *RestProjectSettingsRestriction) HasComponentKey() bool {
	if o != nil && !IsNil(o.ComponentKey) {
		return true
	}

	return false
}

// SetComponentKey gets a reference to the given string and assigns it to the ComponentKey field.
func (o *RestProjectSettingsRestriction) SetComponentKey(v string) {
	o.ComponentKey = &v
}

// GetFeatureKey returns the FeatureKey field value if set, zero value otherwise.
func (o *RestProjectSettingsRestriction) GetFeatureKey() string {
	if o == nil || IsNil(o.FeatureKey) {
		var ret string
		return ret
	}
	return *o.FeatureKey
}

// GetFeatureKeyOk returns a tuple with the FeatureKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestProjectSettingsRestriction) GetFeatureKeyOk() (*string, bool) {
	if o == nil || IsNil(o.FeatureKey) {
		return nil, false
	}
	return o.FeatureKey, true
}

// HasFeatureKey returns a boolean if a field has been set.
func (o *RestProjectSettingsRestriction) HasFeatureKey() bool {
	if o != nil && !IsNil(o.FeatureKey) {
		return true
	}

	return false
}

// SetFeatureKey gets a reference to the given string and assigns it to the FeatureKey field.
func (o *RestProjectSettingsRestriction) SetFeatureKey(v string) {
	o.FeatureKey = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *RestProjectSettingsRestriction) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestProjectSettingsRestriction) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *RestProjectSettingsRestriction) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *RestProjectSettingsRestriction) SetNamespace(v string) {
	o.Namespace = &v
}

// GetProcessedState returns the ProcessedState field value if set, zero value otherwise.
func (o *RestProjectSettingsRestriction) GetProcessedState() string {
	if o == nil || IsNil(o.ProcessedState) {
		var ret string
		return ret
	}
	return *o.ProcessedState
}

// GetProcessedStateOk returns a tuple with the ProcessedState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestProjectSettingsRestriction) GetProcessedStateOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessedState) {
		return nil, false
	}
	return o.ProcessedState, true
}

// HasProcessedState returns a boolean if a field has been set.
func (o *RestProjectSettingsRestriction) HasProcessedState() bool {
	if o != nil && !IsNil(o.ProcessedState) {
		return true
	}

	return false
}

// SetProcessedState gets a reference to the given string and assigns it to the ProcessedState field.
func (o *RestProjectSettingsRestriction) SetProcessedState(v string) {
	o.ProcessedState = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *RestProjectSettingsRestriction) GetProject() RestChangesetRepositoryOriginProject {
	if o == nil || IsNil(o.Project) {
		var ret RestChangesetRepositoryOriginProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestProjectSettingsRestriction) GetProjectOk() (*RestChangesetRepositoryOriginProject, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *RestProjectSettingsRestriction) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given RestChangesetRepositoryOriginProject and assigns it to the Project field.
func (o *RestProjectSettingsRestriction) SetProject(v RestChangesetRepositoryOriginProject) {
	o.Project = &v
}

func (o RestProjectSettingsRestriction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestProjectSettingsRestriction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComponentKey) {
		toSerialize["componentKey"] = o.ComponentKey
	}
	if !IsNil(o.FeatureKey) {
		toSerialize["featureKey"] = o.FeatureKey
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.ProcessedState) {
		toSerialize["processedState"] = o.ProcessedState
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	return toSerialize, nil
}

type NullableRestProjectSettingsRestriction struct {
	value *RestProjectSettingsRestriction
	isSet bool
}

func (v NullableRestProjectSettingsRestriction) Get() *RestProjectSettingsRestriction {
	return v.value
}

func (v *NullableRestProjectSettingsRestriction) Set(val *RestProjectSettingsRestriction) {
	v.value = val
	v.isSet = true
}

func (v NullableRestProjectSettingsRestriction) IsSet() bool {
	return v.isSet
}

func (v *NullableRestProjectSettingsRestriction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestProjectSettingsRestriction(val *RestProjectSettingsRestriction) *NullableRestProjectSettingsRestriction {
	return &NullableRestProjectSettingsRestriction{value: val, isSet: true}
}

func (v NullableRestProjectSettingsRestriction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestProjectSettingsRestriction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


