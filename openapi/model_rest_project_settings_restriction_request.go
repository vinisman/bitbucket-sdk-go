/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestProjectSettingsRestrictionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestProjectSettingsRestrictionRequest{}

// RestProjectSettingsRestrictionRequest struct for RestProjectSettingsRestrictionRequest
type RestProjectSettingsRestrictionRequest struct {
	ComponentKey *string `json:"componentKey,omitempty"`
	FeatureKey string `json:"featureKey"`
	Namespace string `json:"namespace"`
}

type _RestProjectSettingsRestrictionRequest RestProjectSettingsRestrictionRequest

// NewRestProjectSettingsRestrictionRequest instantiates a new RestProjectSettingsRestrictionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestProjectSettingsRestrictionRequest(featureKey string, namespace string) *RestProjectSettingsRestrictionRequest {
	this := RestProjectSettingsRestrictionRequest{}
	this.FeatureKey = featureKey
	this.Namespace = namespace
	return &this
}

// NewRestProjectSettingsRestrictionRequestWithDefaults instantiates a new RestProjectSettingsRestrictionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestProjectSettingsRestrictionRequestWithDefaults() *RestProjectSettingsRestrictionRequest {
	this := RestProjectSettingsRestrictionRequest{}
	return &this
}

// GetComponentKey returns the ComponentKey field value if set, zero value otherwise.
func (o *RestProjectSettingsRestrictionRequest) GetComponentKey() string {
	if o == nil || IsNil(o.ComponentKey) {
		var ret string
		return ret
	}
	return *o.ComponentKey
}

// GetComponentKeyOk returns a tuple with the ComponentKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestProjectSettingsRestrictionRequest) GetComponentKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentKey) {
		return nil, false
	}
	return o.ComponentKey, true
}

// HasComponentKey returns a boolean if a field has been set.
func (o *RestProjectSettingsRestrictionRequest) HasComponentKey() bool {
	if o != nil && !IsNil(o.ComponentKey) {
		return true
	}

	return false
}

// SetComponentKey gets a reference to the given string and assigns it to the ComponentKey field.
func (o *RestProjectSettingsRestrictionRequest) SetComponentKey(v string) {
	o.ComponentKey = &v
}

// GetFeatureKey returns the FeatureKey field value
func (o *RestProjectSettingsRestrictionRequest) GetFeatureKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FeatureKey
}

// GetFeatureKeyOk returns a tuple with the FeatureKey field value
// and a boolean to check if the value has been set.
func (o *RestProjectSettingsRestrictionRequest) GetFeatureKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeatureKey, true
}

// SetFeatureKey sets field value
func (o *RestProjectSettingsRestrictionRequest) SetFeatureKey(v string) {
	o.FeatureKey = v
}

// GetNamespace returns the Namespace field value
func (o *RestProjectSettingsRestrictionRequest) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *RestProjectSettingsRestrictionRequest) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *RestProjectSettingsRestrictionRequest) SetNamespace(v string) {
	o.Namespace = v
}

func (o RestProjectSettingsRestrictionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestProjectSettingsRestrictionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComponentKey) {
		toSerialize["componentKey"] = o.ComponentKey
	}
	toSerialize["featureKey"] = o.FeatureKey
	toSerialize["namespace"] = o.Namespace
	return toSerialize, nil
}

func (o *RestProjectSettingsRestrictionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"featureKey",
		"namespace",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestProjectSettingsRestrictionRequest := _RestProjectSettingsRestrictionRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestProjectSettingsRestrictionRequest)

	if err != nil {
		return err
	}

	*o = RestProjectSettingsRestrictionRequest(varRestProjectSettingsRestrictionRequest)

	return err
}

type NullableRestProjectSettingsRestrictionRequest struct {
	value *RestProjectSettingsRestrictionRequest
	isSet bool
}

func (v NullableRestProjectSettingsRestrictionRequest) Get() *RestProjectSettingsRestrictionRequest {
	return v.value
}

func (v *NullableRestProjectSettingsRestrictionRequest) Set(val *RestProjectSettingsRestrictionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestProjectSettingsRestrictionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestProjectSettingsRestrictionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestProjectSettingsRestrictionRequest(val *RestProjectSettingsRestrictionRequest) *NullableRestProjectSettingsRestrictionRequest {
	return &NullableRestProjectSettingsRestrictionRequest{value: val, isSet: true}
}

func (v NullableRestProjectSettingsRestrictionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestProjectSettingsRestrictionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


