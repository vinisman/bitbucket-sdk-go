/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestPullRequestDeclineRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestPullRequestDeclineRequest{}

// RestPullRequestDeclineRequest struct for RestPullRequestDeclineRequest
type RestPullRequestDeclineRequest struct {
	Comment *string `json:"comment,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

// NewRestPullRequestDeclineRequest instantiates a new RestPullRequestDeclineRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestPullRequestDeclineRequest() *RestPullRequestDeclineRequest {
	this := RestPullRequestDeclineRequest{}
	return &this
}

// NewRestPullRequestDeclineRequestWithDefaults instantiates a new RestPullRequestDeclineRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestPullRequestDeclineRequestWithDefaults() *RestPullRequestDeclineRequest {
	this := RestPullRequestDeclineRequest{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *RestPullRequestDeclineRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestDeclineRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *RestPullRequestDeclineRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *RestPullRequestDeclineRequest) SetComment(v string) {
	o.Comment = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *RestPullRequestDeclineRequest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestDeclineRequest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *RestPullRequestDeclineRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *RestPullRequestDeclineRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o RestPullRequestDeclineRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestPullRequestDeclineRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableRestPullRequestDeclineRequest struct {
	value *RestPullRequestDeclineRequest
	isSet bool
}

func (v NullableRestPullRequestDeclineRequest) Get() *RestPullRequestDeclineRequest {
	return v.value
}

func (v *NullableRestPullRequestDeclineRequest) Set(val *RestPullRequestDeclineRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestPullRequestDeclineRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestPullRequestDeclineRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestPullRequestDeclineRequest(val *RestPullRequestDeclineRequest) *NullableRestPullRequestDeclineRequest {
	return &NullableRestPullRequestDeclineRequest{value: val, isSet: true}
}

func (v NullableRestPullRequestDeclineRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestPullRequestDeclineRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


