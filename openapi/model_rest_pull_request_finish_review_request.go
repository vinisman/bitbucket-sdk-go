/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestPullRequestFinishReviewRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestPullRequestFinishReviewRequest{}

// RestPullRequestFinishReviewRequest struct for RestPullRequestFinishReviewRequest
type RestPullRequestFinishReviewRequest struct {
	CommentText *string `json:"commentText,omitempty"`
	LastReviewedCommit *string `json:"lastReviewedCommit,omitempty"`
	ParticipantStatus *string `json:"participantStatus,omitempty"`
}

// NewRestPullRequestFinishReviewRequest instantiates a new RestPullRequestFinishReviewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestPullRequestFinishReviewRequest() *RestPullRequestFinishReviewRequest {
	this := RestPullRequestFinishReviewRequest{}
	return &this
}

// NewRestPullRequestFinishReviewRequestWithDefaults instantiates a new RestPullRequestFinishReviewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestPullRequestFinishReviewRequestWithDefaults() *RestPullRequestFinishReviewRequest {
	this := RestPullRequestFinishReviewRequest{}
	return &this
}

// GetCommentText returns the CommentText field value if set, zero value otherwise.
func (o *RestPullRequestFinishReviewRequest) GetCommentText() string {
	if o == nil || IsNil(o.CommentText) {
		var ret string
		return ret
	}
	return *o.CommentText
}

// GetCommentTextOk returns a tuple with the CommentText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestFinishReviewRequest) GetCommentTextOk() (*string, bool) {
	if o == nil || IsNil(o.CommentText) {
		return nil, false
	}
	return o.CommentText, true
}

// HasCommentText returns a boolean if a field has been set.
func (o *RestPullRequestFinishReviewRequest) HasCommentText() bool {
	if o != nil && !IsNil(o.CommentText) {
		return true
	}

	return false
}

// SetCommentText gets a reference to the given string and assigns it to the CommentText field.
func (o *RestPullRequestFinishReviewRequest) SetCommentText(v string) {
	o.CommentText = &v
}

// GetLastReviewedCommit returns the LastReviewedCommit field value if set, zero value otherwise.
func (o *RestPullRequestFinishReviewRequest) GetLastReviewedCommit() string {
	if o == nil || IsNil(o.LastReviewedCommit) {
		var ret string
		return ret
	}
	return *o.LastReviewedCommit
}

// GetLastReviewedCommitOk returns a tuple with the LastReviewedCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestFinishReviewRequest) GetLastReviewedCommitOk() (*string, bool) {
	if o == nil || IsNil(o.LastReviewedCommit) {
		return nil, false
	}
	return o.LastReviewedCommit, true
}

// HasLastReviewedCommit returns a boolean if a field has been set.
func (o *RestPullRequestFinishReviewRequest) HasLastReviewedCommit() bool {
	if o != nil && !IsNil(o.LastReviewedCommit) {
		return true
	}

	return false
}

// SetLastReviewedCommit gets a reference to the given string and assigns it to the LastReviewedCommit field.
func (o *RestPullRequestFinishReviewRequest) SetLastReviewedCommit(v string) {
	o.LastReviewedCommit = &v
}

// GetParticipantStatus returns the ParticipantStatus field value if set, zero value otherwise.
func (o *RestPullRequestFinishReviewRequest) GetParticipantStatus() string {
	if o == nil || IsNil(o.ParticipantStatus) {
		var ret string
		return ret
	}
	return *o.ParticipantStatus
}

// GetParticipantStatusOk returns a tuple with the ParticipantStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestFinishReviewRequest) GetParticipantStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ParticipantStatus) {
		return nil, false
	}
	return o.ParticipantStatus, true
}

// HasParticipantStatus returns a boolean if a field has been set.
func (o *RestPullRequestFinishReviewRequest) HasParticipantStatus() bool {
	if o != nil && !IsNil(o.ParticipantStatus) {
		return true
	}

	return false
}

// SetParticipantStatus gets a reference to the given string and assigns it to the ParticipantStatus field.
func (o *RestPullRequestFinishReviewRequest) SetParticipantStatus(v string) {
	o.ParticipantStatus = &v
}

func (o RestPullRequestFinishReviewRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestPullRequestFinishReviewRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommentText) {
		toSerialize["commentText"] = o.CommentText
	}
	if !IsNil(o.LastReviewedCommit) {
		toSerialize["lastReviewedCommit"] = o.LastReviewedCommit
	}
	if !IsNil(o.ParticipantStatus) {
		toSerialize["participantStatus"] = o.ParticipantStatus
	}
	return toSerialize, nil
}

type NullableRestPullRequestFinishReviewRequest struct {
	value *RestPullRequestFinishReviewRequest
	isSet bool
}

func (v NullableRestPullRequestFinishReviewRequest) Get() *RestPullRequestFinishReviewRequest {
	return v.value
}

func (v *NullableRestPullRequestFinishReviewRequest) Set(val *RestPullRequestFinishReviewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestPullRequestFinishReviewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestPullRequestFinishReviewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestPullRequestFinishReviewRequest(val *RestPullRequestFinishReviewRequest) *NullableRestPullRequestFinishReviewRequest {
	return &NullableRestPullRequestFinishReviewRequest{value: val, isSet: true}
}

func (v NullableRestPullRequestFinishReviewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestPullRequestFinishReviewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


