/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestPullRequestMergeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestPullRequestMergeRequest{}

// RestPullRequestMergeRequest struct for RestPullRequestMergeRequest
type RestPullRequestMergeRequest struct {
	AutoMerge *bool `json:"autoMerge,omitempty"`
	AutoSubject *string `json:"autoSubject,omitempty"`
	Message *string `json:"message,omitempty"`
	StrategyId *string `json:"strategyId,omitempty"`
	Version *int32 `json:"version,omitempty"`
}

// NewRestPullRequestMergeRequest instantiates a new RestPullRequestMergeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestPullRequestMergeRequest() *RestPullRequestMergeRequest {
	this := RestPullRequestMergeRequest{}
	return &this
}

// NewRestPullRequestMergeRequestWithDefaults instantiates a new RestPullRequestMergeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestPullRequestMergeRequestWithDefaults() *RestPullRequestMergeRequest {
	this := RestPullRequestMergeRequest{}
	return &this
}

// GetAutoMerge returns the AutoMerge field value if set, zero value otherwise.
func (o *RestPullRequestMergeRequest) GetAutoMerge() bool {
	if o == nil || IsNil(o.AutoMerge) {
		var ret bool
		return ret
	}
	return *o.AutoMerge
}

// GetAutoMergeOk returns a tuple with the AutoMerge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestMergeRequest) GetAutoMergeOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoMerge) {
		return nil, false
	}
	return o.AutoMerge, true
}

// HasAutoMerge returns a boolean if a field has been set.
func (o *RestPullRequestMergeRequest) HasAutoMerge() bool {
	if o != nil && !IsNil(o.AutoMerge) {
		return true
	}

	return false
}

// SetAutoMerge gets a reference to the given bool and assigns it to the AutoMerge field.
func (o *RestPullRequestMergeRequest) SetAutoMerge(v bool) {
	o.AutoMerge = &v
}

// GetAutoSubject returns the AutoSubject field value if set, zero value otherwise.
func (o *RestPullRequestMergeRequest) GetAutoSubject() string {
	if o == nil || IsNil(o.AutoSubject) {
		var ret string
		return ret
	}
	return *o.AutoSubject
}

// GetAutoSubjectOk returns a tuple with the AutoSubject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestMergeRequest) GetAutoSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.AutoSubject) {
		return nil, false
	}
	return o.AutoSubject, true
}

// HasAutoSubject returns a boolean if a field has been set.
func (o *RestPullRequestMergeRequest) HasAutoSubject() bool {
	if o != nil && !IsNil(o.AutoSubject) {
		return true
	}

	return false
}

// SetAutoSubject gets a reference to the given string and assigns it to the AutoSubject field.
func (o *RestPullRequestMergeRequest) SetAutoSubject(v string) {
	o.AutoSubject = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *RestPullRequestMergeRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestMergeRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *RestPullRequestMergeRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *RestPullRequestMergeRequest) SetMessage(v string) {
	o.Message = &v
}

// GetStrategyId returns the StrategyId field value if set, zero value otherwise.
func (o *RestPullRequestMergeRequest) GetStrategyId() string {
	if o == nil || IsNil(o.StrategyId) {
		var ret string
		return ret
	}
	return *o.StrategyId
}

// GetStrategyIdOk returns a tuple with the StrategyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestMergeRequest) GetStrategyIdOk() (*string, bool) {
	if o == nil || IsNil(o.StrategyId) {
		return nil, false
	}
	return o.StrategyId, true
}

// HasStrategyId returns a boolean if a field has been set.
func (o *RestPullRequestMergeRequest) HasStrategyId() bool {
	if o != nil && !IsNil(o.StrategyId) {
		return true
	}

	return false
}

// SetStrategyId gets a reference to the given string and assigns it to the StrategyId field.
func (o *RestPullRequestMergeRequest) SetStrategyId(v string) {
	o.StrategyId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *RestPullRequestMergeRequest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestMergeRequest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *RestPullRequestMergeRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *RestPullRequestMergeRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o RestPullRequestMergeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestPullRequestMergeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoMerge) {
		toSerialize["autoMerge"] = o.AutoMerge
	}
	if !IsNil(o.AutoSubject) {
		toSerialize["autoSubject"] = o.AutoSubject
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.StrategyId) {
		toSerialize["strategyId"] = o.StrategyId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableRestPullRequestMergeRequest struct {
	value *RestPullRequestMergeRequest
	isSet bool
}

func (v NullableRestPullRequestMergeRequest) Get() *RestPullRequestMergeRequest {
	return v.value
}

func (v *NullableRestPullRequestMergeRequest) Set(val *RestPullRequestMergeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestPullRequestMergeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestPullRequestMergeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestPullRequestMergeRequest(val *RestPullRequestMergeRequest) *NullableRestPullRequestMergeRequest {
	return &NullableRestPullRequestMergeRequest{value: val, isSet: true}
}

func (v NullableRestPullRequestMergeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestPullRequestMergeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


