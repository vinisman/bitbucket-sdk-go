/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestPullRequestRebaseRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestPullRequestRebaseRequest{}

// RestPullRequestRebaseRequest struct for RestPullRequestRebaseRequest
type RestPullRequestRebaseRequest struct {
	Version *int32 `json:"version,omitempty"`
}

// NewRestPullRequestRebaseRequest instantiates a new RestPullRequestRebaseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestPullRequestRebaseRequest() *RestPullRequestRebaseRequest {
	this := RestPullRequestRebaseRequest{}
	return &this
}

// NewRestPullRequestRebaseRequestWithDefaults instantiates a new RestPullRequestRebaseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestPullRequestRebaseRequestWithDefaults() *RestPullRequestRebaseRequest {
	this := RestPullRequestRebaseRequest{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *RestPullRequestRebaseRequest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestRebaseRequest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *RestPullRequestRebaseRequest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *RestPullRequestRebaseRequest) SetVersion(v int32) {
	o.Version = &v
}

func (o RestPullRequestRebaseRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestPullRequestRebaseRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableRestPullRequestRebaseRequest struct {
	value *RestPullRequestRebaseRequest
	isSet bool
}

func (v NullableRestPullRequestRebaseRequest) Get() *RestPullRequestRebaseRequest {
	return v.value
}

func (v *NullableRestPullRequestRebaseRequest) Set(val *RestPullRequestRebaseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestPullRequestRebaseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestPullRequestRebaseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestPullRequestRebaseRequest(val *RestPullRequestRebaseRequest) *NullableRestPullRequestRebaseRequest {
	return &NullableRestPullRequestRebaseRequest{value: val, isSet: true}
}

func (v NullableRestPullRequestRebaseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestPullRequestRebaseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


