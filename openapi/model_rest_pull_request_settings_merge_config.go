/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestPullRequestSettingsMergeConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestPullRequestSettingsMergeConfig{}

// RestPullRequestSettingsMergeConfig struct for RestPullRequestSettingsMergeConfig
type RestPullRequestSettingsMergeConfig struct {
	CommitMessageTemplate *RestPullRequestMergeConfigCommitMessageTemplate `json:"commitMessageTemplate,omitempty"`
	CommitSummaries *int32 `json:"commitSummaries,omitempty"`
	DefaultStrategy *RestPullRequestMergeConfigDefaultStrategy `json:"defaultStrategy,omitempty"`
	Strategies []RestPullRequestMergeStrategy `json:"strategies,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewRestPullRequestSettingsMergeConfig instantiates a new RestPullRequestSettingsMergeConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestPullRequestSettingsMergeConfig() *RestPullRequestSettingsMergeConfig {
	this := RestPullRequestSettingsMergeConfig{}
	return &this
}

// NewRestPullRequestSettingsMergeConfigWithDefaults instantiates a new RestPullRequestSettingsMergeConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestPullRequestSettingsMergeConfigWithDefaults() *RestPullRequestSettingsMergeConfig {
	this := RestPullRequestSettingsMergeConfig{}
	return &this
}

// GetCommitMessageTemplate returns the CommitMessageTemplate field value if set, zero value otherwise.
func (o *RestPullRequestSettingsMergeConfig) GetCommitMessageTemplate() RestPullRequestMergeConfigCommitMessageTemplate {
	if o == nil || IsNil(o.CommitMessageTemplate) {
		var ret RestPullRequestMergeConfigCommitMessageTemplate
		return ret
	}
	return *o.CommitMessageTemplate
}

// GetCommitMessageTemplateOk returns a tuple with the CommitMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSettingsMergeConfig) GetCommitMessageTemplateOk() (*RestPullRequestMergeConfigCommitMessageTemplate, bool) {
	if o == nil || IsNil(o.CommitMessageTemplate) {
		return nil, false
	}
	return o.CommitMessageTemplate, true
}

// HasCommitMessageTemplate returns a boolean if a field has been set.
func (o *RestPullRequestSettingsMergeConfig) HasCommitMessageTemplate() bool {
	if o != nil && !IsNil(o.CommitMessageTemplate) {
		return true
	}

	return false
}

// SetCommitMessageTemplate gets a reference to the given RestPullRequestMergeConfigCommitMessageTemplate and assigns it to the CommitMessageTemplate field.
func (o *RestPullRequestSettingsMergeConfig) SetCommitMessageTemplate(v RestPullRequestMergeConfigCommitMessageTemplate) {
	o.CommitMessageTemplate = &v
}

// GetCommitSummaries returns the CommitSummaries field value if set, zero value otherwise.
func (o *RestPullRequestSettingsMergeConfig) GetCommitSummaries() int32 {
	if o == nil || IsNil(o.CommitSummaries) {
		var ret int32
		return ret
	}
	return *o.CommitSummaries
}

// GetCommitSummariesOk returns a tuple with the CommitSummaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSettingsMergeConfig) GetCommitSummariesOk() (*int32, bool) {
	if o == nil || IsNil(o.CommitSummaries) {
		return nil, false
	}
	return o.CommitSummaries, true
}

// HasCommitSummaries returns a boolean if a field has been set.
func (o *RestPullRequestSettingsMergeConfig) HasCommitSummaries() bool {
	if o != nil && !IsNil(o.CommitSummaries) {
		return true
	}

	return false
}

// SetCommitSummaries gets a reference to the given int32 and assigns it to the CommitSummaries field.
func (o *RestPullRequestSettingsMergeConfig) SetCommitSummaries(v int32) {
	o.CommitSummaries = &v
}

// GetDefaultStrategy returns the DefaultStrategy field value if set, zero value otherwise.
func (o *RestPullRequestSettingsMergeConfig) GetDefaultStrategy() RestPullRequestMergeConfigDefaultStrategy {
	if o == nil || IsNil(o.DefaultStrategy) {
		var ret RestPullRequestMergeConfigDefaultStrategy
		return ret
	}
	return *o.DefaultStrategy
}

// GetDefaultStrategyOk returns a tuple with the DefaultStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSettingsMergeConfig) GetDefaultStrategyOk() (*RestPullRequestMergeConfigDefaultStrategy, bool) {
	if o == nil || IsNil(o.DefaultStrategy) {
		return nil, false
	}
	return o.DefaultStrategy, true
}

// HasDefaultStrategy returns a boolean if a field has been set.
func (o *RestPullRequestSettingsMergeConfig) HasDefaultStrategy() bool {
	if o != nil && !IsNil(o.DefaultStrategy) {
		return true
	}

	return false
}

// SetDefaultStrategy gets a reference to the given RestPullRequestMergeConfigDefaultStrategy and assigns it to the DefaultStrategy field.
func (o *RestPullRequestSettingsMergeConfig) SetDefaultStrategy(v RestPullRequestMergeConfigDefaultStrategy) {
	o.DefaultStrategy = &v
}

// GetStrategies returns the Strategies field value if set, zero value otherwise.
func (o *RestPullRequestSettingsMergeConfig) GetStrategies() []RestPullRequestMergeStrategy {
	if o == nil || IsNil(o.Strategies) {
		var ret []RestPullRequestMergeStrategy
		return ret
	}
	return o.Strategies
}

// GetStrategiesOk returns a tuple with the Strategies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSettingsMergeConfig) GetStrategiesOk() ([]RestPullRequestMergeStrategy, bool) {
	if o == nil || IsNil(o.Strategies) {
		return nil, false
	}
	return o.Strategies, true
}

// HasStrategies returns a boolean if a field has been set.
func (o *RestPullRequestSettingsMergeConfig) HasStrategies() bool {
	if o != nil && !IsNil(o.Strategies) {
		return true
	}

	return false
}

// SetStrategies gets a reference to the given []RestPullRequestMergeStrategy and assigns it to the Strategies field.
func (o *RestPullRequestSettingsMergeConfig) SetStrategies(v []RestPullRequestMergeStrategy) {
	o.Strategies = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RestPullRequestSettingsMergeConfig) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSettingsMergeConfig) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RestPullRequestSettingsMergeConfig) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RestPullRequestSettingsMergeConfig) SetType(v string) {
	o.Type = &v
}

func (o RestPullRequestSettingsMergeConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestPullRequestSettingsMergeConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CommitMessageTemplate) {
		toSerialize["commitMessageTemplate"] = o.CommitMessageTemplate
	}
	if !IsNil(o.CommitSummaries) {
		toSerialize["commitSummaries"] = o.CommitSummaries
	}
	if !IsNil(o.DefaultStrategy) {
		toSerialize["defaultStrategy"] = o.DefaultStrategy
	}
	if !IsNil(o.Strategies) {
		toSerialize["strategies"] = o.Strategies
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableRestPullRequestSettingsMergeConfig struct {
	value *RestPullRequestSettingsMergeConfig
	isSet bool
}

func (v NullableRestPullRequestSettingsMergeConfig) Get() *RestPullRequestSettingsMergeConfig {
	return v.value
}

func (v *NullableRestPullRequestSettingsMergeConfig) Set(val *RestPullRequestSettingsMergeConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRestPullRequestSettingsMergeConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRestPullRequestSettingsMergeConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestPullRequestSettingsMergeConfig(val *RestPullRequestSettingsMergeConfig) *NullableRestPullRequestSettingsMergeConfig {
	return &NullableRestPullRequestSettingsMergeConfig{value: val, isSet: true}
}

func (v NullableRestPullRequestSettingsMergeConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestPullRequestSettingsMergeConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


