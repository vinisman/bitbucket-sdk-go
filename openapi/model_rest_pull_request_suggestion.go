/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestPullRequestSuggestion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestPullRequestSuggestion{}

// RestPullRequestSuggestion struct for RestPullRequestSuggestion
type RestPullRequestSuggestion struct {
	ChangeTme *int64 `json:"changeTme,omitempty"`
	FromRef *RestPullRequestRebaseResultRefChangeRef `json:"fromRef,omitempty"`
	RefChange *RestPullRequestRebaseResultRefChange `json:"refChange,omitempty"`
	Repository *RestChangesetRepository `json:"repository,omitempty"`
	ToRef *RestPullRequestRebaseResultRefChangeRef `json:"toRef,omitempty"`
}

// NewRestPullRequestSuggestion instantiates a new RestPullRequestSuggestion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestPullRequestSuggestion() *RestPullRequestSuggestion {
	this := RestPullRequestSuggestion{}
	return &this
}

// NewRestPullRequestSuggestionWithDefaults instantiates a new RestPullRequestSuggestion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestPullRequestSuggestionWithDefaults() *RestPullRequestSuggestion {
	this := RestPullRequestSuggestion{}
	return &this
}

// GetChangeTme returns the ChangeTme field value if set, zero value otherwise.
func (o *RestPullRequestSuggestion) GetChangeTme() int64 {
	if o == nil || IsNil(o.ChangeTme) {
		var ret int64
		return ret
	}
	return *o.ChangeTme
}

// GetChangeTmeOk returns a tuple with the ChangeTme field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSuggestion) GetChangeTmeOk() (*int64, bool) {
	if o == nil || IsNil(o.ChangeTme) {
		return nil, false
	}
	return o.ChangeTme, true
}

// HasChangeTme returns a boolean if a field has been set.
func (o *RestPullRequestSuggestion) HasChangeTme() bool {
	if o != nil && !IsNil(o.ChangeTme) {
		return true
	}

	return false
}

// SetChangeTme gets a reference to the given int64 and assigns it to the ChangeTme field.
func (o *RestPullRequestSuggestion) SetChangeTme(v int64) {
	o.ChangeTme = &v
}

// GetFromRef returns the FromRef field value if set, zero value otherwise.
func (o *RestPullRequestSuggestion) GetFromRef() RestPullRequestRebaseResultRefChangeRef {
	if o == nil || IsNil(o.FromRef) {
		var ret RestPullRequestRebaseResultRefChangeRef
		return ret
	}
	return *o.FromRef
}

// GetFromRefOk returns a tuple with the FromRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSuggestion) GetFromRefOk() (*RestPullRequestRebaseResultRefChangeRef, bool) {
	if o == nil || IsNil(o.FromRef) {
		return nil, false
	}
	return o.FromRef, true
}

// HasFromRef returns a boolean if a field has been set.
func (o *RestPullRequestSuggestion) HasFromRef() bool {
	if o != nil && !IsNil(o.FromRef) {
		return true
	}

	return false
}

// SetFromRef gets a reference to the given RestPullRequestRebaseResultRefChangeRef and assigns it to the FromRef field.
func (o *RestPullRequestSuggestion) SetFromRef(v RestPullRequestRebaseResultRefChangeRef) {
	o.FromRef = &v
}

// GetRefChange returns the RefChange field value if set, zero value otherwise.
func (o *RestPullRequestSuggestion) GetRefChange() RestPullRequestRebaseResultRefChange {
	if o == nil || IsNil(o.RefChange) {
		var ret RestPullRequestRebaseResultRefChange
		return ret
	}
	return *o.RefChange
}

// GetRefChangeOk returns a tuple with the RefChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSuggestion) GetRefChangeOk() (*RestPullRequestRebaseResultRefChange, bool) {
	if o == nil || IsNil(o.RefChange) {
		return nil, false
	}
	return o.RefChange, true
}

// HasRefChange returns a boolean if a field has been set.
func (o *RestPullRequestSuggestion) HasRefChange() bool {
	if o != nil && !IsNil(o.RefChange) {
		return true
	}

	return false
}

// SetRefChange gets a reference to the given RestPullRequestRebaseResultRefChange and assigns it to the RefChange field.
func (o *RestPullRequestSuggestion) SetRefChange(v RestPullRequestRebaseResultRefChange) {
	o.RefChange = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *RestPullRequestSuggestion) GetRepository() RestChangesetRepository {
	if o == nil || IsNil(o.Repository) {
		var ret RestChangesetRepository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSuggestion) GetRepositoryOk() (*RestChangesetRepository, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *RestPullRequestSuggestion) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given RestChangesetRepository and assigns it to the Repository field.
func (o *RestPullRequestSuggestion) SetRepository(v RestChangesetRepository) {
	o.Repository = &v
}

// GetToRef returns the ToRef field value if set, zero value otherwise.
func (o *RestPullRequestSuggestion) GetToRef() RestPullRequestRebaseResultRefChangeRef {
	if o == nil || IsNil(o.ToRef) {
		var ret RestPullRequestRebaseResultRefChangeRef
		return ret
	}
	return *o.ToRef
}

// GetToRefOk returns a tuple with the ToRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestPullRequestSuggestion) GetToRefOk() (*RestPullRequestRebaseResultRefChangeRef, bool) {
	if o == nil || IsNil(o.ToRef) {
		return nil, false
	}
	return o.ToRef, true
}

// HasToRef returns a boolean if a field has been set.
func (o *RestPullRequestSuggestion) HasToRef() bool {
	if o != nil && !IsNil(o.ToRef) {
		return true
	}

	return false
}

// SetToRef gets a reference to the given RestPullRequestRebaseResultRefChangeRef and assigns it to the ToRef field.
func (o *RestPullRequestSuggestion) SetToRef(v RestPullRequestRebaseResultRefChangeRef) {
	o.ToRef = &v
}

func (o RestPullRequestSuggestion) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestPullRequestSuggestion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ChangeTme) {
		toSerialize["changeTme"] = o.ChangeTme
	}
	if !IsNil(o.FromRef) {
		toSerialize["fromRef"] = o.FromRef
	}
	if !IsNil(o.RefChange) {
		toSerialize["refChange"] = o.RefChange
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	if !IsNil(o.ToRef) {
		toSerialize["toRef"] = o.ToRef
	}
	return toSerialize, nil
}

type NullableRestPullRequestSuggestion struct {
	value *RestPullRequestSuggestion
	isSet bool
}

func (v NullableRestPullRequestSuggestion) Get() *RestPullRequestSuggestion {
	return v.value
}

func (v *NullableRestPullRequestSuggestion) Set(val *RestPullRequestSuggestion) {
	v.value = val
	v.isSet = true
}

func (v NullableRestPullRequestSuggestion) IsSet() bool {
	return v.isSet
}

func (v *NullableRestPullRequestSuggestion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestPullRequestSuggestion(val *RestPullRequestSuggestion) *NullableRestPullRequestSuggestion {
	return &NullableRestPullRequestSuggestion{value: val, isSet: true}
}

func (v NullableRestPullRequestSuggestion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestPullRequestSuggestion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


