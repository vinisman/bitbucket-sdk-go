/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestRepositoryHookVeto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestRepositoryHookVeto{}

// RestRepositoryHookVeto struct for RestRepositoryHookVeto
type RestRepositoryHookVeto struct {
	DetailedMessage *string `json:"detailedMessage,omitempty"`
	SummaryMessage *string `json:"summaryMessage,omitempty"`
}

// NewRestRepositoryHookVeto instantiates a new RestRepositoryHookVeto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestRepositoryHookVeto() *RestRepositoryHookVeto {
	this := RestRepositoryHookVeto{}
	return &this
}

// NewRestRepositoryHookVetoWithDefaults instantiates a new RestRepositoryHookVeto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestRepositoryHookVetoWithDefaults() *RestRepositoryHookVeto {
	this := RestRepositoryHookVeto{}
	return &this
}

// GetDetailedMessage returns the DetailedMessage field value if set, zero value otherwise.
func (o *RestRepositoryHookVeto) GetDetailedMessage() string {
	if o == nil || IsNil(o.DetailedMessage) {
		var ret string
		return ret
	}
	return *o.DetailedMessage
}

// GetDetailedMessageOk returns a tuple with the DetailedMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryHookVeto) GetDetailedMessageOk() (*string, bool) {
	if o == nil || IsNil(o.DetailedMessage) {
		return nil, false
	}
	return o.DetailedMessage, true
}

// HasDetailedMessage returns a boolean if a field has been set.
func (o *RestRepositoryHookVeto) HasDetailedMessage() bool {
	if o != nil && !IsNil(o.DetailedMessage) {
		return true
	}

	return false
}

// SetDetailedMessage gets a reference to the given string and assigns it to the DetailedMessage field.
func (o *RestRepositoryHookVeto) SetDetailedMessage(v string) {
	o.DetailedMessage = &v
}

// GetSummaryMessage returns the SummaryMessage field value if set, zero value otherwise.
func (o *RestRepositoryHookVeto) GetSummaryMessage() string {
	if o == nil || IsNil(o.SummaryMessage) {
		var ret string
		return ret
	}
	return *o.SummaryMessage
}

// GetSummaryMessageOk returns a tuple with the SummaryMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryHookVeto) GetSummaryMessageOk() (*string, bool) {
	if o == nil || IsNil(o.SummaryMessage) {
		return nil, false
	}
	return o.SummaryMessage, true
}

// HasSummaryMessage returns a boolean if a field has been set.
func (o *RestRepositoryHookVeto) HasSummaryMessage() bool {
	if o != nil && !IsNil(o.SummaryMessage) {
		return true
	}

	return false
}

// SetSummaryMessage gets a reference to the given string and assigns it to the SummaryMessage field.
func (o *RestRepositoryHookVeto) SetSummaryMessage(v string) {
	o.SummaryMessage = &v
}

func (o RestRepositoryHookVeto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestRepositoryHookVeto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DetailedMessage) {
		toSerialize["detailedMessage"] = o.DetailedMessage
	}
	if !IsNil(o.SummaryMessage) {
		toSerialize["summaryMessage"] = o.SummaryMessage
	}
	return toSerialize, nil
}

type NullableRestRepositoryHookVeto struct {
	value *RestRepositoryHookVeto
	isSet bool
}

func (v NullableRestRepositoryHookVeto) Get() *RestRepositoryHookVeto {
	return v.value
}

func (v *NullableRestRepositoryHookVeto) Set(val *RestRepositoryHookVeto) {
	v.value = val
	v.isSet = true
}

func (v NullableRestRepositoryHookVeto) IsSet() bool {
	return v.isSet
}

func (v *NullableRestRepositoryHookVeto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestRepositoryHookVeto(val *RestRepositoryHookVeto) *NullableRestRepositoryHookVeto {
	return &NullableRestRepositoryHookVeto{value: val, isSet: true}
}

func (v NullableRestRepositoryHookVeto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestRepositoryHookVeto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


