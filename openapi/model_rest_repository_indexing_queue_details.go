/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestRepositoryIndexingQueueDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestRepositoryIndexingQueueDetails{}

// RestRepositoryIndexingQueueDetails struct for RestRepositoryIndexingQueueDetails
type RestRepositoryIndexingQueueDetails struct {
	// The timestamp indicating when the current queue details were captured.
	CapturedAt *int64 `json:"capturedAt,omitempty"`
	// The ID of the node associated with the indexing queue.
	NodeId *string `json:"nodeId,omitempty"`
	// Indicates whether the repository is currently queued for indexing.
	Queued *bool `json:"queued,omitempty"`
	// Gets the time at which the repository was added to the indexing queue. If the repository is not present in the queue, this will be empty.
	QueuedAt *int64 `json:"queuedAt,omitempty"`
}

// NewRestRepositoryIndexingQueueDetails instantiates a new RestRepositoryIndexingQueueDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestRepositoryIndexingQueueDetails() *RestRepositoryIndexingQueueDetails {
	this := RestRepositoryIndexingQueueDetails{}
	return &this
}

// NewRestRepositoryIndexingQueueDetailsWithDefaults instantiates a new RestRepositoryIndexingQueueDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestRepositoryIndexingQueueDetailsWithDefaults() *RestRepositoryIndexingQueueDetails {
	this := RestRepositoryIndexingQueueDetails{}
	return &this
}

// GetCapturedAt returns the CapturedAt field value if set, zero value otherwise.
func (o *RestRepositoryIndexingQueueDetails) GetCapturedAt() int64 {
	if o == nil || IsNil(o.CapturedAt) {
		var ret int64
		return ret
	}
	return *o.CapturedAt
}

// GetCapturedAtOk returns a tuple with the CapturedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryIndexingQueueDetails) GetCapturedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.CapturedAt) {
		return nil, false
	}
	return o.CapturedAt, true
}

// HasCapturedAt returns a boolean if a field has been set.
func (o *RestRepositoryIndexingQueueDetails) HasCapturedAt() bool {
	if o != nil && !IsNil(o.CapturedAt) {
		return true
	}

	return false
}

// SetCapturedAt gets a reference to the given int64 and assigns it to the CapturedAt field.
func (o *RestRepositoryIndexingQueueDetails) SetCapturedAt(v int64) {
	o.CapturedAt = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *RestRepositoryIndexingQueueDetails) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryIndexingQueueDetails) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *RestRepositoryIndexingQueueDetails) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *RestRepositoryIndexingQueueDetails) SetNodeId(v string) {
	o.NodeId = &v
}

// GetQueued returns the Queued field value if set, zero value otherwise.
func (o *RestRepositoryIndexingQueueDetails) GetQueued() bool {
	if o == nil || IsNil(o.Queued) {
		var ret bool
		return ret
	}
	return *o.Queued
}

// GetQueuedOk returns a tuple with the Queued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryIndexingQueueDetails) GetQueuedOk() (*bool, bool) {
	if o == nil || IsNil(o.Queued) {
		return nil, false
	}
	return o.Queued, true
}

// HasQueued returns a boolean if a field has been set.
func (o *RestRepositoryIndexingQueueDetails) HasQueued() bool {
	if o != nil && !IsNil(o.Queued) {
		return true
	}

	return false
}

// SetQueued gets a reference to the given bool and assigns it to the Queued field.
func (o *RestRepositoryIndexingQueueDetails) SetQueued(v bool) {
	o.Queued = &v
}

// GetQueuedAt returns the QueuedAt field value if set, zero value otherwise.
func (o *RestRepositoryIndexingQueueDetails) GetQueuedAt() int64 {
	if o == nil || IsNil(o.QueuedAt) {
		var ret int64
		return ret
	}
	return *o.QueuedAt
}

// GetQueuedAtOk returns a tuple with the QueuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryIndexingQueueDetails) GetQueuedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.QueuedAt) {
		return nil, false
	}
	return o.QueuedAt, true
}

// HasQueuedAt returns a boolean if a field has been set.
func (o *RestRepositoryIndexingQueueDetails) HasQueuedAt() bool {
	if o != nil && !IsNil(o.QueuedAt) {
		return true
	}

	return false
}

// SetQueuedAt gets a reference to the given int64 and assigns it to the QueuedAt field.
func (o *RestRepositoryIndexingQueueDetails) SetQueuedAt(v int64) {
	o.QueuedAt = &v
}

func (o RestRepositoryIndexingQueueDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestRepositoryIndexingQueueDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CapturedAt) {
		toSerialize["capturedAt"] = o.CapturedAt
	}
	if !IsNil(o.NodeId) {
		toSerialize["nodeId"] = o.NodeId
	}
	if !IsNil(o.Queued) {
		toSerialize["queued"] = o.Queued
	}
	if !IsNil(o.QueuedAt) {
		toSerialize["queuedAt"] = o.QueuedAt
	}
	return toSerialize, nil
}

type NullableRestRepositoryIndexingQueueDetails struct {
	value *RestRepositoryIndexingQueueDetails
	isSet bool
}

func (v NullableRestRepositoryIndexingQueueDetails) Get() *RestRepositoryIndexingQueueDetails {
	return v.value
}

func (v *NullableRestRepositoryIndexingQueueDetails) Set(val *RestRepositoryIndexingQueueDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableRestRepositoryIndexingQueueDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableRestRepositoryIndexingQueueDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestRepositoryIndexingQueueDetails(val *RestRepositoryIndexingQueueDetails) *NullableRestRepositoryIndexingQueueDetails {
	return &NullableRestRepositoryIndexingQueueDetails{value: val, isSet: true}
}

func (v NullableRestRepositoryIndexingQueueDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestRepositoryIndexingQueueDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


