/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestRepositoryPullRequestSettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestRepositoryPullRequestSettings{}

// RestRepositoryPullRequestSettings struct for RestRepositoryPullRequestSettings
type RestRepositoryPullRequestSettings struct {
	MergeConfig *RestPullRequestSettingsMergeConfig `json:"mergeConfig,omitempty"`
	RequiredAllApprovers *bool `json:"requiredAllApprovers,omitempty"`
	RequiredAllTasksComplete *bool `json:"requiredAllTasksComplete,omitempty"`
	RequiredApprovers *RestRepositoryPullRequestSettingsRequiredApprovers `json:"requiredApprovers,omitempty"`
	RequiredApproversDeprecated *int32 `json:"requiredApproversDeprecated,omitempty"`
	RequiredSuccessfulBuilds *RestRepositoryPullRequestSettingsRequiredApprovers `json:"requiredSuccessfulBuilds,omitempty"`
	RequiredSuccessfulBuildsDeprecated *int32 `json:"requiredSuccessfulBuildsDeprecated,omitempty"`
}

// NewRestRepositoryPullRequestSettings instantiates a new RestRepositoryPullRequestSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestRepositoryPullRequestSettings() *RestRepositoryPullRequestSettings {
	this := RestRepositoryPullRequestSettings{}
	return &this
}

// NewRestRepositoryPullRequestSettingsWithDefaults instantiates a new RestRepositoryPullRequestSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestRepositoryPullRequestSettingsWithDefaults() *RestRepositoryPullRequestSettings {
	this := RestRepositoryPullRequestSettings{}
	return &this
}

// GetMergeConfig returns the MergeConfig field value if set, zero value otherwise.
func (o *RestRepositoryPullRequestSettings) GetMergeConfig() RestPullRequestSettingsMergeConfig {
	if o == nil || IsNil(o.MergeConfig) {
		var ret RestPullRequestSettingsMergeConfig
		return ret
	}
	return *o.MergeConfig
}

// GetMergeConfigOk returns a tuple with the MergeConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryPullRequestSettings) GetMergeConfigOk() (*RestPullRequestSettingsMergeConfig, bool) {
	if o == nil || IsNil(o.MergeConfig) {
		return nil, false
	}
	return o.MergeConfig, true
}

// HasMergeConfig returns a boolean if a field has been set.
func (o *RestRepositoryPullRequestSettings) HasMergeConfig() bool {
	if o != nil && !IsNil(o.MergeConfig) {
		return true
	}

	return false
}

// SetMergeConfig gets a reference to the given RestPullRequestSettingsMergeConfig and assigns it to the MergeConfig field.
func (o *RestRepositoryPullRequestSettings) SetMergeConfig(v RestPullRequestSettingsMergeConfig) {
	o.MergeConfig = &v
}

// GetRequiredAllApprovers returns the RequiredAllApprovers field value if set, zero value otherwise.
func (o *RestRepositoryPullRequestSettings) GetRequiredAllApprovers() bool {
	if o == nil || IsNil(o.RequiredAllApprovers) {
		var ret bool
		return ret
	}
	return *o.RequiredAllApprovers
}

// GetRequiredAllApproversOk returns a tuple with the RequiredAllApprovers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryPullRequestSettings) GetRequiredAllApproversOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiredAllApprovers) {
		return nil, false
	}
	return o.RequiredAllApprovers, true
}

// HasRequiredAllApprovers returns a boolean if a field has been set.
func (o *RestRepositoryPullRequestSettings) HasRequiredAllApprovers() bool {
	if o != nil && !IsNil(o.RequiredAllApprovers) {
		return true
	}

	return false
}

// SetRequiredAllApprovers gets a reference to the given bool and assigns it to the RequiredAllApprovers field.
func (o *RestRepositoryPullRequestSettings) SetRequiredAllApprovers(v bool) {
	o.RequiredAllApprovers = &v
}

// GetRequiredAllTasksComplete returns the RequiredAllTasksComplete field value if set, zero value otherwise.
func (o *RestRepositoryPullRequestSettings) GetRequiredAllTasksComplete() bool {
	if o == nil || IsNil(o.RequiredAllTasksComplete) {
		var ret bool
		return ret
	}
	return *o.RequiredAllTasksComplete
}

// GetRequiredAllTasksCompleteOk returns a tuple with the RequiredAllTasksComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryPullRequestSettings) GetRequiredAllTasksCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiredAllTasksComplete) {
		return nil, false
	}
	return o.RequiredAllTasksComplete, true
}

// HasRequiredAllTasksComplete returns a boolean if a field has been set.
func (o *RestRepositoryPullRequestSettings) HasRequiredAllTasksComplete() bool {
	if o != nil && !IsNil(o.RequiredAllTasksComplete) {
		return true
	}

	return false
}

// SetRequiredAllTasksComplete gets a reference to the given bool and assigns it to the RequiredAllTasksComplete field.
func (o *RestRepositoryPullRequestSettings) SetRequiredAllTasksComplete(v bool) {
	o.RequiredAllTasksComplete = &v
}

// GetRequiredApprovers returns the RequiredApprovers field value if set, zero value otherwise.
func (o *RestRepositoryPullRequestSettings) GetRequiredApprovers() RestRepositoryPullRequestSettingsRequiredApprovers {
	if o == nil || IsNil(o.RequiredApprovers) {
		var ret RestRepositoryPullRequestSettingsRequiredApprovers
		return ret
	}
	return *o.RequiredApprovers
}

// GetRequiredApproversOk returns a tuple with the RequiredApprovers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryPullRequestSettings) GetRequiredApproversOk() (*RestRepositoryPullRequestSettingsRequiredApprovers, bool) {
	if o == nil || IsNil(o.RequiredApprovers) {
		return nil, false
	}
	return o.RequiredApprovers, true
}

// HasRequiredApprovers returns a boolean if a field has been set.
func (o *RestRepositoryPullRequestSettings) HasRequiredApprovers() bool {
	if o != nil && !IsNil(o.RequiredApprovers) {
		return true
	}

	return false
}

// SetRequiredApprovers gets a reference to the given RestRepositoryPullRequestSettingsRequiredApprovers and assigns it to the RequiredApprovers field.
func (o *RestRepositoryPullRequestSettings) SetRequiredApprovers(v RestRepositoryPullRequestSettingsRequiredApprovers) {
	o.RequiredApprovers = &v
}

// GetRequiredApproversDeprecated returns the RequiredApproversDeprecated field value if set, zero value otherwise.
func (o *RestRepositoryPullRequestSettings) GetRequiredApproversDeprecated() int32 {
	if o == nil || IsNil(o.RequiredApproversDeprecated) {
		var ret int32
		return ret
	}
	return *o.RequiredApproversDeprecated
}

// GetRequiredApproversDeprecatedOk returns a tuple with the RequiredApproversDeprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryPullRequestSettings) GetRequiredApproversDeprecatedOk() (*int32, bool) {
	if o == nil || IsNil(o.RequiredApproversDeprecated) {
		return nil, false
	}
	return o.RequiredApproversDeprecated, true
}

// HasRequiredApproversDeprecated returns a boolean if a field has been set.
func (o *RestRepositoryPullRequestSettings) HasRequiredApproversDeprecated() bool {
	if o != nil && !IsNil(o.RequiredApproversDeprecated) {
		return true
	}

	return false
}

// SetRequiredApproversDeprecated gets a reference to the given int32 and assigns it to the RequiredApproversDeprecated field.
func (o *RestRepositoryPullRequestSettings) SetRequiredApproversDeprecated(v int32) {
	o.RequiredApproversDeprecated = &v
}

// GetRequiredSuccessfulBuilds returns the RequiredSuccessfulBuilds field value if set, zero value otherwise.
func (o *RestRepositoryPullRequestSettings) GetRequiredSuccessfulBuilds() RestRepositoryPullRequestSettingsRequiredApprovers {
	if o == nil || IsNil(o.RequiredSuccessfulBuilds) {
		var ret RestRepositoryPullRequestSettingsRequiredApprovers
		return ret
	}
	return *o.RequiredSuccessfulBuilds
}

// GetRequiredSuccessfulBuildsOk returns a tuple with the RequiredSuccessfulBuilds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryPullRequestSettings) GetRequiredSuccessfulBuildsOk() (*RestRepositoryPullRequestSettingsRequiredApprovers, bool) {
	if o == nil || IsNil(o.RequiredSuccessfulBuilds) {
		return nil, false
	}
	return o.RequiredSuccessfulBuilds, true
}

// HasRequiredSuccessfulBuilds returns a boolean if a field has been set.
func (o *RestRepositoryPullRequestSettings) HasRequiredSuccessfulBuilds() bool {
	if o != nil && !IsNil(o.RequiredSuccessfulBuilds) {
		return true
	}

	return false
}

// SetRequiredSuccessfulBuilds gets a reference to the given RestRepositoryPullRequestSettingsRequiredApprovers and assigns it to the RequiredSuccessfulBuilds field.
func (o *RestRepositoryPullRequestSettings) SetRequiredSuccessfulBuilds(v RestRepositoryPullRequestSettingsRequiredApprovers) {
	o.RequiredSuccessfulBuilds = &v
}

// GetRequiredSuccessfulBuildsDeprecated returns the RequiredSuccessfulBuildsDeprecated field value if set, zero value otherwise.
func (o *RestRepositoryPullRequestSettings) GetRequiredSuccessfulBuildsDeprecated() int32 {
	if o == nil || IsNil(o.RequiredSuccessfulBuildsDeprecated) {
		var ret int32
		return ret
	}
	return *o.RequiredSuccessfulBuildsDeprecated
}

// GetRequiredSuccessfulBuildsDeprecatedOk returns a tuple with the RequiredSuccessfulBuildsDeprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRepositoryPullRequestSettings) GetRequiredSuccessfulBuildsDeprecatedOk() (*int32, bool) {
	if o == nil || IsNil(o.RequiredSuccessfulBuildsDeprecated) {
		return nil, false
	}
	return o.RequiredSuccessfulBuildsDeprecated, true
}

// HasRequiredSuccessfulBuildsDeprecated returns a boolean if a field has been set.
func (o *RestRepositoryPullRequestSettings) HasRequiredSuccessfulBuildsDeprecated() bool {
	if o != nil && !IsNil(o.RequiredSuccessfulBuildsDeprecated) {
		return true
	}

	return false
}

// SetRequiredSuccessfulBuildsDeprecated gets a reference to the given int32 and assigns it to the RequiredSuccessfulBuildsDeprecated field.
func (o *RestRepositoryPullRequestSettings) SetRequiredSuccessfulBuildsDeprecated(v int32) {
	o.RequiredSuccessfulBuildsDeprecated = &v
}

func (o RestRepositoryPullRequestSettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestRepositoryPullRequestSettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MergeConfig) {
		toSerialize["mergeConfig"] = o.MergeConfig
	}
	if !IsNil(o.RequiredAllApprovers) {
		toSerialize["requiredAllApprovers"] = o.RequiredAllApprovers
	}
	if !IsNil(o.RequiredAllTasksComplete) {
		toSerialize["requiredAllTasksComplete"] = o.RequiredAllTasksComplete
	}
	if !IsNil(o.RequiredApprovers) {
		toSerialize["requiredApprovers"] = o.RequiredApprovers
	}
	if !IsNil(o.RequiredApproversDeprecated) {
		toSerialize["requiredApproversDeprecated"] = o.RequiredApproversDeprecated
	}
	if !IsNil(o.RequiredSuccessfulBuilds) {
		toSerialize["requiredSuccessfulBuilds"] = o.RequiredSuccessfulBuilds
	}
	if !IsNil(o.RequiredSuccessfulBuildsDeprecated) {
		toSerialize["requiredSuccessfulBuildsDeprecated"] = o.RequiredSuccessfulBuildsDeprecated
	}
	return toSerialize, nil
}

type NullableRestRepositoryPullRequestSettings struct {
	value *RestRepositoryPullRequestSettings
	isSet bool
}

func (v NullableRestRepositoryPullRequestSettings) Get() *RestRepositoryPullRequestSettings {
	return v.value
}

func (v *NullableRestRepositoryPullRequestSettings) Set(val *RestRepositoryPullRequestSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableRestRepositoryPullRequestSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableRestRepositoryPullRequestSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestRepositoryPullRequestSettings(val *RestRepositoryPullRequestSettings) *NullableRestRepositoryPullRequestSettings {
	return &NullableRestRepositoryPullRequestSettings{value: val, isSet: true}
}

func (v NullableRestRepositoryPullRequestSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestRepositoryPullRequestSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


