/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestRequiredBuildCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestRequiredBuildCondition{}

// RestRequiredBuildCondition struct for RestRequiredBuildCondition
type RestRequiredBuildCondition struct {
	// A non-empty list of build parent keys that require green builds for this merge check to pass
	BuildParentKeys []string `json:"buildParentKeys,omitempty"`
	ExemptRefMatcher *UpdatePullRequestCondition1RequestSourceMatcher `json:"exemptRefMatcher,omitempty"`
	Id *int64 `json:"id,omitempty"`
	RefMatcher *UpdatePullRequestCondition1RequestSourceMatcher `json:"refMatcher,omitempty"`
}

// NewRestRequiredBuildCondition instantiates a new RestRequiredBuildCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestRequiredBuildCondition() *RestRequiredBuildCondition {
	this := RestRequiredBuildCondition{}
	return &this
}

// NewRestRequiredBuildConditionWithDefaults instantiates a new RestRequiredBuildCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestRequiredBuildConditionWithDefaults() *RestRequiredBuildCondition {
	this := RestRequiredBuildCondition{}
	return &this
}

// GetBuildParentKeys returns the BuildParentKeys field value if set, zero value otherwise.
func (o *RestRequiredBuildCondition) GetBuildParentKeys() []string {
	if o == nil || IsNil(o.BuildParentKeys) {
		var ret []string
		return ret
	}
	return o.BuildParentKeys
}

// GetBuildParentKeysOk returns a tuple with the BuildParentKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRequiredBuildCondition) GetBuildParentKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.BuildParentKeys) {
		return nil, false
	}
	return o.BuildParentKeys, true
}

// HasBuildParentKeys returns a boolean if a field has been set.
func (o *RestRequiredBuildCondition) HasBuildParentKeys() bool {
	if o != nil && !IsNil(o.BuildParentKeys) {
		return true
	}

	return false
}

// SetBuildParentKeys gets a reference to the given []string and assigns it to the BuildParentKeys field.
func (o *RestRequiredBuildCondition) SetBuildParentKeys(v []string) {
	o.BuildParentKeys = v
}

// GetExemptRefMatcher returns the ExemptRefMatcher field value if set, zero value otherwise.
func (o *RestRequiredBuildCondition) GetExemptRefMatcher() UpdatePullRequestCondition1RequestSourceMatcher {
	if o == nil || IsNil(o.ExemptRefMatcher) {
		var ret UpdatePullRequestCondition1RequestSourceMatcher
		return ret
	}
	return *o.ExemptRefMatcher
}

// GetExemptRefMatcherOk returns a tuple with the ExemptRefMatcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRequiredBuildCondition) GetExemptRefMatcherOk() (*UpdatePullRequestCondition1RequestSourceMatcher, bool) {
	if o == nil || IsNil(o.ExemptRefMatcher) {
		return nil, false
	}
	return o.ExemptRefMatcher, true
}

// HasExemptRefMatcher returns a boolean if a field has been set.
func (o *RestRequiredBuildCondition) HasExemptRefMatcher() bool {
	if o != nil && !IsNil(o.ExemptRefMatcher) {
		return true
	}

	return false
}

// SetExemptRefMatcher gets a reference to the given UpdatePullRequestCondition1RequestSourceMatcher and assigns it to the ExemptRefMatcher field.
func (o *RestRequiredBuildCondition) SetExemptRefMatcher(v UpdatePullRequestCondition1RequestSourceMatcher) {
	o.ExemptRefMatcher = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestRequiredBuildCondition) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRequiredBuildCondition) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestRequiredBuildCondition) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *RestRequiredBuildCondition) SetId(v int64) {
	o.Id = &v
}

// GetRefMatcher returns the RefMatcher field value if set, zero value otherwise.
func (o *RestRequiredBuildCondition) GetRefMatcher() UpdatePullRequestCondition1RequestSourceMatcher {
	if o == nil || IsNil(o.RefMatcher) {
		var ret UpdatePullRequestCondition1RequestSourceMatcher
		return ret
	}
	return *o.RefMatcher
}

// GetRefMatcherOk returns a tuple with the RefMatcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRequiredBuildCondition) GetRefMatcherOk() (*UpdatePullRequestCondition1RequestSourceMatcher, bool) {
	if o == nil || IsNil(o.RefMatcher) {
		return nil, false
	}
	return o.RefMatcher, true
}

// HasRefMatcher returns a boolean if a field has been set.
func (o *RestRequiredBuildCondition) HasRefMatcher() bool {
	if o != nil && !IsNil(o.RefMatcher) {
		return true
	}

	return false
}

// SetRefMatcher gets a reference to the given UpdatePullRequestCondition1RequestSourceMatcher and assigns it to the RefMatcher field.
func (o *RestRequiredBuildCondition) SetRefMatcher(v UpdatePullRequestCondition1RequestSourceMatcher) {
	o.RefMatcher = &v
}

func (o RestRequiredBuildCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestRequiredBuildCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildParentKeys) {
		toSerialize["buildParentKeys"] = o.BuildParentKeys
	}
	if !IsNil(o.ExemptRefMatcher) {
		toSerialize["exemptRefMatcher"] = o.ExemptRefMatcher
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.RefMatcher) {
		toSerialize["refMatcher"] = o.RefMatcher
	}
	return toSerialize, nil
}

type NullableRestRequiredBuildCondition struct {
	value *RestRequiredBuildCondition
	isSet bool
}

func (v NullableRestRequiredBuildCondition) Get() *RestRequiredBuildCondition {
	return v.value
}

func (v *NullableRestRequiredBuildCondition) Set(val *RestRequiredBuildCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableRestRequiredBuildCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableRestRequiredBuildCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestRequiredBuildCondition(val *RestRequiredBuildCondition) *NullableRestRequiredBuildCondition {
	return &NullableRestRequiredBuildCondition{value: val, isSet: true}
}

func (v NullableRestRequiredBuildCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestRequiredBuildCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


