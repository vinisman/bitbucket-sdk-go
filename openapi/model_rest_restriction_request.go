/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestRestrictionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestRestrictionRequest{}

// RestRestrictionRequest struct for RestRestrictionRequest
type RestRestrictionRequest struct {
	AccessKeyIds []int32 `json:"accessKeyIds,omitempty"`
	AccessKeys []RestSshAccessKey `json:"accessKeys,omitempty"`
	GroupNames []string `json:"groupNames,omitempty"`
	Groups []string `json:"groups,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Matcher *UpdatePullRequestCondition1RequestSourceMatcher `json:"matcher,omitempty"`
	Scope *RestPullRequestConditionScope `json:"scope,omitempty"`
	Type *string `json:"type,omitempty"`
	UserSlugs []string `json:"userSlugs,omitempty"`
	Users []RestApplicationUser `json:"users,omitempty"`
}

// NewRestRestrictionRequest instantiates a new RestRestrictionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestRestrictionRequest() *RestRestrictionRequest {
	this := RestRestrictionRequest{}
	return &this
}

// NewRestRestrictionRequestWithDefaults instantiates a new RestRestrictionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestRestrictionRequestWithDefaults() *RestRestrictionRequest {
	this := RestRestrictionRequest{}
	return &this
}

// GetAccessKeyIds returns the AccessKeyIds field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetAccessKeyIds() []int32 {
	if o == nil || IsNil(o.AccessKeyIds) {
		var ret []int32
		return ret
	}
	return o.AccessKeyIds
}

// GetAccessKeyIdsOk returns a tuple with the AccessKeyIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetAccessKeyIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.AccessKeyIds) {
		return nil, false
	}
	return o.AccessKeyIds, true
}

// HasAccessKeyIds returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasAccessKeyIds() bool {
	if o != nil && !IsNil(o.AccessKeyIds) {
		return true
	}

	return false
}

// SetAccessKeyIds gets a reference to the given []int32 and assigns it to the AccessKeyIds field.
func (o *RestRestrictionRequest) SetAccessKeyIds(v []int32) {
	o.AccessKeyIds = v
}

// GetAccessKeys returns the AccessKeys field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetAccessKeys() []RestSshAccessKey {
	if o == nil || IsNil(o.AccessKeys) {
		var ret []RestSshAccessKey
		return ret
	}
	return o.AccessKeys
}

// GetAccessKeysOk returns a tuple with the AccessKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetAccessKeysOk() ([]RestSshAccessKey, bool) {
	if o == nil || IsNil(o.AccessKeys) {
		return nil, false
	}
	return o.AccessKeys, true
}

// HasAccessKeys returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasAccessKeys() bool {
	if o != nil && !IsNil(o.AccessKeys) {
		return true
	}

	return false
}

// SetAccessKeys gets a reference to the given []RestSshAccessKey and assigns it to the AccessKeys field.
func (o *RestRestrictionRequest) SetAccessKeys(v []RestSshAccessKey) {
	o.AccessKeys = v
}

// GetGroupNames returns the GroupNames field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetGroupNames() []string {
	if o == nil || IsNil(o.GroupNames) {
		var ret []string
		return ret
	}
	return o.GroupNames
}

// GetGroupNamesOk returns a tuple with the GroupNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetGroupNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupNames) {
		return nil, false
	}
	return o.GroupNames, true
}

// HasGroupNames returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasGroupNames() bool {
	if o != nil && !IsNil(o.GroupNames) {
		return true
	}

	return false
}

// SetGroupNames gets a reference to the given []string and assigns it to the GroupNames field.
func (o *RestRestrictionRequest) SetGroupNames(v []string) {
	o.GroupNames = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetGroups() []string {
	if o == nil || IsNil(o.Groups) {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *RestRestrictionRequest) SetGroups(v []string) {
	o.Groups = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RestRestrictionRequest) SetId(v int32) {
	o.Id = &v
}

// GetMatcher returns the Matcher field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetMatcher() UpdatePullRequestCondition1RequestSourceMatcher {
	if o == nil || IsNil(o.Matcher) {
		var ret UpdatePullRequestCondition1RequestSourceMatcher
		return ret
	}
	return *o.Matcher
}

// GetMatcherOk returns a tuple with the Matcher field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetMatcherOk() (*UpdatePullRequestCondition1RequestSourceMatcher, bool) {
	if o == nil || IsNil(o.Matcher) {
		return nil, false
	}
	return o.Matcher, true
}

// HasMatcher returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasMatcher() bool {
	if o != nil && !IsNil(o.Matcher) {
		return true
	}

	return false
}

// SetMatcher gets a reference to the given UpdatePullRequestCondition1RequestSourceMatcher and assigns it to the Matcher field.
func (o *RestRestrictionRequest) SetMatcher(v UpdatePullRequestCondition1RequestSourceMatcher) {
	o.Matcher = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetScope() RestPullRequestConditionScope {
	if o == nil || IsNil(o.Scope) {
		var ret RestPullRequestConditionScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetScopeOk() (*RestPullRequestConditionScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given RestPullRequestConditionScope and assigns it to the Scope field.
func (o *RestRestrictionRequest) SetScope(v RestPullRequestConditionScope) {
	o.Scope = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RestRestrictionRequest) SetType(v string) {
	o.Type = &v
}

// GetUserSlugs returns the UserSlugs field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetUserSlugs() []string {
	if o == nil || IsNil(o.UserSlugs) {
		var ret []string
		return ret
	}
	return o.UserSlugs
}

// GetUserSlugsOk returns a tuple with the UserSlugs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetUserSlugsOk() ([]string, bool) {
	if o == nil || IsNil(o.UserSlugs) {
		return nil, false
	}
	return o.UserSlugs, true
}

// HasUserSlugs returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasUserSlugs() bool {
	if o != nil && !IsNil(o.UserSlugs) {
		return true
	}

	return false
}

// SetUserSlugs gets a reference to the given []string and assigns it to the UserSlugs field.
func (o *RestRestrictionRequest) SetUserSlugs(v []string) {
	o.UserSlugs = v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *RestRestrictionRequest) GetUsers() []RestApplicationUser {
	if o == nil || IsNil(o.Users) {
		var ret []RestApplicationUser
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestRestrictionRequest) GetUsersOk() ([]RestApplicationUser, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *RestRestrictionRequest) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []RestApplicationUser and assigns it to the Users field.
func (o *RestRestrictionRequest) SetUsers(v []RestApplicationUser) {
	o.Users = v
}

func (o RestRestrictionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestRestrictionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKeyIds) {
		toSerialize["accessKeyIds"] = o.AccessKeyIds
	}
	if !IsNil(o.AccessKeys) {
		toSerialize["accessKeys"] = o.AccessKeys
	}
	if !IsNil(o.GroupNames) {
		toSerialize["groupNames"] = o.GroupNames
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Matcher) {
		toSerialize["matcher"] = o.Matcher
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserSlugs) {
		toSerialize["userSlugs"] = o.UserSlugs
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableRestRestrictionRequest struct {
	value *RestRestrictionRequest
	isSet bool
}

func (v NullableRestRestrictionRequest) Get() *RestRestrictionRequest {
	return v.value
}

func (v *NullableRestRestrictionRequest) Set(val *RestRestrictionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestRestrictionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestRestrictionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestRestrictionRequest(val *RestRestrictionRequest) *NullableRestRestrictionRequest {
	return &NullableRestRestrictionRequest{value: val, isSet: true}
}

func (v NullableRestRestrictionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestRestrictionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


