/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestSecretScanningRuleSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestSecretScanningRuleSetRequest{}

// RestSecretScanningRuleSetRequest struct for RestSecretScanningRuleSetRequest
type RestSecretScanningRuleSetRequest struct {
	// Regular expression for matching a secret on a code line
	LineRegex *string `json:"lineRegex,omitempty"`
	// Human readable name for the rule
	Name *string `json:"name,omitempty"`
	// Regular expression matching file names
	PathRegex *string `json:"pathRegex,omitempty"`
}

// NewRestSecretScanningRuleSetRequest instantiates a new RestSecretScanningRuleSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestSecretScanningRuleSetRequest() *RestSecretScanningRuleSetRequest {
	this := RestSecretScanningRuleSetRequest{}
	return &this
}

// NewRestSecretScanningRuleSetRequestWithDefaults instantiates a new RestSecretScanningRuleSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestSecretScanningRuleSetRequestWithDefaults() *RestSecretScanningRuleSetRequest {
	this := RestSecretScanningRuleSetRequest{}
	return &this
}

// GetLineRegex returns the LineRegex field value if set, zero value otherwise.
func (o *RestSecretScanningRuleSetRequest) GetLineRegex() string {
	if o == nil || IsNil(o.LineRegex) {
		var ret string
		return ret
	}
	return *o.LineRegex
}

// GetLineRegexOk returns a tuple with the LineRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSecretScanningRuleSetRequest) GetLineRegexOk() (*string, bool) {
	if o == nil || IsNil(o.LineRegex) {
		return nil, false
	}
	return o.LineRegex, true
}

// HasLineRegex returns a boolean if a field has been set.
func (o *RestSecretScanningRuleSetRequest) HasLineRegex() bool {
	if o != nil && !IsNil(o.LineRegex) {
		return true
	}

	return false
}

// SetLineRegex gets a reference to the given string and assigns it to the LineRegex field.
func (o *RestSecretScanningRuleSetRequest) SetLineRegex(v string) {
	o.LineRegex = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RestSecretScanningRuleSetRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSecretScanningRuleSetRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RestSecretScanningRuleSetRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RestSecretScanningRuleSetRequest) SetName(v string) {
	o.Name = &v
}

// GetPathRegex returns the PathRegex field value if set, zero value otherwise.
func (o *RestSecretScanningRuleSetRequest) GetPathRegex() string {
	if o == nil || IsNil(o.PathRegex) {
		var ret string
		return ret
	}
	return *o.PathRegex
}

// GetPathRegexOk returns a tuple with the PathRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSecretScanningRuleSetRequest) GetPathRegexOk() (*string, bool) {
	if o == nil || IsNil(o.PathRegex) {
		return nil, false
	}
	return o.PathRegex, true
}

// HasPathRegex returns a boolean if a field has been set.
func (o *RestSecretScanningRuleSetRequest) HasPathRegex() bool {
	if o != nil && !IsNil(o.PathRegex) {
		return true
	}

	return false
}

// SetPathRegex gets a reference to the given string and assigns it to the PathRegex field.
func (o *RestSecretScanningRuleSetRequest) SetPathRegex(v string) {
	o.PathRegex = &v
}

func (o RestSecretScanningRuleSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestSecretScanningRuleSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LineRegex) {
		toSerialize["lineRegex"] = o.LineRegex
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PathRegex) {
		toSerialize["pathRegex"] = o.PathRegex
	}
	return toSerialize, nil
}

type NullableRestSecretScanningRuleSetRequest struct {
	value *RestSecretScanningRuleSetRequest
	isSet bool
}

func (v NullableRestSecretScanningRuleSetRequest) Get() *RestSecretScanningRuleSetRequest {
	return v.value
}

func (v *NullableRestSecretScanningRuleSetRequest) Set(val *RestSecretScanningRuleSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestSecretScanningRuleSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestSecretScanningRuleSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestSecretScanningRuleSetRequest(val *RestSecretScanningRuleSetRequest) *NullableRestSecretScanningRuleSetRequest {
	return &NullableRestSecretScanningRuleSetRequest{value: val, isSet: true}
}

func (v NullableRestSecretScanningRuleSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestSecretScanningRuleSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


