/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestSetInsightReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestSetInsightReportRequest{}

// RestSetInsightReportRequest struct for RestSetInsightReportRequest
type RestSetInsightReportRequest struct {
	CoverageProviderKey *string `json:"coverageProviderKey,omitempty"`
	CreatedDate *int64 `json:"createdDate,omitempty"`
	Data []RestInsightReportData `json:"data"`
	Details *string `json:"details,omitempty"`
	Link *string `json:"link,omitempty"`
	LogoUrl *string `json:"logoUrl,omitempty"`
	Reporter *string `json:"reporter,omitempty"`
	Result *string `json:"result,omitempty" validate:"regexp=FAIL|PASS"`
	Title string `json:"title"`
}

type _RestSetInsightReportRequest RestSetInsightReportRequest

// NewRestSetInsightReportRequest instantiates a new RestSetInsightReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestSetInsightReportRequest(data []RestInsightReportData, title string) *RestSetInsightReportRequest {
	this := RestSetInsightReportRequest{}
	this.Data = data
	this.Title = title
	return &this
}

// NewRestSetInsightReportRequestWithDefaults instantiates a new RestSetInsightReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestSetInsightReportRequestWithDefaults() *RestSetInsightReportRequest {
	this := RestSetInsightReportRequest{}
	return &this
}

// GetCoverageProviderKey returns the CoverageProviderKey field value if set, zero value otherwise.
func (o *RestSetInsightReportRequest) GetCoverageProviderKey() string {
	if o == nil || IsNil(o.CoverageProviderKey) {
		var ret string
		return ret
	}
	return *o.CoverageProviderKey
}

// GetCoverageProviderKeyOk returns a tuple with the CoverageProviderKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetCoverageProviderKeyOk() (*string, bool) {
	if o == nil || IsNil(o.CoverageProviderKey) {
		return nil, false
	}
	return o.CoverageProviderKey, true
}

// HasCoverageProviderKey returns a boolean if a field has been set.
func (o *RestSetInsightReportRequest) HasCoverageProviderKey() bool {
	if o != nil && !IsNil(o.CoverageProviderKey) {
		return true
	}

	return false
}

// SetCoverageProviderKey gets a reference to the given string and assigns it to the CoverageProviderKey field.
func (o *RestSetInsightReportRequest) SetCoverageProviderKey(v string) {
	o.CoverageProviderKey = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *RestSetInsightReportRequest) GetCreatedDate() int64 {
	if o == nil || IsNil(o.CreatedDate) {
		var ret int64
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetCreatedDateOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *RestSetInsightReportRequest) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given int64 and assigns it to the CreatedDate field.
func (o *RestSetInsightReportRequest) SetCreatedDate(v int64) {
	o.CreatedDate = &v
}

// GetData returns the Data field value
func (o *RestSetInsightReportRequest) GetData() []RestInsightReportData {
	if o == nil {
		var ret []RestInsightReportData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetDataOk() ([]RestInsightReportData, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *RestSetInsightReportRequest) SetData(v []RestInsightReportData) {
	o.Data = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *RestSetInsightReportRequest) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *RestSetInsightReportRequest) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *RestSetInsightReportRequest) SetDetails(v string) {
	o.Details = &v
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *RestSetInsightReportRequest) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *RestSetInsightReportRequest) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *RestSetInsightReportRequest) SetLink(v string) {
	o.Link = &v
}

// GetLogoUrl returns the LogoUrl field value if set, zero value otherwise.
func (o *RestSetInsightReportRequest) GetLogoUrl() string {
	if o == nil || IsNil(o.LogoUrl) {
		var ret string
		return ret
	}
	return *o.LogoUrl
}

// GetLogoUrlOk returns a tuple with the LogoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetLogoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.LogoUrl) {
		return nil, false
	}
	return o.LogoUrl, true
}

// HasLogoUrl returns a boolean if a field has been set.
func (o *RestSetInsightReportRequest) HasLogoUrl() bool {
	if o != nil && !IsNil(o.LogoUrl) {
		return true
	}

	return false
}

// SetLogoUrl gets a reference to the given string and assigns it to the LogoUrl field.
func (o *RestSetInsightReportRequest) SetLogoUrl(v string) {
	o.LogoUrl = &v
}

// GetReporter returns the Reporter field value if set, zero value otherwise.
func (o *RestSetInsightReportRequest) GetReporter() string {
	if o == nil || IsNil(o.Reporter) {
		var ret string
		return ret
	}
	return *o.Reporter
}

// GetReporterOk returns a tuple with the Reporter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetReporterOk() (*string, bool) {
	if o == nil || IsNil(o.Reporter) {
		return nil, false
	}
	return o.Reporter, true
}

// HasReporter returns a boolean if a field has been set.
func (o *RestSetInsightReportRequest) HasReporter() bool {
	if o != nil && !IsNil(o.Reporter) {
		return true
	}

	return false
}

// SetReporter gets a reference to the given string and assigns it to the Reporter field.
func (o *RestSetInsightReportRequest) SetReporter(v string) {
	o.Reporter = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *RestSetInsightReportRequest) GetResult() string {
	if o == nil || IsNil(o.Result) {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetResultOk() (*string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *RestSetInsightReportRequest) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *RestSetInsightReportRequest) SetResult(v string) {
	o.Result = &v
}

// GetTitle returns the Title field value
func (o *RestSetInsightReportRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *RestSetInsightReportRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *RestSetInsightReportRequest) SetTitle(v string) {
	o.Title = v
}

func (o RestSetInsightReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestSetInsightReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CoverageProviderKey) {
		toSerialize["coverageProviderKey"] = o.CoverageProviderKey
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	toSerialize["data"] = o.Data
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !IsNil(o.LogoUrl) {
		toSerialize["logoUrl"] = o.LogoUrl
	}
	if !IsNil(o.Reporter) {
		toSerialize["reporter"] = o.Reporter
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *RestSetInsightReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestSetInsightReportRequest := _RestSetInsightReportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestSetInsightReportRequest)

	if err != nil {
		return err
	}

	*o = RestSetInsightReportRequest(varRestSetInsightReportRequest)

	return err
}

type NullableRestSetInsightReportRequest struct {
	value *RestSetInsightReportRequest
	isSet bool
}

func (v NullableRestSetInsightReportRequest) Get() *RestSetInsightReportRequest {
	return v.value
}

func (v *NullableRestSetInsightReportRequest) Set(val *RestSetInsightReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestSetInsightReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestSetInsightReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestSetInsightReportRequest(val *RestSetInsightReportRequest) *NullableRestSetInsightReportRequest {
	return &NullableRestSetInsightReportRequest{value: val, isSet: true}
}

func (v NullableRestSetInsightReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestSetInsightReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


