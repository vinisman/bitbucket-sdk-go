/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestSshAccessKeyLocations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestSshAccessKeyLocations{}

// RestSshAccessKeyLocations struct for RestSshAccessKeyLocations
type RestSshAccessKeyLocations struct {
	Projects *RestProject `json:"projects,omitempty"`
	Repositories *RestRepository `json:"repositories,omitempty"`
}

// NewRestSshAccessKeyLocations instantiates a new RestSshAccessKeyLocations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestSshAccessKeyLocations() *RestSshAccessKeyLocations {
	this := RestSshAccessKeyLocations{}
	return &this
}

// NewRestSshAccessKeyLocationsWithDefaults instantiates a new RestSshAccessKeyLocations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestSshAccessKeyLocationsWithDefaults() *RestSshAccessKeyLocations {
	this := RestSshAccessKeyLocations{}
	return &this
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *RestSshAccessKeyLocations) GetProjects() RestProject {
	if o == nil || IsNil(o.Projects) {
		var ret RestProject
		return ret
	}
	return *o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSshAccessKeyLocations) GetProjectsOk() (*RestProject, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *RestSshAccessKeyLocations) HasProjects() bool {
	if o != nil && !IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given RestProject and assigns it to the Projects field.
func (o *RestSshAccessKeyLocations) SetProjects(v RestProject) {
	o.Projects = &v
}

// GetRepositories returns the Repositories field value if set, zero value otherwise.
func (o *RestSshAccessKeyLocations) GetRepositories() RestRepository {
	if o == nil || IsNil(o.Repositories) {
		var ret RestRepository
		return ret
	}
	return *o.Repositories
}

// GetRepositoriesOk returns a tuple with the Repositories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSshAccessKeyLocations) GetRepositoriesOk() (*RestRepository, bool) {
	if o == nil || IsNil(o.Repositories) {
		return nil, false
	}
	return o.Repositories, true
}

// HasRepositories returns a boolean if a field has been set.
func (o *RestSshAccessKeyLocations) HasRepositories() bool {
	if o != nil && !IsNil(o.Repositories) {
		return true
	}

	return false
}

// SetRepositories gets a reference to the given RestRepository and assigns it to the Repositories field.
func (o *RestSshAccessKeyLocations) SetRepositories(v RestRepository) {
	o.Repositories = &v
}

func (o RestSshAccessKeyLocations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestSshAccessKeyLocations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}
	if !IsNil(o.Repositories) {
		toSerialize["repositories"] = o.Repositories
	}
	return toSerialize, nil
}

type NullableRestSshAccessKeyLocations struct {
	value *RestSshAccessKeyLocations
	isSet bool
}

func (v NullableRestSshAccessKeyLocations) Get() *RestSshAccessKeyLocations {
	return v.value
}

func (v *NullableRestSshAccessKeyLocations) Set(val *RestSshAccessKeyLocations) {
	v.value = val
	v.isSet = true
}

func (v NullableRestSshAccessKeyLocations) IsSet() bool {
	return v.isSet
}

func (v *NullableRestSshAccessKeyLocations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestSshAccessKeyLocations(val *RestSshAccessKeyLocations) *NullableRestSshAccessKeyLocations {
	return &NullableRestSshAccessKeyLocations{value: val, isSet: true}
}

func (v NullableRestSshAccessKeyLocations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestSshAccessKeyLocations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


