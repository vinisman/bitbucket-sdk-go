/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RestSshCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestSshCredentials{}

// RestSshCredentials struct for RestSshCredentials
type RestSshCredentials struct {
	// The key algorithm, if passing in a legacy X.509 encoded key. Do not specify for OpenSSH encoded keys
	Algorithm *string `json:"algorithm,omitempty"`
	// The public key text in the OpenSSH format. The algorithm must be specified in case of the legacy X.509 keys
	PublicKey string `json:"publicKey"`
	Username *string `json:"username,omitempty"`
}

type _RestSshCredentials RestSshCredentials

// NewRestSshCredentials instantiates a new RestSshCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestSshCredentials(publicKey string) *RestSshCredentials {
	this := RestSshCredentials{}
	this.PublicKey = publicKey
	return &this
}

// NewRestSshCredentialsWithDefaults instantiates a new RestSshCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestSshCredentialsWithDefaults() *RestSshCredentials {
	this := RestSshCredentials{}
	return &this
}

// GetAlgorithm returns the Algorithm field value if set, zero value otherwise.
func (o *RestSshCredentials) GetAlgorithm() string {
	if o == nil || IsNil(o.Algorithm) {
		var ret string
		return ret
	}
	return *o.Algorithm
}

// GetAlgorithmOk returns a tuple with the Algorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSshCredentials) GetAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.Algorithm) {
		return nil, false
	}
	return o.Algorithm, true
}

// HasAlgorithm returns a boolean if a field has been set.
func (o *RestSshCredentials) HasAlgorithm() bool {
	if o != nil && !IsNil(o.Algorithm) {
		return true
	}

	return false
}

// SetAlgorithm gets a reference to the given string and assigns it to the Algorithm field.
func (o *RestSshCredentials) SetAlgorithm(v string) {
	o.Algorithm = &v
}

// GetPublicKey returns the PublicKey field value
func (o *RestSshCredentials) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *RestSshCredentials) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *RestSshCredentials) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RestSshCredentials) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSshCredentials) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RestSshCredentials) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RestSshCredentials) SetUsername(v string) {
	o.Username = &v
}

func (o RestSshCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestSshCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Algorithm) {
		toSerialize["algorithm"] = o.Algorithm
	}
	toSerialize["publicKey"] = o.PublicKey
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

func (o *RestSshCredentials) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"publicKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRestSshCredentials := _RestSshCredentials{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRestSshCredentials)

	if err != nil {
		return err
	}

	*o = RestSshCredentials(varRestSshCredentials)

	return err
}

type NullableRestSshCredentials struct {
	value *RestSshCredentials
	isSet bool
}

func (v NullableRestSshCredentials) Get() *RestSshCredentials {
	return v.value
}

func (v *NullableRestSshCredentials) Set(val *RestSshCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableRestSshCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableRestSshCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestSshCredentials(val *RestSshCredentials) *NullableRestSshCredentials {
	return &NullableRestSshCredentials{value: val, isSet: true}
}

func (v NullableRestSshCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestSshCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


