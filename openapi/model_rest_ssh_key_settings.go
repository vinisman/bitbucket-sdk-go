/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestSshKeySettings type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestSshKeySettings{}

// RestSshKeySettings struct for RestSshKeySettings
type RestSshKeySettings struct {
	KeyTypeRestrictions []RestSshKeyTypeRestriction `json:"keyTypeRestrictions,omitempty"`
	MaxExpiryDays *int32 `json:"maxExpiryDays,omitempty"`
}

// NewRestSshKeySettings instantiates a new RestSshKeySettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestSshKeySettings() *RestSshKeySettings {
	this := RestSshKeySettings{}
	return &this
}

// NewRestSshKeySettingsWithDefaults instantiates a new RestSshKeySettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestSshKeySettingsWithDefaults() *RestSshKeySettings {
	this := RestSshKeySettings{}
	return &this
}

// GetKeyTypeRestrictions returns the KeyTypeRestrictions field value if set, zero value otherwise.
func (o *RestSshKeySettings) GetKeyTypeRestrictions() []RestSshKeyTypeRestriction {
	if o == nil || IsNil(o.KeyTypeRestrictions) {
		var ret []RestSshKeyTypeRestriction
		return ret
	}
	return o.KeyTypeRestrictions
}

// GetKeyTypeRestrictionsOk returns a tuple with the KeyTypeRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSshKeySettings) GetKeyTypeRestrictionsOk() ([]RestSshKeyTypeRestriction, bool) {
	if o == nil || IsNil(o.KeyTypeRestrictions) {
		return nil, false
	}
	return o.KeyTypeRestrictions, true
}

// HasKeyTypeRestrictions returns a boolean if a field has been set.
func (o *RestSshKeySettings) HasKeyTypeRestrictions() bool {
	if o != nil && !IsNil(o.KeyTypeRestrictions) {
		return true
	}

	return false
}

// SetKeyTypeRestrictions gets a reference to the given []RestSshKeyTypeRestriction and assigns it to the KeyTypeRestrictions field.
func (o *RestSshKeySettings) SetKeyTypeRestrictions(v []RestSshKeyTypeRestriction) {
	o.KeyTypeRestrictions = v
}

// GetMaxExpiryDays returns the MaxExpiryDays field value if set, zero value otherwise.
func (o *RestSshKeySettings) GetMaxExpiryDays() int32 {
	if o == nil || IsNil(o.MaxExpiryDays) {
		var ret int32
		return ret
	}
	return *o.MaxExpiryDays
}

// GetMaxExpiryDaysOk returns a tuple with the MaxExpiryDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestSshKeySettings) GetMaxExpiryDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxExpiryDays) {
		return nil, false
	}
	return o.MaxExpiryDays, true
}

// HasMaxExpiryDays returns a boolean if a field has been set.
func (o *RestSshKeySettings) HasMaxExpiryDays() bool {
	if o != nil && !IsNil(o.MaxExpiryDays) {
		return true
	}

	return false
}

// SetMaxExpiryDays gets a reference to the given int32 and assigns it to the MaxExpiryDays field.
func (o *RestSshKeySettings) SetMaxExpiryDays(v int32) {
	o.MaxExpiryDays = &v
}

func (o RestSshKeySettings) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestSshKeySettings) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeyTypeRestrictions) {
		toSerialize["keyTypeRestrictions"] = o.KeyTypeRestrictions
	}
	if !IsNil(o.MaxExpiryDays) {
		toSerialize["maxExpiryDays"] = o.MaxExpiryDays
	}
	return toSerialize, nil
}

type NullableRestSshKeySettings struct {
	value *RestSshKeySettings
	isSet bool
}

func (v NullableRestSshKeySettings) Get() *RestSshKeySettings {
	return v.value
}

func (v *NullableRestSshKeySettings) Set(val *RestSshKeySettings) {
	v.value = val
	v.isSet = true
}

func (v NullableRestSshKeySettings) IsSet() bool {
	return v.isSet
}

func (v *NullableRestSshKeySettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestSshKeySettings(val *RestSshKeySettings) *NullableRestSshKeySettings {
	return &NullableRestSshKeySettings{value: val, isSet: true}
}

func (v NullableRestSshKeySettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestSshKeySettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


