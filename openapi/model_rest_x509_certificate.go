/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestX509Certificate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestX509Certificate{}

// RestX509Certificate struct for RestX509Certificate
type RestX509Certificate struct {
	// The SHA-256 fingerprint of the X.509 certificate
	Fingerprint *string `json:"fingerprint,omitempty"`
	// The ID of the X.509 certificate
	Id *int64 `json:"id,omitempty"`
}

// NewRestX509Certificate instantiates a new RestX509Certificate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestX509Certificate() *RestX509Certificate {
	this := RestX509Certificate{}
	return &this
}

// NewRestX509CertificateWithDefaults instantiates a new RestX509Certificate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestX509CertificateWithDefaults() *RestX509Certificate {
	this := RestX509Certificate{}
	return &this
}

// GetFingerprint returns the Fingerprint field value if set, zero value otherwise.
func (o *RestX509Certificate) GetFingerprint() string {
	if o == nil || IsNil(o.Fingerprint) {
		var ret string
		return ret
	}
	return *o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestX509Certificate) GetFingerprintOk() (*string, bool) {
	if o == nil || IsNil(o.Fingerprint) {
		return nil, false
	}
	return o.Fingerprint, true
}

// HasFingerprint returns a boolean if a field has been set.
func (o *RestX509Certificate) HasFingerprint() bool {
	if o != nil && !IsNil(o.Fingerprint) {
		return true
	}

	return false
}

// SetFingerprint gets a reference to the given string and assigns it to the Fingerprint field.
func (o *RestX509Certificate) SetFingerprint(v string) {
	o.Fingerprint = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestX509Certificate) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestX509Certificate) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestX509Certificate) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *RestX509Certificate) SetId(v int64) {
	o.Id = &v
}

func (o RestX509Certificate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestX509Certificate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fingerprint) {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableRestX509Certificate struct {
	value *RestX509Certificate
	isSet bool
}

func (v NullableRestX509Certificate) Get() *RestX509Certificate {
	return v.value
}

func (v *NullableRestX509Certificate) Set(val *RestX509Certificate) {
	v.value = val
	v.isSet = true
}

func (v NullableRestX509Certificate) IsSet() bool {
	return v.isSet
}

func (v *NullableRestX509Certificate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestX509Certificate(val *RestX509Certificate) *NullableRestX509Certificate {
	return &NullableRestX509Certificate{value: val, isSet: true}
}

func (v NullableRestX509Certificate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestX509Certificate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


