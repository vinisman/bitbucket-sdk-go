/*
Bitbucket Data Center

This is the reference document for the Atlassian Bitbucket REST API. The REST API is for developers who want to:    - integrate Bitbucket with other applications;   - create scripts that interact with Bitbucket; or   - develop plugins that enhance the Bitbucket UI, using REST to interact with the backend.    You can read more about developing Bitbucket plugins in the [Bitbucket Developer Documentation](https://developer.atlassian.com/bitbucket/server/docs/latest/).

API version: 9.6
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the StartMeshMigrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StartMeshMigrationRequest{}

// StartMeshMigrationRequest struct for StartMeshMigrationRequest
type StartMeshMigrationRequest struct {
	All *bool `json:"all,omitempty"`
	MaxBytesPerSecond *StartMeshMigrationRequestMaxBytesPerSecond `json:"maxBytesPerSecond,omitempty"`
	ProjectIds []int32 `json:"projectIds,omitempty"`
	RepositoryIds []int32 `json:"repositoryIds,omitempty"`
}

// NewStartMeshMigrationRequest instantiates a new StartMeshMigrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStartMeshMigrationRequest() *StartMeshMigrationRequest {
	this := StartMeshMigrationRequest{}
	return &this
}

// NewStartMeshMigrationRequestWithDefaults instantiates a new StartMeshMigrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStartMeshMigrationRequestWithDefaults() *StartMeshMigrationRequest {
	this := StartMeshMigrationRequest{}
	return &this
}

// GetAll returns the All field value if set, zero value otherwise.
func (o *StartMeshMigrationRequest) GetAll() bool {
	if o == nil || IsNil(o.All) {
		var ret bool
		return ret
	}
	return *o.All
}

// GetAllOk returns a tuple with the All field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartMeshMigrationRequest) GetAllOk() (*bool, bool) {
	if o == nil || IsNil(o.All) {
		return nil, false
	}
	return o.All, true
}

// HasAll returns a boolean if a field has been set.
func (o *StartMeshMigrationRequest) HasAll() bool {
	if o != nil && !IsNil(o.All) {
		return true
	}

	return false
}

// SetAll gets a reference to the given bool and assigns it to the All field.
func (o *StartMeshMigrationRequest) SetAll(v bool) {
	o.All = &v
}

// GetMaxBytesPerSecond returns the MaxBytesPerSecond field value if set, zero value otherwise.
func (o *StartMeshMigrationRequest) GetMaxBytesPerSecond() StartMeshMigrationRequestMaxBytesPerSecond {
	if o == nil || IsNil(o.MaxBytesPerSecond) {
		var ret StartMeshMigrationRequestMaxBytesPerSecond
		return ret
	}
	return *o.MaxBytesPerSecond
}

// GetMaxBytesPerSecondOk returns a tuple with the MaxBytesPerSecond field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartMeshMigrationRequest) GetMaxBytesPerSecondOk() (*StartMeshMigrationRequestMaxBytesPerSecond, bool) {
	if o == nil || IsNil(o.MaxBytesPerSecond) {
		return nil, false
	}
	return o.MaxBytesPerSecond, true
}

// HasMaxBytesPerSecond returns a boolean if a field has been set.
func (o *StartMeshMigrationRequest) HasMaxBytesPerSecond() bool {
	if o != nil && !IsNil(o.MaxBytesPerSecond) {
		return true
	}

	return false
}

// SetMaxBytesPerSecond gets a reference to the given StartMeshMigrationRequestMaxBytesPerSecond and assigns it to the MaxBytesPerSecond field.
func (o *StartMeshMigrationRequest) SetMaxBytesPerSecond(v StartMeshMigrationRequestMaxBytesPerSecond) {
	o.MaxBytesPerSecond = &v
}

// GetProjectIds returns the ProjectIds field value if set, zero value otherwise.
func (o *StartMeshMigrationRequest) GetProjectIds() []int32 {
	if o == nil || IsNil(o.ProjectIds) {
		var ret []int32
		return ret
	}
	return o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartMeshMigrationRequest) GetProjectIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.ProjectIds) {
		return nil, false
	}
	return o.ProjectIds, true
}

// HasProjectIds returns a boolean if a field has been set.
func (o *StartMeshMigrationRequest) HasProjectIds() bool {
	if o != nil && !IsNil(o.ProjectIds) {
		return true
	}

	return false
}

// SetProjectIds gets a reference to the given []int32 and assigns it to the ProjectIds field.
func (o *StartMeshMigrationRequest) SetProjectIds(v []int32) {
	o.ProjectIds = v
}

// GetRepositoryIds returns the RepositoryIds field value if set, zero value otherwise.
func (o *StartMeshMigrationRequest) GetRepositoryIds() []int32 {
	if o == nil || IsNil(o.RepositoryIds) {
		var ret []int32
		return ret
	}
	return o.RepositoryIds
}

// GetRepositoryIdsOk returns a tuple with the RepositoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StartMeshMigrationRequest) GetRepositoryIdsOk() ([]int32, bool) {
	if o == nil || IsNil(o.RepositoryIds) {
		return nil, false
	}
	return o.RepositoryIds, true
}

// HasRepositoryIds returns a boolean if a field has been set.
func (o *StartMeshMigrationRequest) HasRepositoryIds() bool {
	if o != nil && !IsNil(o.RepositoryIds) {
		return true
	}

	return false
}

// SetRepositoryIds gets a reference to the given []int32 and assigns it to the RepositoryIds field.
func (o *StartMeshMigrationRequest) SetRepositoryIds(v []int32) {
	o.RepositoryIds = v
}

func (o StartMeshMigrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StartMeshMigrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.All) {
		toSerialize["all"] = o.All
	}
	if !IsNil(o.MaxBytesPerSecond) {
		toSerialize["maxBytesPerSecond"] = o.MaxBytesPerSecond
	}
	if !IsNil(o.ProjectIds) {
		toSerialize["projectIds"] = o.ProjectIds
	}
	if !IsNil(o.RepositoryIds) {
		toSerialize["repositoryIds"] = o.RepositoryIds
	}
	return toSerialize, nil
}

type NullableStartMeshMigrationRequest struct {
	value *StartMeshMigrationRequest
	isSet bool
}

func (v NullableStartMeshMigrationRequest) Get() *StartMeshMigrationRequest {
	return v.value
}

func (v *NullableStartMeshMigrationRequest) Set(val *StartMeshMigrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableStartMeshMigrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableStartMeshMigrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStartMeshMigrationRequest(val *StartMeshMigrationRequest) *NullableStartMeshMigrationRequest {
	return &NullableStartMeshMigrationRequest{value: val, isSet: true}
}

func (v NullableStartMeshMigrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStartMeshMigrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


