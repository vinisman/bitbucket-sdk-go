/*
Bitbucket Data Center

Testing JiraIntegrationAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package test

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	openapiclient "github.com/vinisman/bitbucket-sdk-go/openapi"
)

func Test_openapi_JiraIntegrationAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test JiraIntegrationAPIService CreateIssue", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var commentId string

		resp, httpRes, err := apiClient.JiraIntegrationAPI.CreateIssue(context.Background(), commentId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JiraIntegrationAPIService GetCommitsByIssueKey", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var issueKey string

		resp, httpRes, err := apiClient.JiraIntegrationAPI.GetCommitsByIssueKey(context.Background(), issueKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JiraIntegrationAPIService GetEnhancedEntityLinkForProject", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var projectKey string

		resp, httpRes, err := apiClient.JiraIntegrationAPI.GetEnhancedEntityLinkForProject(context.Background(), projectKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test JiraIntegrationAPIService GetIssueKeysForPullRequest", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var projectKey string
		var pullRequestId string
		var repositorySlug string

		resp, httpRes, err := apiClient.JiraIntegrationAPI.GetIssueKeysForPullRequest(context.Background(), projectKey, pullRequestId, repositorySlug).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
